{"version":3,"sources":["app/texture-editor/common/Mouse.js","app/texture-editor/editor.js","components/Menu.js","components/editor/Ribbon.js","assets/pencil.svg","components/editor/Brushes.js","components/editor/SideBar.js","components/editor/TextureEditor.js","App.js","reportWebVitals.js","components/NavBar.js","index.js"],"names":["mouse","position","x","y","old","button","state","id","origin","displacement","getPosition","offset","inBounds","moving","clicked","module","exports","loader","PIXI","shared","Graphics","decToHex","c","hex","Number","toString","length","rgbToHex","r","g","b","_","app","brush","style","fill","a","size","resolution","background","width","height","scale","debug","debugElem","document","getElementById","pixels","showGrid","refresh","doBoundUpdate","bounds","type","getCurrentColor","setBrush","setBrushSize","updateBounds","canvasBounds","view","getBoundingClientRect","left","right","top","bottom","startup","onReady","ticker","add","draw","setup","console","log","isWebGLSupported","sayHello","load","updateDebug","pos","Math","floor","innerHTML","JSON","stringify","buffer","painting","mousePos","highlight","graphic","forEach","pixel","stage","removeChild","setPixel","color","i","tint","alpha","splice","updatePixel","clear","getPixel","error","Error","push","index","lineStyle","beginFill","drawRect","endFill","addChild","compose","canvas","createElement","context","getContext","imgData","createImageData","v","data","putImageData","url","toDataURL","link","href","name","value","setAttribute","click","create","children","abs","editor","Menu","props","className","hidden","content","map","item","Ribbon","key","onClick","htmlFor","onChange","event","target","checked","componentDidMount","ribbonContent","addEventListener","obj","parentElement","contains","classList","render","menu","toggle","setResolution","bind","preventDefault","res","isNaN","this","React","Component","Brushes","brushes","icon","pencil","src","alt","SideBar","previewElem","updatePreview","rgba","fetchBrush","backgroundColor","placeholder","updateColor","onKeyPress","match","defaultValue","min","max","controls","maxHeight","scrollHeight","mouseMove_timeout","TextureEditor","getCanvas","parent","oncontextmenu","e","stopPropagation","appendChild","setState","clientX","clientY","clearTimeout","setTimeout","window","m","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NavBar","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.bff59291.chunk.js","sourcesContent":["const mouse = {\r\n    position: {\r\n        x: 0,\r\n        y: 0,\r\n        old: { x: 0, y: 0 }\r\n    },\r\n    button: {\r\n        state: false,\r\n        id: 0,\r\n        origin: { x: null, y: null }\r\n    },\r\n    displacement: () => {\r\n        return {\r\n            x: mouse.position.old.x === null ? 0 : mouse.position.x - mouse.position.old.x,\r\n            y: mouse.position.old.y === null ? 0 : mouse.position.y - mouse.position.old.y\r\n        }\r\n    },\r\n    getPosition: (offset = null) => {\r\n        return offset === null\r\n        ?\r\n        {\r\n            x: mouse.position.x,\r\n            y: mouse.position.y\r\n        }\r\n        :\r\n        {\r\n                x: mouse.position.x - offset.x,\r\n                y: mouse.position.y - offset.y\r\n        }\r\n    },\r\n    inBounds: false,\r\n    moving: false,\r\n    clicked: false\r\n};\r\n\r\nmodule.exports = mouse;","import * as PIXI from 'pixi.js';\r\nimport mouse from './common/Mouse';\r\n\r\nconst loader = PIXI.Loader.shared,\r\n    Graphics = PIXI.Graphics\r\n\r\nfunction decToHex (c) {\r\n    var hex = Number(c).toString(16);\r\n    return hex.length === 1 ? `0${hex}` : hex;\r\n}\r\n\r\n\r\nfunction rgbToHex (r, g, b) {\r\n    return Number(`0x${decToHex(r)}${decToHex(g)}${decToHex(b)}`);\r\n}\r\n\r\nconst _ = {\r\n    /**\r\n     * @type {PIXI.Application}\r\n     */\r\n    app: null,\r\n\r\n    brush: {\r\n        style: 'pencil',\r\n        fill: {\r\n            r: 0, g: 0, b: 0, a: 255\r\n        },\r\n        size: 1\r\n    },\r\n\r\n    resolution: 0,\r\n\r\n    background:[],\r\n\r\n    width: 0,\r\n    height: 0,\r\n    scale : 0,\r\n\r\n    debug : false,\r\n    debugElem : document.getElementById('debug'),\r\n\r\n    pixels :[],\r\n    showGrid : false,\r\n    refresh : false,\r\n\r\n    doBoundUpdate : true,\r\n    bounds : null,\r\n\r\n    type : \"WebGL\",\r\n\r\n    getCurrentColor: () => {\r\n        return {\r\n            r: _.brush.fill.r,\r\n            g: _.brush.fill.g,\r\n            b: _.brush.fill.b,\r\n            a: _.brush.fill.a\r\n        }\r\n    },\r\n\r\n    setBrush: (brush) => {\r\n        _.brush.style = brush;\r\n    },\r\n\r\n    setBrushSize: (size) => {\r\n        _.brush.size = size;\r\n    },\r\n\r\n    updateBounds: () => {\r\n        let canvasBounds = _.app.view.getBoundingClientRect();\r\n\r\n        _.bounds = {\r\n            x: canvasBounds.x,\r\n            y: canvasBounds.y,\r\n            left: canvasBounds.left,\r\n            right: canvasBounds.right,\r\n            top: canvasBounds.top,\r\n            bottom: canvasBounds.bottom,\r\n            width: canvasBounds.width,\r\n            height: canvasBounds.height\r\n        };\r\n\r\n        _.doBoundUpdate = false;\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {PIXI.Application} app \r\n     * @returns {HTMLCanvasElement}\r\n     */\r\n    startup: () => {\r\n        _.onReady(() => _.app.ticker.add(() => _.draw()));\r\n\r\n        return _.app.view;\r\n    },\r\n\r\n    onReady: (setup) => {\r\n        console.log('App ready. Loading.');\r\n\r\n        if (!PIXI.utils.isWebGLSupported()) {\r\n            _.type = \"canvas\";\r\n        }\r\n\r\n        PIXI.utils.sayHello(_.type);\r\n\r\n        loader\r\n            .load(setup);\r\n    },\r\n\r\n    updateDebug: () => {\r\n        if (_.debugElem === null)\r\n            _.debugElem = document.getElementById('debug');\r\n\r\n        if (!_.debug) {\r\n            _.debugElem.innerHTML = \"\";\r\n            return;\r\n        }\r\n\r\n        let pos = mouse.getPosition();\r\n        let x = Math.floor(pos.x / _.scale),\r\n            y = Math.floor(pos.y / _.scale);\r\n\r\n        _.debugElem.innerHTML =\r\n            `Mouse: ${JSON.stringify(pos)} --> ${x}, ${y}<br />` +\r\n            `Brush:<br />` +\r\n            ` - Color: ${JSON.stringify(_.brush.fill)}<br />` +\r\n            ` - Hex: 0x${decToHex(_.brush.fill.r)}${decToHex(_.brush.fill.g)}${decToHex(_.brush.fill.b)}<br />` +\r\n            ` - Style: ${_.brush.style}<br />` +\r\n            `Buffer: ${_.buffer.length}`;\r\n    },\r\n\r\n    buffer: [],\r\n\r\n    painting: {\r\n        mousePos: null,\r\n        highlight: {\r\n            x: 0, y: 0, graphic: null\r\n        }\r\n    },\r\n\r\n    draw: () => {\r\n        _.updateDebug();\r\n\r\n        if (_.refresh) {\r\n            _.pixels.forEach(pixel => {\r\n                _.app.stage.removeChild(pixel.graphic);\r\n                _.setPixel(pixel.x, pixel.y, pixel.color);\r\n            });\r\n            _.refresh = false;\r\n            return;\r\n        }\r\n\r\n        _.buffer.forEach((pixel, i) => {\r\n            pixel.graphic.tint = rgbToHex(pixel.color.r, pixel.color.g, pixel.color.b);\r\n            pixel.graphic.alpha = pixel.color.a;\r\n\r\n            _.buffer.splice(i, 1);\r\n        });\r\n\r\n        _.painting.mousePos = mouse.getPosition();\r\n        _.painting.highlight.x = Math.floor(_.painting.mousePos.x / _.scale);\r\n        _.painting.highlight.y = Math.floor(_.painting.mousePos.y / _.scale);\r\n\r\n        _.painting.highlight.graphic.x = _.painting.highlight.x * _.scale;\r\n        _.painting.highlight.graphic.y = _.painting.highlight.y * _.scale;\r\n\r\n        if (mouse.button.state) {\r\n            if (\r\n                _.painting.highlight.x >= 0 &&\r\n                _.painting.highlight.x < _.resolution &&\r\n                _.painting.highlight.y >= 0 &&\r\n                _.painting.highlight.y < _.resolution\r\n            ) {\r\n                if (mouse.button.id === 0)\r\n                    _.updatePixel(_.painting.highlight.x, _.painting.highlight.y, _.getCurrentColor());\r\n                else if (mouse.button.id === 2)\r\n                    _.updatePixel(_.painting.highlight.x, _.painting.highlight.y, { r: 0, g: 0, b: 0, a: 0 });\r\n            }\r\n\r\n            if (!mouse.inBounds)\r\n                mouse.button.state = false;\r\n        }\r\n\r\n        mouse.clicked = false;\r\n    },\r\n\r\n    clear: () => {\r\n        _.pixels.forEach(pixel => {\r\n            pixel.color = {r: 0, g: 0, b: 0, a: 0};\r\n            pixel.graphic.tint = 0x000000;\r\n            pixel.graphic.alpha = 0;\r\n        });\r\n    },\r\n\r\n    getPixel: (x, y) => {\r\n        return !_.pixels[y * _.resolution + x] ? null : _.pixels[y * _.resolution + x];\r\n    },\r\n\r\n    updatePixel: (x, y, color) => {\r\n        let pixel = _.getPixel(x, y);\r\n        if (pixel === null) {\r\n            console.error(x, y, color);\r\n            throw new Error('pause')\r\n        }\r\n        pixel.color = color;\r\n        _.buffer.push(pixel);\r\n    },\r\n\r\n    setPixel: (x, y, color) => {\r\n        if (!_.getPixel(x, y)) {\r\n            _.pixels[y * _.resolution + x] = {\r\n                color,\r\n                graphic: null,\r\n                x,\r\n                y,\r\n                index: y * _.resolution + x\r\n            }\r\n        }\r\n\r\n        let pixel = _.getPixel(x, y);\r\n\r\n        pixel.graphic = new Graphics();\r\n\r\n        if (_.showGrid)\r\n            pixel.graphic.lineStyle(1, 0x000000, 1);\r\n\r\n        pixel.graphic.beginFill(0xFFFFFF);\r\n        pixel.graphic.drawRect(0, 0, _.scale, _.scale);\r\n        pixel.graphic.endFill();\r\n\r\n        pixel.graphic.tint = rgbToHex(color.r, color.g, color.b);\r\n        pixel.graphic.alpha = color.a / 255;\r\n\r\n        pixel.graphic.x = x * _.scale;\r\n        pixel.graphic.y = y * _.scale;\r\n\r\n        pixel.color = color === null ? {r: 0, g: 0, b: 0, a: 0} : color;\r\n\r\n        _.app.stage.addChild(pixel.graphic);\r\n\r\n        return pixel;\r\n    },\r\n\r\n    compose: () => {\r\n        const canvas = document.createElement('canvas'), context = canvas.getContext('2d');\r\n        canvas.width = _.resolution;\r\n        canvas.height = _.resolution;\r\n\r\n        let imgData = context.createImageData(_.resolution, _.resolution);\r\n\r\n        let color;\r\n        for (let x = 0; x < _.resolution; x++) {\r\n            for (let y = 0; y < _.resolution; y++) {\r\n                let v = (y * _.resolution + x) * 4;\r\n                color = _.getPixel(x, y).color;\r\n\r\n                imgData.data[v] = color.r;\r\n                imgData.data[v + 1] = color.g;\r\n                imgData.data[v + 2] = color.b;\r\n                imgData.data[v + 3] = color.a;\r\n            }\r\n        }\r\n\r\n        context.putImageData(imgData, 0, 0);\r\n\r\n        const url = canvas.toDataURL('image/png');\r\n        let link = document.createElement('a');\r\n        link.href = url;\r\n        \r\n        let name = document.getElementById('image_name').value;\r\n        link.setAttribute('download', `${!!name ? name : 'texture'}.png`);\r\n        link.click();\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {PIXI.Application} app \r\n     */\r\n    create: (app, resolution = 16) => {\r\n        if (_.app !== null)\r\n            while (_.app.stage.children[0])\r\n                _.app.stage.removeChild(_.app.stage.children[0]);\r\n\r\n        _.app = app;\r\n\r\n        _.getCurrentColor();\r\n\r\n        _.resolution = resolution\r\n\r\n        _.width = app.view.width;\r\n        _.height = app.view.height;\r\n        _.scale = _.width / _.resolution;\r\n\r\n        _.pixels = [];\r\n\r\n        _.painting.highlight.graphic = new Graphics();\r\n        _.painting.highlight.graphic.lineStyle(2, 0xFF0000, 1);\r\n        _.painting.highlight.graphic.drawRect(0, 0, _.scale, _.scale);\r\n        _.painting.highlight.graphic.endFill();\r\n\r\n        for (let x = 0; x < _.resolution; x++) {\r\n            for (let y = 0; y < _.resolution; y++) {\r\n                _.background[y * _.resolution + x] = new Graphics();\r\n                _.background[y * _.resolution + x].beginFill(0xFFFFFF);\r\n                _.background[y * _.resolution + x].drawRect(0, 0, _.scale, _.scale);\r\n                _.background[y * _.resolution + x].endFill();\r\n                _.background[y * _.resolution + x].tint = (x % 2 === 0 && y % 2 === 1) || (x % 2 === 1 && y % 2 === 0) ? 0xFFFFFF : 0xDDDDDD;\r\n\r\n                _.background[y * _.resolution + x].x = x * _.scale;\r\n                _.background[y * _.resolution + x].y = y * _.scale;\r\n\r\n                _.app.stage.addChild(_.background[y * _.resolution + x]);\r\n\r\n                _.setPixel(x, y, {\r\n                    r: Math.floor(255 * x / (_.resolution - 1)),\r\n                    g: Math.floor(255 * ((x + y) / 2) / (_.resolution - 1)),\r\n                    b: Math.floor(255 * y / (_.resolution - 1)),\r\n                    a: Math.floor(255 - Math.abs(((255 * x / (_.resolution - 1) + 255 * y / (_.resolution - 1)) / 2) - 128))\r\n                });\r\n            }\r\n        }\r\n\r\n        _.app.stage.addChild(_.painting.highlight.graphic);\r\n\r\n        return _;\r\n    }\r\n}\r\n\r\nconst editor = _;\r\n\r\nexport {\r\n    editor\r\n}","function Menu(props) {\r\n    return (\r\n        <div\r\n            id={props.id}\r\n            className={`menu${!!props.hidden ? ' hidden' : ''}`}\r\n        >\r\n            {props.content.map((item, i) => (\r\n                <div\r\n                    className='menu-item'\r\n                    key={i}\r\n                >\r\n                    {item}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Menu }","import React from 'react';\r\n\r\nimport { Menu } from '../Menu';\r\n\r\nimport './css/ribbon.css';\r\n\r\nclass Ribbon extends React.Component {\r\n\r\n    editor;\r\n\r\n    setResolution(event) {\r\n        event.preventDefault();\r\n        let res = Number(document.getElementById('resolution_input').value)\r\n        if (isNaN(res))\r\n            return;\r\n\r\n        if (res % 16 === 0 && res > 0 && res <= 128)\r\n            this.editor = this.editor.create(this.editor.app, res);\r\n    }\r\n\r\n    content = [\r\n        {\r\n            key: \"File\",\r\n            id: 'file_menu',\r\n            value: (<Menu\r\n                content={[\r\n                    (<div\r\n                        className='menu-button'\r\n                        onClick={\r\n                            () => this.editor.compose()\r\n                        }\r\n                    >\r\n                        Download\r\n                    </div>),\r\n                    // (<div\r\n                    //     className='menu-break'\r\n                    // />),\r\n                    // (<form\r\n                    //     className='menu-button'\r\n                    // >\r\n                    //     <input\r\n                    //         type='text'\r\n                    //         id='resolution_input'\r\n                    //         name='resolution'\r\n                    //         defaultValue='16'\r\n                    //     />\r\n                    //     <input\r\n                    //         type='submit'\r\n                    //         value='Create'\r\n                    //         onClick={this.setResolution}\r\n                    //     />\r\n                    // </form>),\r\n                    (<div\r\n                        className='menu-break'\r\n                    />),\r\n                    (<div\r\n                        className='menu-button'\r\n                    >\r\n                        <label\r\n                            id='debug_check_label'\r\n                            htmlFor='debug-check'\r\n                        >\r\n                            Debug\r\n                        </label>\r\n                        <input\r\n                            name='debug-check'\r\n                            type='checkbox'\r\n                            onChange={\r\n                                (event) => {\r\n                                    this.editor.debug = event.target.checked;\r\n                                }\r\n                            }\r\n                        />\r\n                    </div>)\r\n                ]}\r\n                id='file_menu'\r\n                hidden={true}\r\n            />)\r\n        },\r\n        {\r\n            key: \"Edit\",\r\n            id: 'edit_menu',\r\n            value: (<Menu\r\n                content={[\r\n                    (<div\r\n                        className='menu-button'\r\n                        onClick={\r\n                            () => this.editor.clear()\r\n                        }\r\n                    >\r\n                        Clear\r\n                    </div>)\r\n                ]}\r\n                id='edit_menu'\r\n                hidden={true}\r\n            />)\r\n        },\r\n        {\r\n            key: \"View\",\r\n            id: 'view_menu',\r\n            value: (\r\n                <Menu\r\n                    content={[\r\n                        (<div\r\n                            className='menu-button'\r\n                            onClick={\r\n                                () => {\r\n                                    this.editor.showGrid = !this.editor.showGrid;\r\n                                    this.editor.refresh = true;\r\n                                }\r\n                            }\r\n                        >\r\n                            Toggle Grid\r\n                        </div>)\r\n                    ]}\r\n                    id='view_menu'\r\n                    hidden={true}\r\n                />\r\n            )\r\n        }\r\n    ];\r\n\r\n    componentDidMount = () => {\r\n        let ribbonContent = [];\r\n        this.content.forEach(item => ribbonContent.push(document.getElementById(item.id)));\r\n\r\n        document.addEventListener('click', (event) => {\r\n            ribbonContent.forEach(obj => {\r\n                if (!obj.parentElement.contains(event.target))\r\n                    obj.classList.add('hidden');\r\n            });\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n\r\n        return (\r\n            <div\r\n                className='texture-editor-ribbon'\r\n            >\r\n                {this.content.map(menu => (\r\n                    <div\r\n                        key={menu.key}\r\n                        className='ribbon-menu'\r\n                    >\r\n                        <div\r\n                            className='ribbon-menu-button'\r\n                            onClick={\r\n                                () => {\r\n                                    document.getElementById(menu.id).classList.toggle('hidden');\r\n                                }\r\n                            }\r\n                        >\r\n                            {menu.key}\r\n                        </div>\r\n                        {menu.value}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.editor = props.editor;\r\n\r\n        this.setResolution = this.setResolution.bind(this);\r\n    }\r\n}\r\n\r\nexport { Ribbon }","export default __webpack_public_path__ + \"static/media/pencil.34dc5e45.svg\";","import React from \"react\";\r\n\r\nimport './css/brushes.css';\r\n\r\nimport pencil from '../../assets/pencil.svg';\r\n\r\nclass Brushes extends React.Component {\r\n\r\n    brushes = [\r\n        {\r\n            key: 'pencil',\r\n            icon: pencil\r\n        },\r\n        {\r\n            key: 'paint',\r\n            icon: pencil\r\n        }\r\n    ]\r\n\r\n    editor;\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='brushes-container'\r\n            >\r\n                {this.brushes.map(brush => (\r\n                    <img\r\n                        key={brush.key}\r\n                        src={brush.icon}\r\n                        className='brush-icon'\r\n                        id={`${brush.key}_brush`}\r\n                        alt={brush.key}\r\n                        onClick={\r\n                            () => this.editor.setBrush(brush.key)\r\n                        }\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.editor = props.editor;\r\n    }\r\n}\r\n\r\nexport { Brushes }","import React from \"react\";\r\n\r\nimport './css/sidebar.css';\r\n\r\nclass SideBar extends React.Component {\r\n\r\n    updateColor;\r\n    fetchBrush;\r\n\r\n    previewElem = null;\r\n\r\n    updatePreview = () => {\r\n        let rgba = this.fetchBrush().fill;\r\n        this.previewElem.style.backgroundColor = `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a / 255})`;\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='side-bar-container'\r\n            >\r\n                <div\r\n                    className='debug'\r\n                    id='debug'\r\n                />\r\n\r\n                <div\r\n                    className='color-picker-container'\r\n                >\r\n                    <div\r\n                        className='container-group'\r\n                        id='color_picker_preview_container'\r\n                    >\r\n                        <div\r\n                            className='color-picker-preview'\r\n                            id='color_picker_preview'\r\n                        />\r\n                    </div>\r\n\r\n                    <div\r\n                        className='collapsable-container-group container-group'\r\n                        id='color_picker_controls_container'\r\n                    >\r\n                        {['r', 'g', 'b', 'a'].map(v => (\r\n                            <div\r\n                                key={`rgb_${v}_div`}\r\n                                className='rgb-input-container'\r\n                            >\r\n                                <label\r\n                                    htmlFor={`rgb_${v}`}\r\n                                    className='rgb-input-label'\r\n                                >\r\n                                    {v}\r\n                                </label>\r\n                                <input\r\n                                    key={v}\r\n                                    name={`rgb_${v}`}\r\n                                    id={`rgb_${v}`}\r\n                                    type='text'\r\n                                    className='rgb-input-field'\r\n                                    placeholder='0'\r\n                                    onChange={\r\n                                        (event) => {\r\n                                            this.updateColor(event);\r\n                                            this.updatePreview();\r\n                                        }\r\n                                    }\r\n                                    onKeyPress={\r\n                                        (event) => {\r\n                                            if (!event.key.match(/[0-9]/))\r\n                                                event.preventDefault();\r\n                                        }\r\n                                    }\r\n                                    defaultValue={v === 'a' ? 255 : ''}\r\n                                />\r\n\r\n                                <input\r\n                                    key={`${v}_slider`}\r\n                                    name={`rgb_${v}_slider`}\r\n                                    type='range'\r\n                                    min='0'\r\n                                    max='255'\r\n                                    className='rgb-input-slider'\r\n                                    onChange={\r\n                                        (event) => {\r\n                                            document.getElementById(`rgb_${v}`).value = event.target.value;\r\n                                            this.updateColor(event);\r\n                                            this.updatePreview();\r\n                                        }\r\n                                    }\r\n                                    defaultValue={v === 'a' ? 255 : 0} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div\r\n                        className='collapsable-container-group-trigger'\r\n                        id='collapse_color_picker'\r\n                        onClick={\r\n                            () => {\r\n                                let controls = document.getElementById('color_picker_controls_container');\r\n\r\n                                controls.style.maxHeight = !controls.style.maxHeight ? controls.scrollHeight + 'px' : null;\r\n                            }\r\n                        }\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.previewElem = document.getElementById('color_picker_preview');\r\n        this.updatePreview();\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.updateColor = props.updateColor;\r\n        this.fetchBrush = props.fetchBrush;\r\n\r\n        this.updatePreview = this.updatePreview.bind(this);\r\n    }\r\n}\r\n\r\nexport { SideBar }","import React from 'react';\r\nimport * as PIXI from 'pixi.js';\r\n\r\nimport { editor } from '../../app/texture-editor/editor';\r\n\r\nimport { Ribbon } from './Ribbon';\r\nimport { Brushes } from './Brushes';\r\nimport { SideBar } from './SideBar';\r\n\r\nimport mouse from '../../app/texture-editor/common/Mouse';\r\n\r\nimport './css/texture-editor.css';\r\n\r\nlet mouseMove_timeout = null;\r\n\r\nclass TextureEditor extends React.Component {\r\n    state = {\r\n        app: null,\r\n        canvas: null,\r\n        doBoundUpdate: true,\r\n        editor\r\n    }\r\n\r\n    getCanvas = () => {\r\n        let parent = document.getElementById('texture_editor_wrapper');\r\n\r\n        let scale = parent.getBoundingClientRect().height < parent.getBoundingClientRect().width\r\n            ? parent.getBoundingClientRect().height * 0.9\r\n            : parent.getBoundingClientRect().width * 0.9;\r\n\r\n        let state = this.state;\r\n\r\n        state.app = new PIXI.Application({\r\n            width: scale,\r\n            height: scale\r\n        });\r\n\r\n        state.editor = editor.create(state.app, 16);\r\n\r\n        state.app.view.oncontextmenu = (e) => { e.preventDefault(); e.stopPropagation(); }\r\n        state.app.view.id = \"editor\";\r\n\r\n        state.canvas = state.editor.startup();\r\n\r\n        parent.appendChild(state.canvas);\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getCanvas();\r\n        this.state.editor.updateBounds();\r\n\r\n        this.state.canvas.addEventListener('mousemove', (event) => {\r\n            mouse.position.old = {\r\n                x: Math.floor(mouse.position.x),\r\n                y: Math.floor(mouse.position.y)\r\n            };\r\n\r\n            mouse.position.x = Math.floor(event.clientX - this.state.editor.bounds.left);\r\n            mouse.position.y = Math.floor(event.clientY - this.state.editor.bounds.top);\r\n\r\n            mouse.moving = true;\r\n\r\n            if (mouseMove_timeout)\r\n                clearTimeout(mouseMove_timeout);\r\n\r\n            mouseMove_timeout = setTimeout(() => {\r\n                mouse.position.old = {\r\n                    x: Math.floor(mouse.position.x),\r\n                    y: Math.floor(mouse.position.y)\r\n                };\r\n                mouse.moving = false;\r\n            }, 30);\r\n        });\r\n\r\n        this.state.canvas.addEventListener('mousedown', (event) => {\r\n            mouse.button.state = true;\r\n            mouse.button.id = event.button;\r\n        });\r\n\r\n        this.state.canvas.addEventListener('mouseup', () => {\r\n            mouse.button.state = false;\r\n            mouse.button.id = null;\r\n        });\r\n\r\n        this.state.canvas.addEventListener('mouseleave', () => mouse.inBounds = false);\r\n\r\n        this.state.canvas.addEventListener('mouseenter', () => mouse.inBounds = true);\r\n\r\n        this.state.canvas.addEventListener('click', () => mouse.clicked = true);\r\n\r\n        window.addEventListener('resize', () => {\r\n            this.state.editor.updateBounds();\r\n        });\r\n    }\r\n\r\n    fetchBrush() {\r\n        return this.state.editor.brush;\r\n    }\r\n\r\n    updateColor(event) {\r\n        let state = this.state;\r\n        if (event.target.value > 255)\r\n            event.target.value = 255;\r\n\r\n        let m = event.target.name.match(/rgb_([rgba])/)[1];\r\n        state.editor.brush.fill[m] = event.target.value === '' ? 0 : event.target.value;\r\n        state.editor.getCurrentColor();\r\n        this.setState(state);\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='editor-container'\r\n            >\r\n                <Brushes editor={this.state.editor}/>\r\n\r\n                <div\r\n                    className='texture-editor-container'\r\n                    id='texture_editor_container'\r\n                >\r\n                    <Ribbon\r\n                        editor={this.state.editor}\r\n                    />\r\n\r\n                    <div\r\n                        className='texture-editor-wrapper'\r\n                        id='texture_editor_wrapper'\r\n                    />\r\n\r\n                    <div\r\n                        className='texture-editor-controls'\r\n                    >\r\n                        <label\r\n                            htmlFor='texture-name-input'\r\n                        >\r\n                            File name:\r\n                        </label>\r\n                        <input\r\n                            type='text'\r\n                            name='texture-name-input'\r\n                            id='image_name'\r\n                            defaultValue='texture'\r\n                            onKeyPress={\r\n                                (event) => {\r\n                                    if (!event.key.match(/[\\w\\d.()]/))\r\n                                        event.preventDefault();\r\n                                }\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <SideBar\r\n                    updateColor={this.updateColor}\r\n                    fetchBrush={this.fetchBrush}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.updateColor = this.updateColor.bind(this);\r\n        this.fetchBrush = this.fetchBrush.bind(this);\r\n    }\r\n}\r\n\r\nexport { TextureEditor }","import './styles/App.css';\r\n\r\n// import { ConfigForm } from './components/ConfigGUI';\r\nimport { TextureEditor } from './components/editor/TextureEditor';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <TextureEditor />\r\n      {/* <ConfigForm /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nimport '../styles/nav-bar.css'\r\n\r\nclass NavBar extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <div className='nav-bar'>\r\n                {/* <div className='nav-bar-button'>Button 1</div>\r\n                <div className='nav-bar-button'>Button 2</div>\r\n                <div className='nav-bar-button'>Button 3</div>\r\n                <div className='nav-bar-button'>Button 4</div>\r\n                <div className='nav-bar-button'>Button 5</div> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { NavBar }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {NavBar} from './components/NavBar';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <header>\r\n      <NavBar />\r\n    </header>\r\n    <main>\r\n      <App />\r\n    </main>\r\n    <footer>\r\n      <div>Built by ChrisOfNormandy.</div>\r\n      <div>Join <a href='https://discord.gg/EW5JsGJfdt'>Discord</a></div>\r\n    </footer>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}