{"version":3,"sources":["app/texture-editor/common/Mouse.js","app/texture-editor/helpers/colorize.js","app/texture-editor/helpers/Layer.js","app/texture-editor/editor.js","app/texture-editor/helpers/distance.js","components/Menu.js","components/editor/Ribbon.js","assets/pencil.svg","assets/paintbrush.svg","assets/eraser.svg","components/editor/Brushes.js","app/common/collapseController.js","components/fragments/Collapsable.js","components/editor/side-bar/ColorSettings.js","assets/eye-open.svg","assets/minus.svg","components/editor/side-bar/LayerSettings.js","components/editor/SideBar.js","components/editor/TextureEditor.js","App.js","reportWebVitals.js","components/NavBar.js","index.js"],"names":["mouse","position","x","y","old","button","state","id","origin","displacement","getPosition","offset","inBounds","moving","clicked","module","exports","decToHex","c","hex","Number","toString","length","hexToDec","parseInt","rgbToHex","r","g","b","a","rgbColorToHex","color","interpolate","v1","v2","Math","floor","calculatePixelColor","color1","color2","Layer","editor","name","visable","opacity","pixels","clear","forEach","pixel","setPixel","getPixel","resolution","changed","toggle","refresh","updatePixel","ignoreChange","alpha","colorize","this","arr","layers","cache","map","layer","index","includes","loader","PIXI","shared","Graphics","_","app","brush","style","fill","size","mousePos","cursor","graphic","focus","getStyle","setStyle","tint","getColor","setColor","getSize","setSize","updateCursor","updateColor","updateSize","scale","width","height","background","debug","enabled","element","document","getElementById","active","get","getActive","add","push","remove","splice","reload","move","newIndex","buffer","showGrid","doBoundUpdate","bounds","updateBounds","view","getBoundingClientRect","startup","onReady","ticker","draw","setup","console","log","load","updateDebug","pos","innerHTML","JSON","stringify","col","classList","contains","stage","removeChild","addChild","i","buf","pos1","pos2","abs","round","compose","canvas","createElement","context","getContext","imgData","createImageData","v","data","putImageData","url","toDataURL","link","href","value","setAttribute","click","beginFill","drawRect","endFill","create","children","Menu","props","className","hidden","content","item","Ribbon","key","onClick","htmlFor","type","onChange","event","target","checked","componentDidMount","ribbonContent","addEventListener","obj","parentElement","render","menu","setResolution","bind","preventDefault","res","isNaN","setState","React","Component","Brushes","brushes","icon","pencil","paintbrush","eraser","src","alt","setBrush","controls","error","maxHeight","scrollHeight","Collapsable","container","getContent","onLoad","con","collapseController","ColorSettings","previewElem","updatePreview","rgba","backgroundColor","updateHex","fetchDisplayColor","rgbControls","toUpperCase","min","max","defaultValue","placeholder","onKeyPress","match","rgb","split","k","LayerSettings","updateActiveLayer","updateLayerViewable","layerMovementButtons","layerControls","childNodes","eye_open","minus","SideBar","group","title","component","mouseMove_timeout","TextureEditor","getCanvas","parent","oncontextmenu","e","stopPropagation","appendChild","clientX","left","clientY","top","clearTimeout","setTimeout","window","fetchBrush","clr","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NavBar","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.8a4880a2.chunk.js","sourcesContent":["const mouse = {\r\n    position: {\r\n        x: 0,\r\n        y: 0,\r\n        old: { x: 0, y: 0 }\r\n    },\r\n    button: {\r\n        state: false,\r\n        id: 0,\r\n        origin: { x: null, y: null }\r\n    },\r\n    displacement: () => {\r\n        return {\r\n            x: mouse.position.old.x === null ? 0 : mouse.position.x - mouse.position.old.x,\r\n            y: mouse.position.old.y === null ? 0 : mouse.position.y - mouse.position.old.y\r\n        }\r\n    },\r\n    getPosition: (offset = null) => {\r\n        return offset === null\r\n        ?\r\n        {\r\n            x: mouse.position.x,\r\n            y: mouse.position.y\r\n        }\r\n        :\r\n        {\r\n                x: mouse.position.x - offset.x,\r\n                y: mouse.position.y - offset.y\r\n        }\r\n    },\r\n    inBounds: false,\r\n    moving: false,\r\n    clicked: false\r\n};\r\n\r\nmodule.exports = mouse;","function decToHex(c) {\r\n    var hex = Number(c).toString(16);\r\n    return hex.length === 1 ? `0${hex}` : hex;\r\n}\r\n\r\nfunction hexToDec(c) {\r\n    return parseInt(c, 16);\r\n}\r\n\r\nfunction rgbToHex(r, g, b, a = null) {\r\n    return Number(`0x${decToHex(r)}${decToHex(g)}${decToHex(b)}${a !== null ? decToHex(a) : ''}`);\r\n}\r\n\r\nfunction rgbToHexString(r, g, b, a = null) {\r\n    return `${decToHex(r)}${decToHex(g)}${decToHex(b)}${a !== null ? decToHex(a) : ''}`;\r\n}\r\n\r\nfunction hexToRgb(hex) {\r\n    switch (hex.length) {\r\n        case 0: return {r: 0, g: 0, b:0, a: 255}\r\n        case 1: return {r: hexToDec(hex), g: hexToDec(hex), b: hexToDec(hex), a: 255}\r\n        case 3: {\r\n            let rgb = hex.split('');\r\n            return { r: hexToDec(`${rgb[0] + rgb[0]}`), g: hexToDec(`${rgb[1] + rgb[1]}`), b: hexToDec(`${rgb[2] + rgb[2]}`), a: 255 }\r\n        }\r\n        case 4: {\r\n            let rgba = hex.split('');\r\n            return { r: hexToDec(`${rgba[0] + rgba[0]}`), g: hexToDec(`${rgba[1] + rgba[1]}`), b: hexToDec(`${rgba[2] + rgba[2]}`), a: hexToDec(`${rgba[3] + rgba[3]}`) }\r\n        }\r\n        case 6: {\r\n            let rgb = hex.split('');\r\n            return { r: hexToDec(`${rgb[0] + rgb[1]}`), g: hexToDec(`${rgb[2] + rgb[3]}`), b: hexToDec(`${rgb[4] + rgb[5]}`) }\r\n        }\r\n        case 8: {\r\n            let rgb = hex.split('');\r\n            return { r: hexToDec(`${rgb[0] + rgb[1]}`), g: hexToDec(`${rgb[2] + rgb[3]}`), b: hexToDec(`${rgb[4] + rgb[5]}`), a: hexToDec(`${rgb[6] + rgb[7]}`) }\r\n        }\r\n        default: return {r: 0, g: 0, b: 0, a: 255}\r\n    }\r\n}\r\n\r\nfunction rgbToHsv(r, g, b) {\r\n    r /= 255; g /= 255; b /= 255;\r\n\r\n    let v = Math.max(r, g, b), c = v - Math.min(r, g, b);\r\n    let h = c && ((v === r) ? (g - b) / c : ((v === g) ? 2 + (b - r) / c : 4 + (r - g) / c));\r\n\r\n    return {\r\n        h: 60 * (h < 0 ? h + 6 : h),\r\n        s: v && c / v,\r\n        v\r\n    };\r\n}\r\n\r\nfunction rgbColorToHex(color) {\r\n    return rgbToHex(color.r, color.g, color.b);\r\n}\r\n\r\nfunction hsvToRgb(h, s, v) {\r\n    let r, g, b;\r\n    let i = Math.floor(h * 6);\r\n    let f = h * 6 - i;\r\n    let p = v * (1 - s);\r\n    let q = v * (1 - f * s);\r\n    let t = v * (1 - (1 - f) * s);\r\n\r\n    switch (i % 6) {\r\n        case 0: {\r\n            r = v;\r\n            g = t;\r\n            b = p;\r\n            break;\r\n        }\r\n        case 1: {\r\n            r = q;\r\n            g = v;\r\n            b = p;\r\n            break;\r\n        }\r\n        case 2: {\r\n            r = p;\r\n            g = v;\r\n            b = t;\r\n            break;\r\n        }\r\n        case 3: {\r\n            r = p;\r\n            g = q;\r\n            b = v;\r\n            break;\r\n        }\r\n        case 4: {\r\n            r = t;\r\n            g = p;\r\n            b = v;\r\n            break;\r\n        }\r\n        case 5: {\r\n            r = v;\r\n            g = p;\r\n            b = q;\r\n            break;\r\n        }\r\n        default: return null;\r\n    }\r\n\r\n    return [r * 255, g * 255, b * 255];\r\n}\r\n\r\nfunction interpolate(v1, v2, a) {\r\n    return Math.floor((v2 * a) + (v1 * (1 - a)));\r\n}\r\n\r\nfunction calculatePixelColor(color1, color2) {\r\n    if (color1.a === 0)\r\n        return color2;\r\n    if (color2.a === 0 || !color2)\r\n        return color1;\r\n\r\n    return {\r\n        r: interpolate(color1.r, color2.r, color2.a / 255),\r\n        g: interpolate(color1.g, color2.g, color2.a / 255),\r\n        b: interpolate(color1.b, color2.b, color2.a / 255),\r\n        a: (color1.a + color2.a) > 255 ? 255 : color1.a + color2.a\r\n    }\r\n}\r\n\r\nexport {\r\n    decToHex,\r\n    rgbToHex,\r\n    rgbToHexString,\r\n    hexToDec,\r\n    hexToRgb,\r\n    rgbColorToHex,\r\n    rgbToHsv,\r\n    hsvToRgb,\r\n    interpolate,\r\n    calculatePixelColor\r\n}","import * as colorize from './colorize';\r\n\r\nexport default class Layer {\r\n    editor;\r\n\r\n    resolution;\r\n\r\n    name;\r\n\r\n    visable = true;\r\n    opacity = 255;\r\n    pixels = [];\r\n\r\n    clear = () => {\r\n        this.pixels.forEach(pixel => this.setPixel(pixel.x, pixel.y, null));\r\n    }\r\n\r\n    getPixel = (x, y) => {\r\n        if (this.visable)\r\n            return !this.pixels[y * this.resolution + x]\r\n                ? null\r\n                : this.pixels[y * this.resolution + x];\r\n        return {\r\n            x, y, changed: this.pixels[y * this.resolution + x].changed, color: { r: 0, g: 0, b: 0, a: 0 }\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.visable = !this.visable;\r\n        this.editor.refresh = true;\r\n    }\r\n\r\n    updatePixel = (x, y, color, ignoreChange = false, alpha = null) => {\r\n        let pixel = this.getPixel(x, y);\r\n\r\n        if (pixel === null || (pixel.changed && !ignoreChange))\r\n            return null;\r\n\r\n        if (alpha === null) {\r\n            pixel.color = color === null ? { r: 0, g: 0, b: 0, a: 0 } : colorize.calculatePixelColor(pixel.color, color);\r\n            pixel.changed = true;\r\n        }\r\n        else\r\n            pixel.color.a = (pixel.color.a / 255) * alpha;\r\n\r\n        return pixel;\r\n    }\r\n\r\n    setPixel = (x, y, color = null) => {\r\n        this.pixels[y * this.resolution + x] = {\r\n            color: color === null ? { r: 0, g: 0, b: 0, a: 0 } : color,\r\n            x,\r\n            y,\r\n            changed: false\r\n        };\r\n\r\n        return this.pixels[y * this.resolution + x];\r\n    }\r\n\r\n    constructor(editor, name = null) {\r\n        this.editor = editor;\r\n        this.resolution = editor.resolution;\r\n\r\n        if (name === null) {\r\n            let arr = this.editor.layers.cache.map(layer => {\r\n                return layer.name;\r\n            });\r\n\r\n            if (!arr.length)\r\n                this.name = 'Layer 1';\r\n            else {\r\n                let index = 1;\r\n\r\n                this.name = `Layer ${index}`;\r\n\r\n                while (arr.includes(this.name)) {\r\n                    this.name = `Layer ${index}`;\r\n                    index++;\r\n                }\r\n            }\r\n        }\r\n        else\r\n            this.name = name;\r\n\r\n        for (let x = 0; x < editor.resolution; x++) {\r\n            for (let y = 0; y < editor.resolution; y++) {\r\n                this.setPixel(x, y);\r\n            }\r\n        }\r\n    }\r\n}","import * as PIXI from 'pixi.js';\r\n\r\nimport mouse from './common/Mouse';\r\n\r\nimport Layer from './helpers/Layer';\r\n\r\nimport * as colorize from './helpers/colorize';\r\nimport * as distance from './helpers/distance';\r\n\r\nconst loader = PIXI.Loader.shared,\r\n    Graphics = PIXI.Graphics\r\n\r\nconst _ = {\r\n    /**\r\n     * @type {PIXI.Application}\r\n     */\r\n    app: null,\r\n\r\n    brush: {\r\n        style: 'pencil',\r\n        fill: {\r\n            r: 0, g: 0, b: 0, a: 255\r\n        },\r\n        size: 1,\r\n\r\n        mousePos: null,\r\n        cursor: {\r\n            position: {\r\n                x: 0,\r\n                y: 0,\r\n                old: {\r\n                    x: 0,\r\n                    y: 0\r\n                }\r\n            },\r\n            /**\r\n             * @type {PIXI.Graphics}\r\n             */\r\n            graphic: null,\r\n            focus: null,\r\n        },\r\n\r\n        getStyle: () => {\r\n            return _.brush.style;\r\n        },\r\n        /**\r\n         * \r\n         * @param {string} style \r\n         */\r\n        setStyle: (style) => {\r\n            switch (style) {\r\n                case 'eraser': {\r\n                    _.brush.cursor.graphic.tint = 0xFFFFFF;\r\n                    _.brush.cursor.graphic.alpha = 1;\r\n                    break;\r\n                }\r\n                default: {\r\n                    _.brush.cursor.graphic.tint = colorize.rgbToHex(_.brush.fill.r, _.brush.fill.g, _.brush.fill.b);\r\n                    _.brush.cursor.graphic.alpha = _.brush.fill.a / 255;\r\n                    break;\r\n                }\r\n            }\r\n            _.brush.style = style;\r\n        },\r\n\r\n        getColor: () => {\r\n            return {\r\n                r: _.brush.fill.r,\r\n                g: _.brush.fill.g,\r\n                b: _.brush.fill.b,\r\n                a: _.brush.fill.a\r\n            };\r\n        },\r\n        /**\r\n         * \r\n         * @param {{r: number, g: number, b: number, a: number}} color \r\n         */\r\n        setColor: (color) => {\r\n            _.brush.cursor.graphic.tint = colorize.rgbToHex(color.r, color.g, color.b);\r\n            _.brush.cursor.graphic.alpha = color.a / 255;\r\n\r\n            _.brush.fill = color;\r\n        },\r\n\r\n        getSize: () => {\r\n            return _.brush.size;\r\n        },\r\n        setSize: (size) => {\r\n            _.brush.size = size;\r\n        },\r\n\r\n        updateCursor: (updateColor = false, updateSize = false) => {\r\n            _.brush.mousePos = mouse.getPosition();\r\n\r\n            _.brush.cursor.position.old.x = _.brush.cursor.position.x;\r\n            _.brush.cursor.position.old.y = _.brush.cursor.position.y;\r\n\r\n            _.brush.cursor.position.x = Math.floor((_.brush.mousePos.x - (_.brush.size - 1) / 2 * _.scale) / _.scale);\r\n            _.brush.cursor.position.y = Math.floor((_.brush.mousePos.y - (_.brush.size - 1) / 2 * _.scale) / _.scale);\r\n\r\n            if (_.brush.cursor.position.old.x !== _.brush.cursor.position.x || _.brush.cursor.position.old.y !== _.brush.cursor.position.y) {\r\n                _.brush.cursor.graphic.x = _.brush.cursor.position.x * _.scale;\r\n                _.brush.cursor.graphic.y = _.brush.cursor.position.y * _.scale;\r\n            }\r\n\r\n            if (updateSize) {\r\n                _.brush.cursor.graphic.width = _.scale * _.brush.size;\r\n                _.brush.cursor.graphic.height = _.scale * _.brush.size;\r\n            }\r\n\r\n            if (updateColor) {\r\n                _.brush.cursor.graphic.tint = colorize.rgbToHex(_.brush.fill.r, _.brush.fill.g, _.brush.fill.b);\r\n                _.brush.cursor.graphic.alpha = _.brush.fill.a / 255;\r\n            }\r\n        }\r\n    },\r\n\r\n    background: [],\r\n\r\n    resolution: 0,\r\n\r\n    width: 0,\r\n    height: 0,\r\n    scale: 0,\r\n\r\n    debug: {\r\n        enabled: true,\r\n        element: document.getElementById('debug')\r\n    },\r\n\r\n    pixels: [],\r\n    layers: {\r\n        /**\r\n         * @type {Layer[]}\r\n         */\r\n        cache: [],\r\n\r\n        active: 0,\r\n\r\n        /**\r\n         * \r\n         * @param {number} layer \r\n         * @returns {Layer}\r\n         */\r\n        get: (layer) => {\r\n            return _.layers.cache[layer];\r\n        },\r\n        /**\r\n         * \r\n         * @returns {Layer}\r\n         */\r\n        getActive: () => {\r\n            return _.layers.cache[_.layers.active];\r\n        },\r\n        add: () => {\r\n            let index = _.layers.cache.length;\r\n\r\n            _.layers.cache.push(new Layer(editor));\r\n            _.layers.active = index;\r\n        },\r\n        remove: (index = -1) => {\r\n            _.layers.cache.splice(index, 1);\r\n            _.layers.reload();\r\n            return _.layers;\r\n        },\r\n        move: (index, newIndex) => {\r\n            let layer = _.layers.cache.splice(index, 1)[0];\r\n            _.layers.cache.splice(newIndex, 0, layer);\r\n            _.layers.reload();\r\n        },\r\n        clear: () => {\r\n            _.layers.cache = [];\r\n        },\r\n        toggle: (layer) => {\r\n            _.layers.cache[layer].visable = !_.layers.cache[layer].visable;\r\n            _.layers.reload();\r\n        },\r\n        reload: () => {\r\n            _.refresh = true;\r\n        }\r\n    },\r\n    buffer: [],\r\n\r\n    showGrid: false,\r\n    refresh: false,\r\n\r\n    doBoundUpdate: true,\r\n    bounds: null,\r\n\r\n    updateBounds: () => {\r\n        _.bounds = _.app.view.getBoundingClientRect();\r\n        _.doBoundUpdate = false;\r\n    },\r\n\r\n    startup: () => {\r\n        _.onReady(() => _.app.ticker.add(() => _.draw()));\r\n        return _.app.view;\r\n    },\r\n\r\n    onReady: (setup) => {\r\n        console.log('App ready. Loading.');\r\n\r\n        loader\r\n            .load(setup);\r\n    },\r\n\r\n    clear: () => {\r\n        _.layers.cache.forEach(layer => layer.clear());\r\n        _.refresh = true;\r\n    },\r\n\r\n    updateDebug: () => {\r\n        let pos = mouse.getPosition();\r\n        let x = Math.floor(pos.x / _.scale),\r\n            y = Math.floor(pos.y / _.scale);\r\n        let pixel = _.pixels[y * _.resolution + x];\r\n\r\n        if (!pixel)\r\n            return;\r\n\r\n        _.debug.element.innerHTML =\r\n            `Mouse: ${JSON.stringify(pos)} --> ${x}, ${y}<br />` +\r\n            `Brush:<br />` +\r\n            ` - Color: ${JSON.stringify(_.brush.fill)}<br />` +\r\n            ` - Pos: ${_.brush.cursor.position.x}, ${_.brush.cursor.position.y} --> ${_.brush.cursor.position.x + _.brush.size - 1}, ${_.brush.cursor.position.y + _.brush.size - 1}<br />` +\r\n            ` - Hex: 0x${colorize.decToHex(_.brush.fill.r)}${colorize.decToHex(_.brush.fill.g)}${colorize.decToHex(_.brush.fill.b)}<br />` +\r\n            ` - Style: ${_.brush.style}<br />` +\r\n            `Buffer: ${_.buffer.length}<br />` +\r\n            `Hover: ${JSON.stringify(pixel.color)}<br />` +\r\n            ` - Tint:${pixel.graphic.tint}<br />` +\r\n            ` - Alpha: ${pixel.graphic.alpha}`;\r\n    },\r\n\r\n    updatePixel: (x, y) => {\r\n        if (!_.pixels[y * _.resolution + x])\r\n            _.setPixel(x, y);\r\n\r\n        let color = null;\r\n\r\n        _.layers.cache.forEach(layer => {\r\n            if (!layer.visable)\r\n                return;\r\n\r\n            let col = layer.getPixel(x, y).color;\r\n            if (col.a === 0)\r\n                return;\r\n\r\n            if (color === null) {\r\n                color = col;\r\n            }\r\n            else\r\n                color = colorize.calculatePixelColor(col, color);\r\n        });\r\n        \r\n        _.pixels[y * _.resolution + x].color = color || { r: 0, g: 0, b: 0, a: 0 };\r\n        _.pixels[y * _.resolution + x].graphic.tint = colorize.rgbColorToHex(_.pixels[y * _.resolution + x].color);\r\n        _.pixels[y * _.resolution + x].graphic.alpha = _.pixels[y * _.resolution + x].color.a / 255;\r\n    },\r\n\r\n    draw: () => {\r\n        if (_.debug.element === null) {\r\n            _.debug.element = document.getElementById('debug');\r\n            return;\r\n        }\r\n\r\n        if (_.debug.enabled) {\r\n            if (_.debug.element.classList.contains('hidden'))\r\n                _.debug.element.classList.remove('hidden');\r\n            _.updateDebug();\r\n        }\r\n        else if (!_.debug.element.classList.contains('hidden'))\r\n            _.debug.element.classList.add('hidden')\r\n\r\n        if (_.refresh) {\r\n            _.pixels.forEach(pixel => {\r\n                _.updatePixel(pixel.x, pixel.y);\r\n\r\n                _.app.stage.removeChild(pixel.graphic);\r\n                _.app.stage.addChild(pixel.graphic);\r\n            });\r\n\r\n            _.app.stage.removeChild(_.brush.cursor.graphic);\r\n            _.app.stage.addChild(_.brush.cursor.graphic);\r\n\r\n            _.refresh = false;\r\n\r\n            return;\r\n        }\r\n\r\n        _.buffer.forEach((pixel, i) => {\r\n            _.updatePixel(pixel.x, pixel.y);\r\n\r\n            if (pixel.changed) {\r\n                if (!mouse.button.state)\r\n                    pixel.changed = false;\r\n            }\r\n            else\r\n                _.buffer.splice(i, 1);\r\n        });\r\n\r\n        _.brush.updateCursor();\r\n\r\n        let layer = _.layers.getActive();\r\n        let buf;\r\n\r\n        let color, ignoreChange, alpha;\r\n\r\n        if (!!layer) {\r\n            if (mouse.button.state) {\r\n                if (mouse.button.id === 0) {\r\n                    for (let x = _.brush.cursor.position.x < 0 ? 0 : _.brush.cursor.position.x; x < _.brush.cursor.position.x + _.brush.size && x < _.resolution; x++) {\r\n                        for (let y = _.brush.cursor.position.y < 0 ? 0 : _.brush.cursor.position.y; y < _.brush.cursor.position.y + _.brush.size && y < _.resolution; y++) {\r\n                            switch (_.brush.style) {\r\n                                case 'paint': {\r\n                                    color = _.brush.getColor();\r\n\r\n                                    color.a = (_.brush.fill.a / 255) * Math.floor((1 - (distance.manhattan(\r\n                                        {\r\n                                            x: _.brush.cursor.position.x + Math.floor(_.brush.size / 2),\r\n                                            y: _.brush.cursor.position.y + Math.floor(_.brush.size / 2)\r\n                                        },\r\n                                        {\r\n                                            x, y\r\n                                        }\r\n                                    ) / Math.round(_.brush.size / 2))) * 255);\r\n                                    if (color.a < 0)\r\n                                        color.a = 0;\r\n\r\n                                    ignoreChange = _.brush.cursor.position.old.x !== _.brush.cursor.position.x || _.brush.cursor.position.old.y !== _.brush.cursor.position.y;\r\n                                    alpha = null;\r\n                                    break;\r\n                                }\r\n                                case 'eraser': {\r\n                                    color = null;\r\n                                    ignoreChange = _.brush.cursor.position.old.x !== _.brush.cursor.position.x || _.brush.cursor.position.old.y !== _.brush.cursor.position.y;\r\n                                    alpha = 0;\r\n                                    break\r\n                                }\r\n                                default: {\r\n                                    color = _.brush.getColor();\r\n                                    ignoreChange = false;\r\n                                    alpha = null;\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            buf = layer.updatePixel(x, y, color, ignoreChange, alpha);\r\n                            \r\n                            if (buf !== null)\r\n                                _.buffer.push(buf);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!mouse.inBounds)\r\n            mouse.button.state = false;\r\n\r\n        mouse.clicked = false;\r\n    },\r\n\r\n    compose: () => {\r\n        const canvas = document.createElement('canvas'), context = canvas.getContext('2d');\r\n        canvas.width = _.resolution;\r\n        canvas.height = _.resolution;\r\n\r\n        let imgData = context.createImageData(_.resolution, _.resolution);\r\n\r\n        let color;\r\n        for (let x = 0; x < _.resolution; x++) {\r\n            for (let y = 0; y < _.resolution; y++) {\r\n                let v = (y * _.resolution + x) * 4;\r\n                color = _.getPixel(x, y).color;\r\n\r\n                imgData.data[v] = color.r;\r\n                imgData.data[v + 1] = color.g;\r\n                imgData.data[v + 2] = color.b;\r\n                imgData.data[v + 3] = color.a;\r\n            }\r\n        }\r\n\r\n        context.putImageData(imgData, 0, 0);\r\n\r\n        const url = canvas.toDataURL('image/png');\r\n        let link = document.createElement('a');\r\n        link.href = url;\r\n\r\n        let name = document.getElementById('image_name').value;\r\n        link.setAttribute('download', `${!!name ? name : 'texture'}.png`);\r\n        link.click();\r\n    },\r\n\r\n    setPixel: (x, y, color = null) => {\r\n        _.pixels[y * _.resolution + x] = {\r\n            graphic: new Graphics(),\r\n            color: color === null ? {\r\n                r: 0,\r\n                g: 0,\r\n                b: 0,\r\n                a: 0\r\n            } : color,\r\n            changed: false,\r\n            x,\r\n            y\r\n        };\r\n\r\n        _.pixels[y * _.resolution + x].graphic.beginFill(0xFFFFFF);\r\n        _.pixels[y * _.resolution + x].graphic.drawRect(0, 0, _.scale, _.scale);\r\n        _.pixels[y * _.resolution + x].graphic.endFill();\r\n\r\n        _.pixels[y * _.resolution + x].graphic.tint = colorize.rgbColorToHex(_.pixels[y * _.resolution + x].color);\r\n        _.pixels[y * _.resolution + x].graphic.alpha = _.pixels[y * _.resolution + x].color.a / 255;\r\n\r\n        _.pixels[y * _.resolution + x].graphic.x = x * _.scale;\r\n        _.pixels[y * _.resolution + x].graphic.y = y * _.scale;\r\n\r\n        return _.pixels[y * _.resolution + x];\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {PIXI.Application} app \r\n     */\r\n    create: (app, resolution = 16) => {\r\n        if (_.app !== null)\r\n            while (_.app.stage.children[0])\r\n                _.app.stage.removeChild(_.app.stage.children[0]);\r\n\r\n        _.app = app;\r\n\r\n        _.resolution = resolution\r\n\r\n        _.width = app.view.width;\r\n        _.height = app.view.height;\r\n        _.scale = _.width / _.resolution;\r\n\r\n        _.pixels = [];\r\n\r\n        _.layers.clear();\r\n        _.layers.add();\r\n\r\n        _.brush.cursor.graphic = new Graphics();\r\n        _.brush.cursor.graphic.beginFill(0xFFFFFF);\r\n        _.brush.cursor.graphic.drawRect(-1, -1, _.scale + 3, _.scale + 3);\r\n        _.brush.cursor.graphic.endFill();\r\n\r\n        _.brush.updateCursor(true, true);\r\n\r\n        let layer = _.layers.get(_.layers.active);\r\n\r\n        for (let x = 0; x < _.resolution; x++) {\r\n            for (let y = 0; y < _.resolution; y++) {\r\n                _.background[y * _.resolution + x] = new Graphics();\r\n                _.background[y * _.resolution + x].beginFill(0xFFFFFF);\r\n                _.background[y * _.resolution + x].drawRect(0, 0, _.scale, _.scale);\r\n                _.background[y * _.resolution + x].endFill();\r\n\r\n                _.background[y * _.resolution + x].tint = (x % 2 === 0 && y % 2 === 1) || (x % 2 === 1 && y % 2 === 0) ? 0xFFFFFF : 0xDDDDDD;\r\n\r\n                _.background[y * _.resolution + x].x = x * _.scale;\r\n                _.background[y * _.resolution + x].y = y * _.scale;\r\n\r\n                _.app.stage.addChild(_.background[y * _.resolution + x]);\r\n\r\n                _.app.stage.addChild(_.setPixel(x, y).graphic);\r\n\r\n                layer.setPixel(x, y, _.pixels[y * _.resolution + x].color);\r\n            }\r\n        }\r\n\r\n        _.app.stage.addChild(_.brush.cursor.graphic);\r\n\r\n        return _;\r\n    }\r\n}\r\n\r\nconst editor = _;\r\n\r\nexport {\r\n    editor\r\n}","function manhattan(pos1, pos2) {\r\n    return Math.abs(pos2.x - pos1.x) + Math.abs(pos2.y - pos1.y);\r\n}\r\n\r\nfunction euclidean(pos1, pos2) {\r\n    return Math.sqrt((pos2.x - pos1.x) * (pos2.x - pos1.x) + (pos2.y - pos1.y) * (pos2.y - pos1.y));\r\n}\r\n\r\nexport {\r\n    manhattan,\r\n    euclidean\r\n}","function Menu(props) {\r\n    return (\r\n        <div\r\n            id={props.id}\r\n            className={`menu${!!props.hidden ? ' hidden' : ''}`}\r\n        >\r\n            {props.content.map((item, i) => (\r\n                <div\r\n                    className='menu-item'\r\n                    key={i}\r\n                >\r\n                    {item}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\n\r\nimport Menu from '../Menu';\r\n\r\nimport './css/ribbon.css';\r\n\r\nexport default class Ribbon extends React.Component {\r\n\r\n    state = {\r\n        editor: null,\r\n        content: [\r\n        {\r\n            key: \"File\",\r\n            id: 'file_menu',\r\n            value: (<Menu\r\n                content={[\r\n                    (<div\r\n                        className='menu-button'\r\n                        onClick={\r\n                            () => this.editor.compose()\r\n                        }\r\n                    >\r\n                        Download\r\n                    </div>),\r\n                    // (<div\r\n                    //     className='menu-break'\r\n                    // />),\r\n                    // (<form\r\n                    //     className='menu-button'\r\n                    // >\r\n                    //     <input\r\n                    //         type='text'\r\n                    //         id='resolution_input'\r\n                    //         name='resolution'\r\n                    //         defaultValue='16'\r\n                    //     />\r\n                    //     <input\r\n                    //         type='submit'\r\n                    //         value='Create'\r\n                    //         onClick={this.setResolution}\r\n                    //     />\r\n                    // </form>),\r\n                    (<div\r\n                        className='menu-break'\r\n                    />),\r\n                    (<div\r\n                        className='menu-button'\r\n                    >\r\n                        <label\r\n                            id='debug_check_label'\r\n                            htmlFor='debug-check'\r\n                        >\r\n                            Debug\r\n                        </label>\r\n                        <input\r\n                            name='debug-check'\r\n                            type='checkbox'\r\n                            onChange={\r\n                                (event) => {\r\n                                    this.editor.debug = event.target.checked;\r\n                                }\r\n                            }\r\n                        />\r\n                    </div>)\r\n                ]}\r\n                id='file_menu'\r\n                hidden={true}\r\n            />)\r\n        },\r\n        {\r\n            key: \"Edit\",\r\n            id: 'edit_menu',\r\n            value: (<Menu\r\n                content={[\r\n                    (<div\r\n                        className='menu-button'\r\n                        onClick={\r\n                            () => this.editor.clear()\r\n                        }\r\n                    >\r\n                        Clear\r\n                    </div>)\r\n                ]}\r\n                id='edit_menu'\r\n                hidden={true}\r\n            />)\r\n        },\r\n        {\r\n            key: \"View\",\r\n            id: 'view_menu',\r\n            value: (\r\n                <Menu\r\n                    content={[\r\n                        (<div\r\n                            className='menu-button'\r\n                            onClick={\r\n                                () => {\r\n                                    this.editor.showGrid = !this.editor.showGrid;\r\n                                    this.editor.refresh = true;\r\n                                }\r\n                            }\r\n                        >\r\n                            Toggle Grid\r\n                        </div>)\r\n                    ]}\r\n                    id='view_menu'\r\n                    hidden={true}\r\n                />\r\n            )\r\n        }\r\n    ]\r\n}\r\n\r\nsetResolution(event) {\r\n    event.preventDefault();\r\n    let res = Number(document.getElementById('resolution_input').value)\r\n    if (isNaN(res))\r\n        return;\r\n\r\n    let state = this.state;\r\n\r\n    if (res % 16 === 0 && res > 0 && res <= 128)\r\n        state.editor = state.editor.create(this.editor.app, res);\r\n\r\n    this.setState(state);\r\n}\r\n\r\n    componentDidMount = () => {\r\n        let ribbonContent = [];\r\n        this.state.content.forEach(item => ribbonContent.push(document.getElementById(item.id)));\r\n\r\n        document.addEventListener('click', (event) => {\r\n            ribbonContent.forEach(obj => {\r\n                if (!obj.parentElement.contains(event.target))\r\n                    obj.classList.add('hidden');\r\n            });\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n\r\n        return (\r\n            <div\r\n                className='texture-editor-ribbon'\r\n            >\r\n                {this.state.content.map(menu => (\r\n                    <div\r\n                        key={menu.key}\r\n                        className='ribbon-menu'\r\n                    >\r\n                        <div\r\n                            className='ribbon-menu-button'\r\n                            onClick={\r\n                                () => {\r\n                                    document.getElementById(menu.id).classList.toggle('hidden');\r\n                                }\r\n                            }\r\n                        >\r\n                            {menu.key}\r\n                        </div>\r\n                        {menu.value}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state.editor = props.editor;\r\n\r\n        this.setResolution = this.setResolution.bind(this);\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/pencil.34dc5e45.svg\";","export default __webpack_public_path__ + \"static/media/paintbrush.3b3671d0.svg\";","export default __webpack_public_path__ + \"static/media/eraser.4da23591.svg\";","import React from \"react\";\r\n\r\nimport './css/brushes.css';\r\n\r\nimport pencil from '../../assets/pencil.svg';\r\nimport paintbrush from '../../assets/paintbrush.svg';\r\nimport eraser from '../../assets/eraser.svg';\r\n\r\nexport default class Brushes extends React.Component {\r\n\r\n    brushes = [\r\n        {\r\n            key: 'pencil',\r\n            icon: pencil\r\n        },\r\n        {\r\n            key: 'paint',\r\n            icon: paintbrush\r\n        },\r\n        {\r\n            key: 'eraser',\r\n            icon: eraser\r\n        }\r\n    ]\r\n\r\n    brush;\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='brushes-container'\r\n            >\r\n                {this.brushes.map(brush => (\r\n                    <img\r\n                        key={brush.key}\r\n                        src={brush.icon}\r\n                        className='brush-icon'\r\n                        id={`${brush.key}_brush`}\r\n                        alt={brush.key}\r\n                        onClick={\r\n                            () => this.brush.setBrush(brush.key)\r\n                        }\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.brush = props.brush;\r\n    }\r\n}","function _(controls) {\r\n    if (controls === null)\r\n        return console.error('Collapsable div was null.');\r\n    controls.style.maxHeight = !controls.style.maxHeight ? controls.scrollHeight + 'px' : null;\r\n}\r\n\r\nexport default _;","import React from 'react';\r\n\r\nimport collapseController from '../../app/common/collapseController';\r\n\r\nexport default class Collapsable extends React.Component {\r\n\r\n    state = {\r\n        content: null,\r\n        id: 'collapsable_container',\r\n        container: null\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        let state = this.state;\r\n        state.container = document.getElementById(this.state.id);\r\n        this.setState(state);\r\n    }\r\n\r\n    getContent = () => {\r\n        return this.state.content();\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='collapsable-container-wrapper'\r\n                onLoad={\r\n                    () => {\r\n                        let con = document.getElementById(this.state.id);\r\n                        con.style.maxHeight = con.scrollHeight + 'px';\r\n                    }\r\n                }\r\n            >\r\n                <div \r\n                    className='collapsable-container-group container-group'\r\n                    id={this.state.id}\r\n                >\r\n                    <this.getContent />\r\n                </div>\r\n                <div\r\n                    className='collapsable-container-group-trigger'\r\n                    onClick={\r\n                        () => {\r\n                            collapseController(this.state.container)\r\n                        }\r\n                    }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state.id = props.id;\r\n        this.state.content = props.content;\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Collapsable from '../../fragments/Collapsable';\r\n\r\nimport * as colorize from '../../../app/texture-editor/helpers/colorize';\r\n\r\nimport '../css/side-bar/colors.css';\r\n\r\nexport default class ColorSettings extends React.Component {\r\n    state = {\r\n        brush: null\r\n    }\r\n\r\n    updateColor;\r\n\r\n    previewElem = null;\r\n    container = null;\r\n\r\n    updatePreview = () => {\r\n        let rgba = this.state.brush.getColor();\r\n        this.previewElem.style.backgroundColor = `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a / 255})`;\r\n    }\r\n\r\n    updateHex = () => {\r\n        let hex = colorize.rgbToHexString(document.getElementById('rgb_r').value, document.getElementById('rgb_g').value, document.getElementById('rgb_b').value, document.getElementById('rgb_a').value);\r\n        document.getElementById('hex').value = hex;\r\n    }\r\n\r\n    fetchDisplayColor = () => {\r\n        return {\r\n            r: document.getElementById('rgb_r').value,\r\n            g: document.getElementById('rgb_g').value,\r\n            b: document.getElementById('rgb_b').value,\r\n            a: document.getElementById('rgb_a').value\r\n        }\r\n    }\r\n\r\n    refresh = () => {\r\n        this.previewElem = document.getElementById('color_picker_preview');\r\n        this.container = document.getElementById('color_picker_controls_container');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n\r\n        this.updatePreview();\r\n    }\r\n\r\n    rgbControls = () => {\r\n        return (\r\n            <div\r\n                className='rgb-container-wrapper'\r\n            >\r\n                {['r', 'g', 'b', 'a'].map(v => (\r\n                    <div\r\n                        key={`rgb_${v}_div`}\r\n                        className='rgb-input-container'\r\n                    >\r\n                        <div\r\n                            htmlFor={`rgb_${v}`}\r\n                            className='rgb-input-label'\r\n                        >\r\n                            {v.toUpperCase()}\r\n                        </div>\r\n\r\n                        <input\r\n                            key={`${v}_slider`}\r\n                            name={`rgb_${v}_slider`}\r\n                            type='range'\r\n                            min='0'\r\n                            max='255'\r\n                            className='rgb-input-slider'\r\n                            onChange={\r\n                                (event) => {\r\n                                    document.getElementById(`rgb_${v}`).value = event.target.value;\r\n                                    this.updateColor(this.fetchDisplayColor());\r\n                                    this.updatePreview();\r\n                                    this.updateHex();\r\n                                }\r\n                            }\r\n                            defaultValue={v === 'a' ? 255 : 0} \r\n                        />\r\n\r\n                        <input\r\n                            key={v}\r\n                            name={`rgb_${v}`}\r\n                            id={`rgb_${v}`}\r\n                            type='text'\r\n                            className='rgb-input-field'\r\n                            placeholder='0'\r\n                            onChange={\r\n                                (event) => {\r\n                                    this.updateColor(this.fetchDisplayColor());\r\n                                    this.updatePreview();\r\n                                    this.updateHex();\r\n                                }\r\n                            }\r\n                            onKeyPress={\r\n                                (event) => {\r\n                                    if (!event.key.match(/[0-9]/))\r\n                                        event.preventDefault();\r\n                                }\r\n                            }\r\n                            defaultValue={v === 'a' ? 255 : ''}\r\n                        />\r\n                    </div>\r\n                ))}\r\n\r\n                <input\r\n                    name='hex'\r\n                    id='hex'\r\n                    type='text'\r\n                    className='hex-input-field'\r\n                    placeholder='000000ff'\r\n                    onChange={\r\n                        (event) => {\r\n                            let rgba = colorize.hexToRgb(event.target.value);\r\n\r\n                            for (let k in rgba)\r\n                                document.getElementById(`rgb_${k}`).value = rgba[k];\r\n\r\n                            this.updateColor(this.fetchDisplayColor());\r\n                            this.updatePreview();\r\n                        }\r\n                    }\r\n                    onKeyPress={\r\n                        (event) => {\r\n                            if (!event.key.match(/[0-9A-Fa-f]/) || event.target.value.length >= 8)\r\n                                event.preventDefault();\r\n                        }\r\n                    }\r\n                    defaultValue='000000ff'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='side-bar-group'\r\n            >\r\n                <div\r\n                    className='container-group'\r\n                    id='color_picker_preview_container'\r\n                >\r\n                    <div\r\n                        className='color-picker-preview'\r\n                        id='color_picker_preview'\r\n                    />\r\n                    <div\r\n                        className='brush-size-preview'\r\n                        id='brush_size_preview'\r\n                    />\r\n                    <input\r\n                        className='brush-size-input'\r\n                        id='brush_size_input'\r\n                        type='text'\r\n                        defaultValue={1}\r\n                        onChange={\r\n                            (event) => {\r\n                                this.state.brush.setSize(Number(event.target.value));\r\n                            }\r\n                        }\r\n                        onKeyPress={\r\n                            (event) => {\r\n                                if (event.key.match(/[0-9]/) === null)\r\n                                    event.preventDefault();\r\n                            }\r\n                        }\r\n                    />\r\n                </div>\r\n\r\n                <Collapsable\r\n                    id='color_picker_container'\r\n                    content={this.rgbControls}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state.brush = props.brush;\r\n\r\n        this.updateColor = props.updateColor.bind(this);\r\n        \r\n        this.fetchDisplayColor = this.fetchDisplayColor.bind(this);\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/eye-open.157d1f69.svg\";","export default __webpack_public_path__ + \"static/media/minus.e3517047.svg\";","import React from 'react';\r\n\r\nimport Collapsable from '../../fragments/Collapsable';\r\n\r\nimport eye_open from '../../../assets/eye-open.svg';\r\nimport minus from '../../../assets/minus.svg';\r\n\r\nimport '../css/side-bar/layers.css';\r\n\r\nexport default class LayerSettings extends React.Component {\r\n    state = {\r\n        layers: null\r\n    }\r\n\r\n    container = null;\r\n\r\n    updateActiveLayer = (layer) => {\r\n        let state = this.state;\r\n\r\n        state.layers.active = layer;\r\n\r\n        let i = state.layers.cache.length - 1;\r\n        while (i >= 0) {\r\n            if (i !== layer)\r\n                document.getElementById(`layer_${i}`).classList.remove('layer-item-selected');\r\n            else\r\n                document.getElementById(`layer_${i}`).classList.add('layer-item-selected');\r\n            i--;\r\n        }\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    updateLayerViewable = (index) => {\r\n        let state = this.state;\r\n\r\n        state.layers.get(index).toggle();\r\n\r\n        document.getElementById(`layer_${index}_viewable`).classList.toggle('layer-item-viewable');\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    layerMovementButtons = (index, max) => {\r\n        return (\r\n            <div\r\n                className='layer-item-movement-group'\r\n            >\r\n                <div\r\n                    id='layer_item_move_up'\r\n                    className={`layer-item-movement-button${index === 0 ? ' hidden' : ''}`}\r\n                    onClick={\r\n                        () => {\r\n                            let state = this.state;\r\n                            state.layers.move(index, index - 1);\r\n                            this.setState(state);\r\n                            this.updateActiveLayer(index - 1);\r\n                        }\r\n                    }\r\n                >\r\n                    /\\\r\n                </div>\r\n                <div\r\n                    id='layer_item_move_down'\r\n                    className={`layer-item-movement-button${index === max ? ' hidden' : ''}`}\r\n                    onClick={\r\n                        () => {\r\n                            let state = this.state;\r\n                            state.layers.move(index, index + 1);\r\n                            this.setState(state);\r\n                            this.updateActiveLayer(index + 1);\r\n                        }\r\n                    }\r\n                >\r\n                    \\/\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    refresh = () => {\r\n        this.container = document.getElementById('layers_controls_container');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n\r\n        this.updateActiveLayer(0);\r\n    }\r\n\r\n    layerControls = () => {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.layers.cache.map((layer, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className={`layer-item${index === this.state.layers.active ? ' layer-item-selected' : ''}`}\r\n                            id={`layer_${index}`}\r\n                            onClick={\r\n                                (event) => {\r\n                                    if (event.target.childNodes > 0)\r\n                                        this.updateActiveLayer(index);\r\n                                }\r\n                            }\r\n                        >\r\n                            {this.layerMovementButtons(index, this.state.layers.cache.length - 1)}\r\n                            <input\r\n                                type='text'\r\n                                className='layer-item-title'\r\n                                placeholder={`Layer ${index + 1}`}\r\n                                value={layer.name}\r\n                                onChange={\r\n                                    (event) => {\r\n                                        let state = this.state;\r\n                                        state.layers.get(index).name = event.target.value;\r\n                                        this.setState(state);\r\n                                    }\r\n                                }\r\n                            />\r\n                            <img\r\n                                src={eye_open}\r\n                                alt='Hide'\r\n                                className='layer-item-button'\r\n                                id={`layer_${index}_viewable`}\r\n                                onClick={\r\n                                    () => {\r\n                                        this.updateLayerViewable(index);\r\n                                    }\r\n                                }\r\n                            />\r\n                            <img\r\n                                src={minus}\r\n                                alt='Remove'\r\n                                className='layer-item-button'\r\n                                onClick={\r\n                                    () => {\r\n                                        let state = this.state;\r\n                                        state.layers = state.layers.remove(index);\r\n                                        this.setState(this.state);\r\n                                    }\r\n                                }\r\n                            />\r\n                        </div>\r\n                    ))\r\n                }\r\n                <div\r\n                    className='layer-add-item'\r\n                    onClick={\r\n                        () => {\r\n                            this.state.layers.add();\r\n                            this.setState(this.state);\r\n                        }\r\n                    }\r\n                >\r\n                    Add Layer\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='side-bar-group'\r\n            >\r\n                <Collapsable\r\n                    id='layer_container'\r\n                    content={this.layerControls}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state.layers = props.layers;\r\n\r\n        this.updateActiveLayer = this.updateActiveLayer.bind(this);\r\n        this.updateLayerViewable = this.updateLayerViewable.bind(this);\r\n        this.layerMovementButtons = this.layerMovementButtons.bind(this);\r\n    }\r\n}","import React from \"react\";\r\n\r\nimport './css/sidebar.css';\r\nimport './css/debug.css';\r\n\r\nimport ColorSettings from \"./side-bar/ColorSettings\";\r\nimport LayerSettings from \"./side-bar/LayerSettings\";\r\n\r\nexport default class SideBar extends React.Component {\r\n\r\n    state = {\r\n        brush: null,\r\n        layers: null\r\n    }\r\n\r\n    updateColor;\r\n\r\n    group = (title, component) => {\r\n        return (\r\n            <div>\r\n                <div\r\n                    className='side-bar-group-title'\r\n                >\r\n                    {title}\r\n                </div>\r\n                {component}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='side-bar-container'\r\n            >\r\n                <ul\r\n                    className='side-bar-group-list'\r\n                >\r\n                    <li className='side-bar-group'>\r\n                        {this.group(\r\n                            'COLORS',\r\n                            <ColorSettings\r\n                                updateColor={this.updateColor}\r\n                                brush={this.state.brush}\r\n                            />\r\n                        )}\r\n                    </li>\r\n                    <li className='side-bar-group'>\r\n                        {this.group(\r\n                            'LAYERS',\r\n                            <LayerSettings\r\n                                layers={this.state.layers}\r\n                            />\r\n                        )}\r\n                    </li>\r\n                    <li className='side-bar-group'>\r\n                        <div\r\n                            className='debug'\r\n                            id='debug'\r\n                        />\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state.brush = props.brush;\r\n        this.state.layers = props.layers;\r\n        this.updateColor = props.updateColor;\r\n    }\r\n}","import React from 'react';\r\nimport * as PIXI from 'pixi.js';\r\n\r\nimport { editor } from '../../app/texture-editor/editor';\r\n\r\nimport Ribbon from './Ribbon';\r\nimport Brushes from './Brushes';\r\nimport SideBar from './SideBar';\r\n\r\nimport mouse from '../../app/texture-editor/common/Mouse';\r\n\r\nimport './css/texture-editor.css';\r\n\r\nlet mouseMove_timeout = null;\r\n\r\nexport default class TextureEditor extends React.Component {\r\n    state = {\r\n        app: null,\r\n        canvas: null,\r\n        doBoundUpdate: true,\r\n        editor\r\n    }\r\n\r\n    getCanvas = () => {\r\n        let parent = document.getElementById('texture_editor_wrapper');\r\n\r\n        let scale = parent.getBoundingClientRect().height < parent.getBoundingClientRect().width\r\n            ? parent.getBoundingClientRect().height * 0.9\r\n            : parent.getBoundingClientRect().width * 0.9;\r\n\r\n        let state = this.state;\r\n\r\n        state.app = new PIXI.Application({\r\n            width: scale,\r\n            height: scale\r\n        });\r\n\r\n        state.editor = editor.create(state.app, 16);\r\n\r\n        state.app.view.oncontextmenu = (e) => { e.preventDefault(); e.stopPropagation(); }\r\n        state.app.view.id = \"editor\";\r\n\r\n        state.canvas = state.editor.startup();\r\n\r\n        parent.appendChild(state.canvas);\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getCanvas();\r\n        this.state.editor.updateBounds();\r\n\r\n        this.state.canvas.addEventListener('mousemove', (event) => {\r\n            mouse.position.old = {\r\n                x: Math.floor(mouse.position.x),\r\n                y: Math.floor(mouse.position.y)\r\n            };\r\n\r\n            mouse.position.x = Math.floor(event.clientX - this.state.editor.bounds.left);\r\n            mouse.position.y = Math.floor(event.clientY - this.state.editor.bounds.top);\r\n\r\n            mouse.moving = true;\r\n\r\n            if (mouseMove_timeout)\r\n                clearTimeout(mouseMove_timeout);\r\n\r\n            mouseMove_timeout = setTimeout(() => {\r\n                mouse.position.old = {\r\n                    x: Math.floor(mouse.position.x),\r\n                    y: Math.floor(mouse.position.y)\r\n                };\r\n                mouse.moving = false;\r\n            }, 30);\r\n        });\r\n\r\n        this.state.canvas.addEventListener('mousedown', (event) => {\r\n            mouse.button.state = true;\r\n            mouse.button.id = event.button;\r\n        });\r\n\r\n        this.state.canvas.addEventListener('mouseup', () => {\r\n            mouse.button.state = false;\r\n            mouse.button.id = null;\r\n        });\r\n\r\n        this.state.canvas.addEventListener('mouseleave', () => mouse.inBounds = false);\r\n\r\n        this.state.canvas.addEventListener('mouseenter', () => mouse.inBounds = true);\r\n\r\n        this.state.canvas.addEventListener('click', () => mouse.clicked = true);\r\n\r\n        window.addEventListener('resize', () => this.state.editor.updateBounds());\r\n    }\r\n\r\n    fetchBrush() {\r\n        return this.state.editor.brush;\r\n    }\r\n\r\n    updateColor(clr) {\r\n        let state = this.state;\r\n\r\n        let color = state.editor.brush.getColor();\r\n\r\n        for (let k in clr)\r\n            color[k] = clr[k] === '' ? 0 : Number(clr[k]);\r\n\r\n        state.editor.brush.setColor(color);\r\n        \r\n        this.setState(state);\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='editor-container'\r\n            >\r\n                <Brushes \r\n                    brush={this.state.editor.brush}\r\n                />\r\n\r\n                <div\r\n                    className='texture-editor-container'\r\n                    id='texture_editor_container'\r\n                >\r\n                    <Ribbon\r\n                        editor={this.state.editor}\r\n                    />\r\n\r\n                    <div\r\n                        className='texture-editor-wrapper'\r\n                        id='texture_editor_wrapper'\r\n                    />\r\n\r\n                    <div\r\n                        className='texture-editor-controls'\r\n                    >\r\n                        <label\r\n                            htmlFor='texture-name-input'\r\n                        >\r\n                            File name:\r\n                        </label>\r\n                        <input\r\n                            type='text'\r\n                            name='texture-name-input'\r\n                            id='image_name'\r\n                            defaultValue='texture'\r\n                            onKeyPress={\r\n                                (event) => {\r\n                                    if (!event.key.match(/[\\w\\d.()]/))\r\n                                        event.preventDefault();\r\n                                }\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <SideBar\r\n                    brush={this.state.editor.brush}\r\n                    updateColor={this.updateColor}\r\n                    layers={this.state.editor.layers}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.updateColor = this.updateColor.bind(this);\r\n        this.fetchBrush = this.fetchBrush.bind(this);\r\n    }\r\n}","import './styles/App.css';\r\n\r\n// import { ConfigForm } from './components/ConfigGUI';\r\nimport TextureEditor from './components/editor/TextureEditor';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <TextureEditor />\r\n      {/* <ConfigForm /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nimport '../styles/nav-bar.css'\r\n\r\nexport default class NavBar extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <div className='nav-bar'>\r\n                {/* <div className='nav-bar-button'>Button 1</div>\r\n                <div className='nav-bar-button'>Button 2</div>\r\n                <div className='nav-bar-button'>Button 3</div>\r\n                <div className='nav-bar-button'>Button 4</div>\r\n                <div className='nav-bar-button'>Button 5</div> */}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport NavBar from './components/NavBar';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <header>\r\n      <NavBar />\r\n    </header>\r\n    <main>\r\n      <App />\r\n    </main>\r\n    <footer>\r\n      <div>Built by ChrisOfNormandy.</div>\r\n      <div>Join <a href='https://discord.gg/EW5JsGJfdt'>Discord</a></div>\r\n    </footer>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}