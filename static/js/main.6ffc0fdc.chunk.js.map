{"version":3,"sources":["app/texture-editor/common/Mouse.js","app/texture-editor/helpers/colorize.js","app/texture-editor/editor.js","app/texture-editor/helpers/distance.js","components/Menu.js","components/editor/Ribbon.js","assets/pencil.svg","assets/paintbrush.svg","components/editor/Brushes.js","components/editor/SideBar.js","components/editor/TextureEditor.js","App.js","reportWebVitals.js","components/NavBar.js","index.js"],"names":["mouse","position","x","y","old","button","state","id","origin","displacement","getPosition","offset","inBounds","moving","clicked","module","exports","decToHex","c","hex","Number","toString","length","rgbToHex","r","g","b","interpolate","v1","v2","a","Math","floor","calculatePixelColor","color1","color2","loader","PIXI","shared","Graphics","_","app","brush","style","fill","size","resolution","background","width","height","scale","debug","debugElem","document","getElementById","pixels","showGrid","refresh","doBoundUpdate","bounds","type","getCurrentColor","setBrush","setBrushSize","setBrushFill","color","painting","highlight","graphic","tint","colorize","alpha","updateBounds","canvasBounds","view","getBoundingClientRect","left","right","top","bottom","startup","onReady","ticker","add","draw","setup","console","log","isWebGLSupported","sayHello","load","updateDebug","pos","pixel","getPixel","innerHTML","JSON","stringify","buffer","mousePos","focus","forEach","stage","removeChild","setPixel","addChild","i","changed","splice","pos1","pos2","abs","round","updatePixel","clear","ignoreChange","push","index","lineStyle","beginFill","drawRect","endFill","compose","canvas","createElement","context","getContext","imgData","createImageData","v","data","putImageData","url","toDataURL","link","href","name","value","setAttribute","click","create","children","editor","Menu","props","className","hidden","content","map","item","Ribbon","key","onClick","htmlFor","onChange","event","target","checked","componentDidMount","ribbonContent","addEventListener","obj","parentElement","contains","classList","render","menu","toggle","setResolution","bind","preventDefault","res","isNaN","this","React","Component","Brushes","brushes","icon","pencil","paintbrush","src","alt","SideBar","previewElem","updatePreview","rgba","fetchBrush","backgroundColor","defaultValue","onKeyPress","match","placeholder","updateColor","min","max","controls","maxHeight","scrollHeight","mouseMove_timeout","TextureEditor","getCanvas","parent","oncontextmenu","e","stopPropagation","appendChild","setState","clientX","clientY","clearTimeout","setTimeout","window","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NavBar","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.6ffc0fdc.chunk.js","sourcesContent":["const mouse = {\r\n    position: {\r\n        x: 0,\r\n        y: 0,\r\n        old: { x: 0, y: 0 }\r\n    },\r\n    button: {\r\n        state: false,\r\n        id: 0,\r\n        origin: { x: null, y: null }\r\n    },\r\n    displacement: () => {\r\n        return {\r\n            x: mouse.position.old.x === null ? 0 : mouse.position.x - mouse.position.old.x,\r\n            y: mouse.position.old.y === null ? 0 : mouse.position.y - mouse.position.old.y\r\n        }\r\n    },\r\n    getPosition: (offset = null) => {\r\n        return offset === null\r\n        ?\r\n        {\r\n            x: mouse.position.x,\r\n            y: mouse.position.y\r\n        }\r\n        :\r\n        {\r\n                x: mouse.position.x - offset.x,\r\n                y: mouse.position.y - offset.y\r\n        }\r\n    },\r\n    inBounds: false,\r\n    moving: false,\r\n    clicked: false\r\n};\r\n\r\nmodule.exports = mouse;","function decToHex(c) {\r\n    var hex = Number(c).toString(16);\r\n    return hex.length === 1 ? `0${hex}` : hex;\r\n}\r\n\r\n\r\nfunction rgbToHex(r, g, b) {\r\n    return Number(`0x${decToHex(r)}${decToHex(g)}${decToHex(b)}`);\r\n}\r\n\r\nfunction rgbToHsv(r, g, b) {\r\n    r /= 255; g /= 255; b /= 255;\r\n\r\n    let v = Math.max(r, g, b), c = v - Math.min(r, g, b);\r\n    let h = c && ((v === r) ? (g - b) / c : ((v === g) ? 2 + (b - r) / c : 4 + (r - g) / c));\r\n\r\n    return {\r\n        h: 60 * (h < 0 ? h + 6 : h),\r\n        s: v && c / v,\r\n        v\r\n    };\r\n}\r\n\r\nfunction hsvToRgb(h, s, v) {\r\n    let r, g, b;\r\n    let i = Math.floor(h * 6);\r\n    let f = h * 6 - i;\r\n    let p = v * (1 - s);\r\n    let q = v * (1 - f * s);\r\n    let t = v * (1 - (1 - f) * s);\r\n\r\n    switch (i % 6) {\r\n        case 0: {\r\n            r = v;\r\n            g = t;\r\n            b = p;\r\n            break;\r\n        }\r\n        case 1: {\r\n            r = q;\r\n            g = v;\r\n            b = p;\r\n            break;\r\n        }\r\n        case 2: {\r\n            r = p;\r\n            g = v;\r\n            b = t;\r\n            break;\r\n        }\r\n        case 3: {\r\n            r = p;\r\n            g = q;\r\n            b = v;\r\n            break;\r\n        }\r\n        case 4: {\r\n            r = t;\r\n            g = p;\r\n            b = v;\r\n            break;\r\n        }\r\n        case 5: {\r\n            r = v;\r\n            g = p;\r\n            b = q;\r\n            break;\r\n        }\r\n        default: return null;\r\n    }\r\n\r\n    return [r * 255, g * 255, b * 255];\r\n}\r\n\r\nfunction interpolate(v1, v2, a) {\r\n    return Math.floor((v2 * a) + (v1 * (1 - a)));\r\n}\r\n\r\nfunction calculatePixelColor(color1, color2) {\r\n    if (color1.a === 0)\r\n        return color2;\r\n    if (color2.a === 0)\r\n        return color1;\r\n\r\n    return {\r\n        r: interpolate(color1.r, color2.r, color2.a / 255),\r\n        g: interpolate(color1.g, color2.g, color2.a / 255),\r\n        b: interpolate(color1.b, color2.b, color2.a / 255),\r\n        a: (color1.a + color2.a) > 255 ? 255 : color1.a + color2.a\r\n    }\r\n}\r\n\r\nexport {\r\n    decToHex,\r\n    rgbToHex,\r\n    rgbToHsv,\r\n    hsvToRgb,\r\n    interpolate,\r\n    calculatePixelColor\r\n}","import * as PIXI from 'pixi.js';\r\nimport mouse from './common/Mouse';\r\n\r\nimport * as colorize from './helpers/colorize';\r\nimport * as distance from './helpers/distance';\r\n\r\nconst loader = PIXI.Loader.shared,\r\n    Graphics = PIXI.Graphics\r\n\r\n\r\nconst _ = {\r\n    /**\r\n     * @type {PIXI.Application}\r\n     */\r\n    app: null,\r\n\r\n    brush: {\r\n        style: 'pencil',\r\n        fill: {\r\n            r: 0, g: 0, b: 0, a: 255\r\n        },\r\n        size: 1\r\n    },\r\n\r\n    resolution: 0,\r\n\r\n    background: [],\r\n\r\n    width: 0,\r\n    height: 0,\r\n    scale: 0,\r\n\r\n    debug: false,\r\n    debugElem: document.getElementById('debug'),\r\n\r\n    pixels: [],\r\n    showGrid: false,\r\n    refresh: false,\r\n\r\n    doBoundUpdate: true,\r\n    bounds: null,\r\n\r\n    type: \"WebGL\",\r\n\r\n    getCurrentColor: () => {\r\n        return {\r\n            r: _.brush.fill.r,\r\n            g: _.brush.fill.g,\r\n            b: _.brush.fill.b,\r\n            a: _.brush.fill.a\r\n        }\r\n    },\r\n\r\n    setBrush: (brush) => {\r\n        _.brush.style = brush;\r\n    },\r\n\r\n    setBrushSize: (size) => {\r\n        _.brush.size = size;\r\n    },\r\n\r\n    setBrushFill: (color) => {\r\n        _.brush.fill = color;\r\n        _.painting.highlight.graphic.tint = colorize.rgbToHex(color.r, color.g, color.b);\r\n        _.painting.highlight.graphic.alpha = color.a / 255;\r\n    },\r\n\r\n    updateBounds: () => {\r\n        let canvasBounds = _.app.view.getBoundingClientRect();\r\n\r\n        _.bounds = {\r\n            x: canvasBounds.x,\r\n            y: canvasBounds.y,\r\n            left: canvasBounds.left,\r\n            right: canvasBounds.right,\r\n            top: canvasBounds.top,\r\n            bottom: canvasBounds.bottom,\r\n            width: canvasBounds.width,\r\n            height: canvasBounds.height\r\n        };\r\n\r\n        _.doBoundUpdate = false;\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {PIXI.Application} app \r\n     * @returns {HTMLCanvasElement}\r\n     */\r\n    startup: () => {\r\n        _.onReady(() => _.app.ticker.add(() => _.draw()));\r\n\r\n        return _.app.view;\r\n    },\r\n\r\n    onReady: (setup) => {\r\n        console.log('App ready. Loading.');\r\n\r\n        if (!PIXI.utils.isWebGLSupported()) {\r\n            _.type = \"canvas\";\r\n        }\r\n\r\n        PIXI.utils.sayHello(_.type);\r\n\r\n        loader\r\n            .load(setup);\r\n    },\r\n\r\n    updateDebug: () => {\r\n        if (_.debugElem === null)\r\n            _.debugElem = document.getElementById('debug');\r\n\r\n        if (!_.debug) {\r\n            _.debugElem.innerHTML = \"\";\r\n            return;\r\n        }\r\n\r\n        let pos = mouse.getPosition();\r\n        let x = Math.floor(pos.x / _.scale),\r\n            y = Math.floor(pos.y / _.scale);\r\n        let pixel = _.getPixel(x, y);\r\n\r\n        if (pixel === null)\r\n            return;\r\n\r\n        _.debugElem.innerHTML =\r\n            `Mouse: ${JSON.stringify(pos)} --> ${x}, ${y}<br />` +\r\n            `Brush:<br />` +\r\n            ` - Color: ${JSON.stringify(_.brush.fill)}<br />` +\r\n            ` - Pos: ${_.painting.highlight.x}, ${_.painting.highlight.y} --> ${_.painting.highlight.x + _.brush.size - 1}, ${_.painting.highlight.y + _.brush.size - 1}<br />` +\r\n            ` - Hex: 0x${colorize.decToHex(_.brush.fill.r)}${colorize.decToHex(_.brush.fill.g)}${colorize.decToHex(_.brush.fill.b)}<br />` +\r\n            ` - Style: ${_.brush.style}<br />` +\r\n            `Buffer: ${_.buffer.length}<br />` +\r\n            `Hover: ${JSON.stringify(pixel.color)}<br />` +\r\n            ` - Tint:${pixel.graphic.tint}<br />` +\r\n            ` - Alpha: ${pixel.graphic.alpha}`;\r\n    },\r\n\r\n    buffer: [],\r\n\r\n    painting: {\r\n        mousePos: null,\r\n        highlight: {\r\n            x: 0, y: 0, graphic: null, focus: null\r\n        },\r\n        old: {\r\n            x: 0,\r\n            y: 0\r\n        }\r\n    },\r\n\r\n    draw: () => {\r\n        _.updateDebug();\r\n\r\n        if (_.refresh) {\r\n            _.pixels.forEach(pixel => {\r\n                _.app.stage.removeChild(pixel.graphic);\r\n                _.setPixel(pixel.x, pixel.y, pixel.color);\r\n            });\r\n            _.refresh = false;\r\n\r\n            _.app.stage.removeChild(_.painting.highlight.graphic);\r\n            _.app.stage.addChild(_.painting.highlight.graphic);\r\n            return;\r\n        }\r\n\r\n        _.buffer.forEach((pixel, i) => {\r\n            pixel.graphic.tint = colorize.rgbToHex(pixel.color.r, pixel.color.g, pixel.color.b);\r\n            pixel.graphic.alpha = pixel.color.a / 255;\r\n\r\n            if (pixel.changed) {\r\n                if (!mouse.button.state)\r\n                    pixel.changed = false;\r\n            }\r\n            else\r\n                _.buffer.splice(i, 1);\r\n        });\r\n\r\n        _.painting.mousePos = mouse.getPosition();\r\n\r\n        _.painting.old.x = _.painting.highlight.x;\r\n        _.painting.old.y = _.painting.highlight.y;\r\n\r\n        _.painting.highlight.x = Math.floor((_.painting.mousePos.x - (_.brush.size - 1) / 2 * _.scale) / _.scale);\r\n        _.painting.highlight.y = Math.floor((_.painting.mousePos.y - (_.brush.size - 1) / 2 * _.scale) / _.scale);\r\n\r\n        _.painting.highlight.graphic.x = _.painting.highlight.x * _.scale;\r\n        _.painting.highlight.graphic.y = _.painting.highlight.y * _.scale;\r\n\r\n        _.painting.highlight.graphic.width = _.scale * _.brush.size;\r\n        _.painting.highlight.graphic.height = _.scale * _.brush.size;\r\n\r\n        if (mouse.button.state) {\r\n            if (mouse.button.id === 0) {\r\n                for (let x = _.painting.highlight.x < 0 ? 0 : _.painting.highlight.x; x < _.painting.highlight.x + _.brush.size && x < _.resolution; x++) {\r\n                    for (let y = _.painting.highlight.y < 0 ? 0 : _.painting.highlight.y; y < _.painting.highlight.y + _.brush.size && y < _.resolution; y++) {\r\n                        switch (_.brush.style) {\r\n                            case 'paint': {\r\n                                let color = _.getCurrentColor();\r\n                                color.a = Math.floor((1 - (distance.manhattan(\r\n                                    {\r\n                                        x: _.painting.highlight.x + Math.floor(_.brush.size / 2),\r\n                                        y: _.painting.highlight.y + Math.floor(_.brush.size / 2)\r\n                                    },\r\n                                    {\r\n                                        x, y\r\n                                    }\r\n                                ) / Math.round(_.brush.size / 2))) * 255);\r\n                                if (color.a < 0)\r\n                                    color.a = 0;\r\n\r\n                                _.updatePixel(x, y, color, _.painting.old.x !== _.painting.highlight.x || _.painting.old.y !== _.painting.highlight.y);\r\n                                break;\r\n                            }\r\n                            default: {\r\n                                _.updatePixel(x, y, _.getCurrentColor());\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (mouse.button.id === 2)\r\n                _.updatePixel(_.painting.highlight.x, _.painting.highlight.y, { r: 0, g: 0, b: 0, a: 0 });\r\n\r\n            if (!mouse.inBounds)\r\n                mouse.button.state = false;\r\n        }\r\n\r\n        mouse.clicked = false;\r\n    },\r\n\r\n    clear: () => {\r\n        _.pixels.forEach(pixel => {\r\n            pixel.color = { r: 0, g: 0, b: 0, a: 0 };\r\n            pixel.graphic.tint = 0x000000;\r\n            pixel.graphic.alpha = 0;\r\n        });\r\n    },\r\n\r\n    getPixel: (x, y) => {\r\n        return !_.pixels[y * _.resolution + x] ? null : _.pixels[y * _.resolution + x];\r\n    },\r\n\r\n    updatePixel: (x, y, color, ignoreChange = false) => {\r\n        let pixel = _.getPixel(x, y);\r\n        if (pixel === null || (pixel.changed && !ignoreChange))\r\n            return;\r\n\r\n        pixel.color = colorize.calculatePixelColor(pixel.color, color);\r\n        pixel.changed = true;\r\n\r\n        _.buffer.push(pixel);\r\n    },\r\n\r\n    setPixel: (x, y, color) => {\r\n        if (!_.getPixel(x, y)) {\r\n            _.pixels[y * _.resolution + x] = {\r\n                color,\r\n                graphic: null,\r\n                x,\r\n                y,\r\n                index: y * _.resolution + x,\r\n                changed: false\r\n            }\r\n        }\r\n\r\n        let pixel = _.getPixel(x, y);\r\n\r\n        pixel.graphic = new Graphics();\r\n\r\n        if (_.showGrid)\r\n            pixel.graphic.lineStyle(1, 0x000000, 1);\r\n\r\n        pixel.graphic.beginFill(0xFFFFFF);\r\n        pixel.graphic.drawRect(0, 0, _.scale, _.scale);\r\n        pixel.graphic.endFill();\r\n\r\n        pixel.graphic.tint = colorize.rgbToHex(color.r, color.g, color.b);\r\n        pixel.graphic.alpha = color.a / 255;\r\n\r\n        pixel.graphic.x = x * _.scale;\r\n        pixel.graphic.y = y * _.scale;\r\n\r\n        pixel.color = color === null ? { r: 0, g: 0, b: 0, a: 0 } : color;\r\n\r\n        _.app.stage.addChild(pixel.graphic);\r\n\r\n        return pixel;\r\n    },\r\n\r\n    compose: () => {\r\n        const canvas = document.createElement('canvas'), context = canvas.getContext('2d');\r\n        canvas.width = _.resolution;\r\n        canvas.height = _.resolution;\r\n\r\n        let imgData = context.createImageData(_.resolution, _.resolution);\r\n\r\n        let color;\r\n        for (let x = 0; x < _.resolution; x++) {\r\n            for (let y = 0; y < _.resolution; y++) {\r\n                let v = (y * _.resolution + x) * 4;\r\n                color = _.getPixel(x, y).color;\r\n\r\n                imgData.data[v] = color.r;\r\n                imgData.data[v + 1] = color.g;\r\n                imgData.data[v + 2] = color.b;\r\n                imgData.data[v + 3] = color.a;\r\n            }\r\n        }\r\n\r\n        context.putImageData(imgData, 0, 0);\r\n\r\n        const url = canvas.toDataURL('image/png');\r\n        let link = document.createElement('a');\r\n        link.href = url;\r\n\r\n        let name = document.getElementById('image_name').value;\r\n        link.setAttribute('download', `${!!name ? name : 'texture'}.png`);\r\n        link.click();\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {PIXI.Application} app \r\n     */\r\n    create: (app, resolution = 16) => {\r\n        if (_.app !== null)\r\n            while (_.app.stage.children[0])\r\n                _.app.stage.removeChild(_.app.stage.children[0]);\r\n\r\n        _.app = app;\r\n\r\n        _.getCurrentColor();\r\n\r\n        _.resolution = resolution\r\n\r\n        _.width = app.view.width;\r\n        _.height = app.view.height;\r\n        _.scale = _.width / _.resolution;\r\n\r\n        _.pixels = [];\r\n\r\n        _.painting.highlight.graphic = new Graphics();\r\n        _.painting.highlight.graphic.beginFill(0xFFFFFF);\r\n        _.painting.highlight.graphic.drawRect(0, 0, _.scale + 3, _.scale + 3);\r\n        _.painting.highlight.graphic.endFill();\r\n\r\n        _.painting.highlight.graphic.tint = colorize.rgbToHex(_.brush.fill.r, _.brush.fill.g, _.brush.fill.b);\r\n        _.painting.highlight.graphic.alpha = _.brush.fill.a / 255;\r\n\r\n        for (let x = 0; x < _.resolution; x++) {\r\n            for (let y = 0; y < _.resolution; y++) {\r\n                _.background[y * _.resolution + x] = new Graphics();\r\n                _.background[y * _.resolution + x].beginFill(0xFFFFFF);\r\n                _.background[y * _.resolution + x].drawRect(0, 0, _.scale, _.scale);\r\n                _.background[y * _.resolution + x].endFill();\r\n                _.background[y * _.resolution + x].tint = (x % 2 === 0 && y % 2 === 1) || (x % 2 === 1 && y % 2 === 0) ? 0xFFFFFF : 0xDDDDDD;\r\n\r\n                _.background[y * _.resolution + x].x = x * _.scale;\r\n                _.background[y * _.resolution + x].y = y * _.scale;\r\n\r\n                _.app.stage.addChild(_.background[y * _.resolution + x]);\r\n\r\n                _.setPixel(x, y, {\r\n                    r: Math.floor(255 * x / (_.resolution - 1)),\r\n                    g: Math.floor(255 * ((x + y) / 2) / (_.resolution - 1)),\r\n                    b: Math.floor(255 * y / (_.resolution - 1)),\r\n                    a: Math.floor(255 - Math.abs(((255 * x / (_.resolution - 1) + 255 * y / (_.resolution - 1)) / 2) - 128))\r\n                });\r\n            }\r\n        }\r\n\r\n        _.app.stage.addChild(_.painting.highlight.graphic);\r\n\r\n        return _;\r\n    }\r\n}\r\n\r\nconst editor = _;\r\n\r\nexport {\r\n    editor\r\n}","function manhattan(pos1, pos2) {\r\n    return Math.abs(pos2.x - pos1.x) + Math.abs(pos2.y - pos1.y);\r\n}\r\n\r\nfunction euclidean(pos1, pos2) {\r\n    return Math.sqrt((pos2.x - pos1.x) * (pos2.x - pos1.x) + (pos2.y - pos1.y) * (pos2.y - pos1.y));\r\n}\r\n\r\nexport {\r\n    manhattan,\r\n    euclidean\r\n}","function Menu(props) {\r\n    return (\r\n        <div\r\n            id={props.id}\r\n            className={`menu${!!props.hidden ? ' hidden' : ''}`}\r\n        >\r\n            {props.content.map((item, i) => (\r\n                <div\r\n                    className='menu-item'\r\n                    key={i}\r\n                >\r\n                    {item}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Menu }","import React from 'react';\r\n\r\nimport { Menu } from '../Menu';\r\n\r\nimport './css/ribbon.css';\r\n\r\nclass Ribbon extends React.Component {\r\n\r\n    editor;\r\n\r\n    setResolution(event) {\r\n        event.preventDefault();\r\n        let res = Number(document.getElementById('resolution_input').value)\r\n        if (isNaN(res))\r\n            return;\r\n\r\n        if (res % 16 === 0 && res > 0 && res <= 128)\r\n            this.editor = this.editor.create(this.editor.app, res);\r\n    }\r\n\r\n    content = [\r\n        {\r\n            key: \"File\",\r\n            id: 'file_menu',\r\n            value: (<Menu\r\n                content={[\r\n                    (<div\r\n                        className='menu-button'\r\n                        onClick={\r\n                            () => this.editor.compose()\r\n                        }\r\n                    >\r\n                        Download\r\n                    </div>),\r\n                    // (<div\r\n                    //     className='menu-break'\r\n                    // />),\r\n                    // (<form\r\n                    //     className='menu-button'\r\n                    // >\r\n                    //     <input\r\n                    //         type='text'\r\n                    //         id='resolution_input'\r\n                    //         name='resolution'\r\n                    //         defaultValue='16'\r\n                    //     />\r\n                    //     <input\r\n                    //         type='submit'\r\n                    //         value='Create'\r\n                    //         onClick={this.setResolution}\r\n                    //     />\r\n                    // </form>),\r\n                    (<div\r\n                        className='menu-break'\r\n                    />),\r\n                    (<div\r\n                        className='menu-button'\r\n                    >\r\n                        <label\r\n                            id='debug_check_label'\r\n                            htmlFor='debug-check'\r\n                        >\r\n                            Debug\r\n                        </label>\r\n                        <input\r\n                            name='debug-check'\r\n                            type='checkbox'\r\n                            onChange={\r\n                                (event) => {\r\n                                    this.editor.debug = event.target.checked;\r\n                                }\r\n                            }\r\n                        />\r\n                    </div>)\r\n                ]}\r\n                id='file_menu'\r\n                hidden={true}\r\n            />)\r\n        },\r\n        {\r\n            key: \"Edit\",\r\n            id: 'edit_menu',\r\n            value: (<Menu\r\n                content={[\r\n                    (<div\r\n                        className='menu-button'\r\n                        onClick={\r\n                            () => this.editor.clear()\r\n                        }\r\n                    >\r\n                        Clear\r\n                    </div>)\r\n                ]}\r\n                id='edit_menu'\r\n                hidden={true}\r\n            />)\r\n        },\r\n        {\r\n            key: \"View\",\r\n            id: 'view_menu',\r\n            value: (\r\n                <Menu\r\n                    content={[\r\n                        (<div\r\n                            className='menu-button'\r\n                            onClick={\r\n                                () => {\r\n                                    this.editor.showGrid = !this.editor.showGrid;\r\n                                    this.editor.refresh = true;\r\n                                }\r\n                            }\r\n                        >\r\n                            Toggle Grid\r\n                        </div>)\r\n                    ]}\r\n                    id='view_menu'\r\n                    hidden={true}\r\n                />\r\n            )\r\n        }\r\n    ];\r\n\r\n    componentDidMount = () => {\r\n        let ribbonContent = [];\r\n        this.content.forEach(item => ribbonContent.push(document.getElementById(item.id)));\r\n\r\n        document.addEventListener('click', (event) => {\r\n            ribbonContent.forEach(obj => {\r\n                if (!obj.parentElement.contains(event.target))\r\n                    obj.classList.add('hidden');\r\n            });\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n\r\n        return (\r\n            <div\r\n                className='texture-editor-ribbon'\r\n            >\r\n                {this.content.map(menu => (\r\n                    <div\r\n                        key={menu.key}\r\n                        className='ribbon-menu'\r\n                    >\r\n                        <div\r\n                            className='ribbon-menu-button'\r\n                            onClick={\r\n                                () => {\r\n                                    document.getElementById(menu.id).classList.toggle('hidden');\r\n                                }\r\n                            }\r\n                        >\r\n                            {menu.key}\r\n                        </div>\r\n                        {menu.value}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.editor = props.editor;\r\n\r\n        this.setResolution = this.setResolution.bind(this);\r\n    }\r\n}\r\n\r\nexport { Ribbon }","export default __webpack_public_path__ + \"static/media/pencil.34dc5e45.svg\";","export default __webpack_public_path__ + \"static/media/paintbrush.3b3671d0.svg\";","import React from \"react\";\r\n\r\nimport './css/brushes.css';\r\n\r\nimport pencil from '../../assets/pencil.svg';\r\nimport paintbrush from '../../assets/paintbrush.svg';\r\n\r\nclass Brushes extends React.Component {\r\n\r\n    brushes = [\r\n        {\r\n            key: 'pencil',\r\n            icon: pencil\r\n        },\r\n        {\r\n            key: 'paint',\r\n            icon: paintbrush\r\n        }\r\n    ]\r\n\r\n    editor;\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='brushes-container'\r\n            >\r\n                {this.brushes.map(brush => (\r\n                    <img\r\n                        key={brush.key}\r\n                        src={brush.icon}\r\n                        className='brush-icon'\r\n                        id={`${brush.key}_brush`}\r\n                        alt={brush.key}\r\n                        onClick={\r\n                            () => this.editor.setBrush(brush.key)\r\n                        }\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.editor = props.editor;\r\n    }\r\n}\r\n\r\nexport { Brushes }","import React from \"react\";\r\n\r\nimport './css/sidebar.css';\r\n\r\nclass SideBar extends React.Component {\r\n\r\n    updateColor;\r\n    fetchBrush;\r\n\r\n    previewElem = null;\r\n\r\n    updatePreview = () => {\r\n        let rgba = this.fetchBrush().fill;\r\n        this.previewElem.style.backgroundColor = `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a / 255})`;\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='side-bar-container'\r\n            >\r\n                <div\r\n                    className='debug'\r\n                    id='debug'\r\n                />\r\n\r\n                <div\r\n                    className='color-picker-container'\r\n                >\r\n                    <div\r\n                        className='container-group'\r\n                        id='color_picker_preview_container'\r\n                    >\r\n                        <div\r\n                            className='color-picker-preview'\r\n                            id='color_picker_preview'\r\n                        />\r\n                        <div\r\n                            className='brush-size-preview'\r\n                            id='brush_size_preview'\r\n                        />\r\n                        <input\r\n                            className='brush-size-input'\r\n                            id='brush_size_input'\r\n                            type='text'\r\n                            defaultValue={1}\r\n                            onChange={\r\n                                (event) => {\r\n                                    this.fetchBrush().size = Number(event.target.value);\r\n                                }\r\n                            }\r\n                            onKeyPress={\r\n                                (event) => {\r\n                                    if (event.key.match(/[0-9]/) === null)\r\n                                        event.preventDefault();\r\n                                }\r\n                            }\r\n                        />\r\n                    </div>\r\n\r\n                    <div\r\n                        className='collapsable-container-group container-group'\r\n                        id='color_picker_controls_container'\r\n                    >\r\n                        {['r', 'g', 'b', 'a'].map(v => (\r\n                            <div\r\n                                key={`rgb_${v}_div`}\r\n                                className='rgb-input-container'\r\n                            >\r\n                                <label\r\n                                    htmlFor={`rgb_${v}`}\r\n                                    className='rgb-input-label'\r\n                                >\r\n                                    {v}\r\n                                </label>\r\n                                <input\r\n                                    key={v}\r\n                                    name={`rgb_${v}`}\r\n                                    id={`rgb_${v}`}\r\n                                    type='text'\r\n                                    className='rgb-input-field'\r\n                                    placeholder='0'\r\n                                    onChange={\r\n                                        (event) => {\r\n                                            this.updateColor(event);\r\n                                            this.updatePreview();\r\n                                        }\r\n                                    }\r\n                                    onKeyPress={\r\n                                        (event) => {\r\n                                            if (!event.key.match(/[0-9]/))\r\n                                                event.preventDefault();\r\n                                        }\r\n                                    }\r\n                                    defaultValue={v === 'a' ? 255 : ''}\r\n                                />\r\n\r\n                                <input\r\n                                    key={`${v}_slider`}\r\n                                    name={`rgb_${v}_slider`}\r\n                                    type='range'\r\n                                    min='0'\r\n                                    max='255'\r\n                                    className='rgb-input-slider'\r\n                                    onChange={\r\n                                        (event) => {\r\n                                            document.getElementById(`rgb_${v}`).value = event.target.value;\r\n                                            this.updateColor(event);\r\n                                            this.updatePreview();\r\n                                        }\r\n                                    }\r\n                                    defaultValue={v === 'a' ? 255 : 0} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div\r\n                        className='collapsable-container-group-trigger'\r\n                        id='collapse_color_picker'\r\n                        onClick={\r\n                            () => {\r\n                                let controls = document.getElementById('color_picker_controls_container');\r\n\r\n                                controls.style.maxHeight = !controls.style.maxHeight ? controls.scrollHeight + 'px' : null;\r\n                            }\r\n                        }\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.previewElem = document.getElementById('color_picker_preview');\r\n        this.updatePreview();\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.updateColor = props.updateColor;\r\n        this.fetchBrush = props.fetchBrush;\r\n\r\n        this.updatePreview = this.updatePreview.bind(this);\r\n    }\r\n}\r\n\r\nexport { SideBar }","import React from 'react';\r\nimport * as PIXI from 'pixi.js';\r\n\r\nimport { editor } from '../../app/texture-editor/editor';\r\n\r\nimport { Ribbon } from './Ribbon';\r\nimport { Brushes } from './Brushes';\r\nimport { SideBar } from './SideBar';\r\n\r\nimport mouse from '../../app/texture-editor/common/Mouse';\r\n\r\nimport './css/texture-editor.css';\r\n\r\nlet mouseMove_timeout = null;\r\n\r\nclass TextureEditor extends React.Component {\r\n    state = {\r\n        app: null,\r\n        canvas: null,\r\n        doBoundUpdate: true,\r\n        editor\r\n    }\r\n\r\n    getCanvas = () => {\r\n        let parent = document.getElementById('texture_editor_wrapper');\r\n\r\n        let scale = parent.getBoundingClientRect().height < parent.getBoundingClientRect().width\r\n            ? parent.getBoundingClientRect().height * 0.9\r\n            : parent.getBoundingClientRect().width * 0.9;\r\n\r\n        let state = this.state;\r\n\r\n        state.app = new PIXI.Application({\r\n            width: scale,\r\n            height: scale\r\n        });\r\n\r\n        state.editor = editor.create(state.app, 16);\r\n\r\n        state.app.view.oncontextmenu = (e) => { e.preventDefault(); e.stopPropagation(); }\r\n        state.app.view.id = \"editor\";\r\n\r\n        state.canvas = state.editor.startup();\r\n\r\n        parent.appendChild(state.canvas);\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getCanvas();\r\n        this.state.editor.updateBounds();\r\n\r\n        this.state.canvas.addEventListener('mousemove', (event) => {\r\n            mouse.position.old = {\r\n                x: Math.floor(mouse.position.x),\r\n                y: Math.floor(mouse.position.y)\r\n            };\r\n\r\n            mouse.position.x = Math.floor(event.clientX - this.state.editor.bounds.left);\r\n            mouse.position.y = Math.floor(event.clientY - this.state.editor.bounds.top);\r\n\r\n            mouse.moving = true;\r\n\r\n            if (mouseMove_timeout)\r\n                clearTimeout(mouseMove_timeout);\r\n\r\n            mouseMove_timeout = setTimeout(() => {\r\n                mouse.position.old = {\r\n                    x: Math.floor(mouse.position.x),\r\n                    y: Math.floor(mouse.position.y)\r\n                };\r\n                mouse.moving = false;\r\n            }, 30);\r\n        });\r\n\r\n        this.state.canvas.addEventListener('mousedown', (event) => {\r\n            mouse.button.state = true;\r\n            mouse.button.id = event.button;\r\n        });\r\n\r\n        this.state.canvas.addEventListener('mouseup', () => {\r\n            mouse.button.state = false;\r\n            mouse.button.id = null;\r\n        });\r\n\r\n        this.state.canvas.addEventListener('mouseleave', () => mouse.inBounds = false);\r\n\r\n        this.state.canvas.addEventListener('mouseenter', () => mouse.inBounds = true);\r\n\r\n        this.state.canvas.addEventListener('click', () => mouse.clicked = true);\r\n\r\n        window.addEventListener('resize', () => {\r\n            this.state.editor.updateBounds();\r\n        });\r\n    }\r\n\r\n    fetchBrush() {\r\n        return this.state.editor.brush;\r\n    }\r\n\r\n    updateColor(event) {\r\n        let state = this.state;\r\n        if (event.target.value > 255)\r\n            event.target.value = 255;\r\n\r\n        let color = state.editor.getCurrentColor();\r\n        color[event.target.name.match(/rgb_([rgba])/)[1]] = event.target.value === '' ? 0 : Number(event.target.value);\r\n        state.editor.setBrushFill(color);\r\n        \r\n        this.setState(state);\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='editor-container'\r\n            >\r\n                <Brushes editor={this.state.editor}/>\r\n\r\n                <div\r\n                    className='texture-editor-container'\r\n                    id='texture_editor_container'\r\n                >\r\n                    <Ribbon\r\n                        editor={this.state.editor}\r\n                    />\r\n\r\n                    <div\r\n                        className='texture-editor-wrapper'\r\n                        id='texture_editor_wrapper'\r\n                    />\r\n\r\n                    <div\r\n                        className='texture-editor-controls'\r\n                    >\r\n                        <label\r\n                            htmlFor='texture-name-input'\r\n                        >\r\n                            File name:\r\n                        </label>\r\n                        <input\r\n                            type='text'\r\n                            name='texture-name-input'\r\n                            id='image_name'\r\n                            defaultValue='texture'\r\n                            onKeyPress={\r\n                                (event) => {\r\n                                    if (!event.key.match(/[\\w\\d.()]/))\r\n                                        event.preventDefault();\r\n                                }\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <SideBar\r\n                    updateColor={this.updateColor}\r\n                    fetchBrush={this.fetchBrush}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.updateColor = this.updateColor.bind(this);\r\n        this.fetchBrush = this.fetchBrush.bind(this);\r\n    }\r\n}\r\n\r\nexport { TextureEditor }","import './styles/App.css';\r\n\r\n// import { ConfigForm } from './components/ConfigGUI';\r\nimport { TextureEditor } from './components/editor/TextureEditor';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <TextureEditor />\r\n      {/* <ConfigForm /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nimport '../styles/nav-bar.css'\r\n\r\nclass NavBar extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <div className='nav-bar'>\r\n                {/* <div className='nav-bar-button'>Button 1</div>\r\n                <div className='nav-bar-button'>Button 2</div>\r\n                <div className='nav-bar-button'>Button 3</div>\r\n                <div className='nav-bar-button'>Button 4</div>\r\n                <div className='nav-bar-button'>Button 5</div> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { NavBar }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {NavBar} from './components/NavBar';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <header>\r\n      <NavBar />\r\n    </header>\r\n    <main>\r\n      <App />\r\n    </main>\r\n    <footer>\r\n      <div>Built by ChrisOfNormandy.</div>\r\n      <div>Join <a href='https://discord.gg/EW5JsGJfdt'>Discord</a></div>\r\n    </footer>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}