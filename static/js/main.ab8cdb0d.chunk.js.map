{"version":3,"sources":["app/texture-editor/common/Mouse.js","components/NavBar.js","app/texture-editor/editor.js","components/TextureEditor.js","App.js","reportWebVitals.js","index.js"],"names":["mouse","position","x","y","old","button","state","id","origin","displacement","getPosition","offset","inBounds","moving","clicked","module","exports","NavBar","render","className","React","Component","loader","PIXI","shared","Graphics","decToHex","c","hex","Number","toString","length","_","app","currentColor","r","g","b","a","resolution","background","width","height","scale","debug","debugElem","document","getElementById","previewElem","pixels","showGrid","refresh","doBoundUpdate","bounds","type","getCurrentColor","rgba","fillStyle","fillRect","updateBounds","canvasBounds","view","getBoundingClientRect","left","right","top","bottom","startup","onReady","ticker","add","draw","setup","console","log","isWebGLSupported","sayHello","load","updateDebug","mousePos","innerHTML","JSON","stringify","Math","floor","setPixel","getPixel","color","update","stage","removeChild","graphic","addChild","pos","clear","pixel","lineStyle","beginFill","drawRect","endFill","alpha","compose","canvas","createElement","context","getContext","imgData","createImageData","v","data","putImageData","url","toDataURL","link","href","name","value","setAttribute","click","create","tint","abs","editor","mouseMove_timeout","TextureEditor","getCanvas","parent","oncontextmenu","e","preventDefault","stopPropagation","appendChild","setState","componentDidMount","addEventListener","event","clientX","clientY","clearTimeout","setTimeout","window","map","htmlFor","placeholder","onChange","updateColor","onKeyPress","key","match","defaultValue","onClick","setResolution","target","checked","bind","this","m","res","isNaN","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"iGAAA,IAAMA,EAAQ,CACVC,SAAU,CACNC,EAAG,EACHC,EAAG,EACHC,IAAK,CAAEF,EAAG,EAAGC,EAAG,IAEpBE,OAAQ,CACJC,OAAO,EACPC,GAAI,EACJC,OAAQ,CAAEN,EAAG,KAAMC,EAAG,OAE1BM,aAAc,WACV,MAAO,CACHP,EAA4B,OAAzBF,EAAMC,SAASG,IAAIF,EAAa,EAAIF,EAAMC,SAASC,EAAIF,EAAMC,SAASG,IAAIF,EAC7EC,EAA4B,OAAzBH,EAAMC,SAASG,IAAID,EAAa,EAAIH,EAAMC,SAASE,EAAIH,EAAMC,SAASG,IAAID,IAGrFO,YAAa,WAAoB,IAAnBC,EAAkB,uDAAT,KACnB,OAAkB,OAAXA,EAEP,CACIT,EAAGF,EAAMC,SAASC,EAClBC,EAAGH,EAAMC,SAASE,GAGtB,CACQD,EAAGF,EAAMC,SAASC,EAAIS,EAAOT,EAC7BC,EAAGH,EAAMC,SAASE,EAAIQ,EAAOR,IAGzCS,UAAU,EACVC,QAAQ,EACRC,SAAS,GAGbC,EAAOC,QAAUhB,G,kNC/BXiB,E,4MACFC,OAAS,WACL,OACI,qBAAKC,UAAU,a,YAHNC,IAAMC,W,sCCDrBC,EAASC,IAAYC,OACvBC,EAAWF,IAEf,SAASG,EAAUC,GACf,IAAIC,EAAMC,OAAOF,GAAGG,SAAS,IAC7B,OAAsB,IAAfF,EAAIG,OAAJ,WAAuBH,GAAQA,EAQ1C,IAAMI,EAAI,CACNC,IAAK,KAELC,aAAc,CACVC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,KAGPC,WAAY,EAEZC,WAAW,GAEXC,MAAO,EACPC,OAAQ,EACRC,MAAQ,EAERC,OAAQ,EACRC,UAAYC,SAASC,eAAe,SACpCC,YAAa,KAEbC,OAAQ,GACRC,UAAW,EACXC,SAAU,EAEVC,eAAgB,EAChBC,OAAS,KAETC,KAAO,QAEPC,gBAAiB,WACb,IAAIC,EAAOxB,EAAEE,aAIb,OAHAF,EAAEgB,YAAYS,UAAd,cAAiCD,EAAKrB,EAAtC,aAA4CqB,EAAKpB,EAAjD,aAAuDoB,EAAKnB,EAA5D,KACAL,EAAEgB,YAAYU,SAAS,EAAG,EAAG,GAAI,IAE1B,CACHvB,EAAGH,EAAEE,aAAaC,EAClBC,EAAGJ,EAAEE,aAAaE,EAClBC,EAAGL,EAAEE,aAAaG,EAClBC,EAAGN,EAAEE,aAAaI,IAI1BqB,aAAc,WACV,IAAIC,EAAe5B,EAAEC,IAAI4B,KAAKC,wBAE9B9B,EAAEqB,OAAS,CACPnD,EAAG0D,EAAa1D,EAChBC,EAAGyD,EAAazD,EAChB4D,KAAMH,EAAaG,KACnBC,MAAOJ,EAAaI,MACpBC,IAAKL,EAAaK,IAClBC,OAAQN,EAAaM,OACrBzB,MAAOmB,EAAanB,MACpBC,OAAQkB,EAAalB,QAGzBV,EAAEoB,eAAgB,EAElBpB,EAAEmB,SAAU,GAQhBgB,QAAS,WAGL,OAFAnC,EAAEoC,SAAQ,kBAAMpC,EAAEC,IAAIoC,OAAOC,KAAI,kBAAMtC,EAAEuC,aAElCvC,EAAEC,IAAI4B,MAGjBO,QAAS,SAACI,GACNC,QAAQC,IAAI,uBAEPnD,IAAWoD,qBACZ3C,EAAEsB,KAAO,UAGb/B,IAAWqD,SAAS5C,EAAEsB,MAEtBhC,EACKuD,KAAKL,IAGdM,YAAa,WAIT,GAHoB,OAAhB9C,EAAEa,YACFb,EAAEa,UAAYC,SAASC,eAAe,UAErCf,EAAEY,MAAP,CAKA,IAAImC,EAAW/E,IAAMU,cAErBsB,EAAEa,UAAUmC,UACR,iBAAUC,KAAKC,UAAUH,GAAzB,mBAA0CI,KAAKC,MAAML,EAAS7E,EAAI8B,EAAEO,YAApE,aAAoF4C,KAAKC,MAAML,EAAS5E,EAAI6B,EAAEO,YAA9G,2BACU0C,KAAKC,UAAUlD,EAAEE,cAD3B,sBAEKF,EAAEN,SAASM,EAAEE,aAAaC,IAF/B,OAEoCH,EAAEN,SAASM,EAAEE,aAAaE,IAF9D,OAEmEJ,EAAEN,SAASM,EAAEE,aAAaG,SAT7FL,EAAEa,UAAUmC,UAAY,IAYhCT,KAAM,WACFvC,EAAE8C,cAEF,IAAK,IAAI5E,EAAI,EAAGA,EAAI8B,EAAEO,WAAYrC,IAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAI6B,EAAEO,WAAYpC,IAC1B6B,EAAEmB,SACFnB,EAAEqD,SAASnF,EAAGC,EAAG6B,EAAEsD,SAASpF,EAAGC,GAAGoF,OAElCvD,EAAEsD,SAASpF,EAAGC,GAAGqF,SACjBxD,EAAEC,IAAIwD,MAAMC,YAAY1D,EAAEsD,SAASpF,EAAGC,GAAGwF,SAErC3D,EAAEsD,SAASpF,EAAGC,GAAGoF,MAAMjD,EAAI,IAC3BN,EAAEC,IAAIwD,MAAMG,SAAS5D,EAAEQ,WAAWrC,EAAI6B,EAAEO,WAAarC,IAErD8B,EAAEC,IAAIwD,MAAMC,YAAY1D,EAAEQ,WAAWrC,EAAI6B,EAAEO,WAAarC,IAExD8B,EAAEsD,SAASpF,EAAGC,GAAGoF,MAAMjD,EAAI,GAC3BN,EAAEC,IAAIwD,MAAMG,SAAS5D,EAAEsD,SAASpF,EAAGC,GAAGwF,SAE1C3D,EAAEsD,SAASpF,EAAGC,GAAGqF,QAAS,GAKtC,GAAIxF,IAAMK,OAAOC,MAAO,CACpB,IAAIuF,EAAM7F,IAAMU,cACZR,EAAIiF,KAAKC,MAAMS,EAAI3F,EAAI8B,EAAEW,OACzBxC,EAAIgF,KAAKC,MAAMS,EAAI1F,EAAI6B,EAAEW,OAEzBzC,GAAK,GAAKA,EAAI8B,EAAEO,YAAcpC,GAAK,GAAKA,EAAI6B,EAAEO,aACtB,IAApBvC,IAAMK,OAAOE,GACbyB,EAAEqD,SAASnF,EAAGC,EAAG6B,EAAEuB,mBACM,IAApBvD,IAAMK,OAAOE,IAClByB,EAAEqD,SAASnF,EAAGC,EAAG,CAAEgC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,IAE5CN,EAAEsD,SAASpF,EAAGC,GAAGqF,QAAS,GAGzBxF,IAAMY,WACPZ,IAAMK,OAAOC,OAAQ,GAG7B0B,EAAEmB,SAAU,GAGhB2C,MAAO,WACH,IAAK,IAAI5F,EAAI,EAAGA,EAAI8B,EAAEO,WAAYrC,IAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAI6B,EAAEO,WAAYpC,IAC9B6B,EAAEqD,SAASnF,EAAGC,EAAG,OAK7BmF,SAAU,SAACpF,EAAGC,GACV,OAAQ6B,EAAEiB,OAAO/C,IAAa8B,EAAEiB,OAAO/C,GAAGC,GAAY6B,EAAEiB,OAAO/C,GAAGC,GAA5C,MAG1BkF,SAAU,SAACnF,EAAGC,EAAGoF,GACRvD,EAAEsD,SAASpF,EAAGC,KACf6B,EAAEiB,OAAO/C,GAAGC,GAAK,CACboF,QACAI,QAAS,IAAIlE,IAIrB,IA7KWU,EAAGC,EAAGC,EA6Kb0D,EAAQ/D,EAAEsD,SAASpF,EAAGC,GAyB1B,OAvBA4F,EAAMJ,QAAU,IAAIlE,EAEhBO,EAAEkB,UACF6C,EAAMJ,QAAQK,UAAU,EAAG,EAAU,GAE3B,OAAVT,EACAQ,EAAMJ,QAAQM,UAAU,GAExBF,EAAMJ,QAAQM,WAvLP9D,EAuL0BoD,EAAMpD,EAvL7BC,EAuLgCmD,EAAMnD,EAvLnCC,EAuLsCkD,EAAMlD,EAtL1DR,OAAO,KAAD,OAAMH,EAASS,IAAf,OAAoBT,EAASU,IAA7B,OAAkCV,EAASW,OAwLpD0D,EAAMJ,QAAQO,SAAS,EAAG,EAAGlE,EAAEW,MAAOX,EAAEW,OAExCoD,EAAMJ,QAAQQ,UAEdJ,EAAMJ,QAAQS,MAAkB,OAAVb,EAAiB,EAAIA,EAAMjD,EAAI,IAErDyD,EAAMJ,QAAQzF,EAAIA,EAAI8B,EAAEW,MACxBoD,EAAMJ,QAAQxF,EAAIA,EAAI6B,EAAEW,MAExBoD,EAAMP,QAAS,EAEfO,EAAMR,MAAkB,OAAVA,EAAiB,CAACpD,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAKiD,EAEnDQ,GAGXM,QAAS,WACL,IAAMC,EAASxD,SAASyD,cAAc,UAAWC,EAAUF,EAAOG,WAAW,MAC7EH,EAAO7D,MAAQT,EAAEO,WACjB+D,EAAO5D,OAASV,EAAEO,WAKlB,IAHA,IAEIgD,EAFAmB,EAAUF,EAAQG,gBAAgB3E,EAAEO,WAAYP,EAAEO,YAG7CrC,EAAI,EAAGA,EAAI8B,EAAEO,WAAYrC,IAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAI6B,EAAEO,WAAYpC,IAAK,CACnC,IAAIyG,EAA6B,GAAxBzG,EAAI6B,EAAEO,WAAarC,GAC5BqF,EAAQvD,EAAEsD,SAASpF,EAAGC,GAAGoF,MAEzBmB,EAAQG,KAAKD,GAAKrB,EAAMpD,EACxBuE,EAAQG,KAAKD,EAAI,GAAKrB,EAAMnD,EAC5BsE,EAAQG,KAAKD,EAAI,GAAKrB,EAAMlD,EAC5BqE,EAAQG,KAAKD,EAAI,GAAKrB,EAAMjD,EAIpCkE,EAAQM,aAAaJ,EAAS,EAAG,GAEjC,IAAMK,EAAMT,EAAOU,UAAU,aACzBC,EAAOnE,SAASyD,cAAc,KAClCU,EAAKC,KAAOH,EAEZ,IAAII,EAAOrE,SAASC,eAAe,cAAcqE,MACjDH,EAAKI,aAAa,WAAlB,UAAmCF,GAAc,UAAjD,SACAF,EAAKK,SAOTC,OAAQ,SAACtF,GAA0B,IAArBM,EAAoB,uDAAP,GACvBP,EAAEC,IAAMA,EAERD,EAAEgB,YAAcF,SAASC,eAAe,wBAAwB0D,WAAW,MAC3EzE,EAAEuB,kBAEFvB,EAAEO,WAAaA,EAEfP,EAAES,MAAQR,EAAI4B,KAAKpB,MACnBT,EAAEU,OAAST,EAAI4B,KAAKnB,OACpBV,EAAEW,MAAQX,EAAES,MAAQT,EAAEO,WAEtBP,EAAEiB,OAAS,GAEX,IAAK,IAAI/C,EAAI,EAAGA,EAAI8B,EAAEO,WAAYrC,IAAK,CACnC8B,EAAEiB,OAAO/C,GAAK,GACd,IAAK,IAAIC,EAAI,EAAGA,EAAI6B,EAAEO,WAAYpC,IAC9B6B,EAAEQ,WAAWrC,EAAI6B,EAAEO,WAAarC,GAAK,IAAIuB,EACzCO,EAAEQ,WAAWrC,EAAI6B,EAAEO,WAAarC,GAAG+F,UAAU,UAC7CjE,EAAEQ,WAAWrC,EAAI6B,EAAEO,WAAarC,GAAGgG,SAAS,EAAG,EAAGlE,EAAEW,MAAOX,EAAEW,OAC7DX,EAAEQ,WAAWrC,EAAI6B,EAAEO,WAAarC,GAAGiG,UACnCnE,EAAEQ,WAAWrC,EAAI6B,EAAEO,WAAarC,GAAGsH,KAAQtH,EAAI,IAAM,GAAKC,EAAI,IAAM,GAAOD,EAAI,IAAM,GAAKC,EAAI,IAAM,EAAK,SAAW,SAEpH6B,EAAEQ,WAAWrC,EAAI6B,EAAEO,WAAarC,GAAGA,EAAIA,EAAI8B,EAAEW,MAC7CX,EAAEQ,WAAWrC,EAAI6B,EAAEO,WAAarC,GAAGC,EAAIA,EAAI6B,EAAEW,MAE7CX,EAAEqD,SAASnF,EAAGC,EAAG,CACbgC,EAAGgD,KAAKC,MAAM,IAAMlF,GAAK8B,EAAEO,WAAa,IACxCH,EAAG+C,KAAKC,OAAclF,EAAIC,GAAK,EAAjB,KAAuB6B,EAAEO,WAAa,IACpDF,EAAG8C,KAAKC,MAAM,IAAMjF,GAAK6B,EAAEO,WAAa,IACxCD,EAAG6C,KAAKC,MAAM,IAAMD,KAAKsC,KAAM,IAAMvH,GAAK8B,EAAEO,WAAa,GAAK,IAAMpC,GAAK6B,EAAEO,WAAa,IAAM,EAAK,QAK/G,OAAOP,IAIT0F,EAAS1F,ECvRX2F,G,MAAoB,MAElBC,E,kDA+JF,aAAe,IAAD,8BACV,gBA/JJtH,MAAQ,CACJ2B,IAAK,KACLqE,OAAQ,KACRlD,eAAe,EACfsE,UA0JU,EAvJdG,UAAY,WACR,IAAIC,EAAShF,SAASC,eAAe,0BAEjCJ,EAA+C,GAAvCmF,EAAOhE,wBAAwBrB,MAEvCnC,EAAQ,EAAKA,MAEjBA,EAAM2B,IAAM,IAAIV,IAAiB,CAC7BkB,MAAOE,EACPD,OAAQC,IAGZrC,EAAMoH,OAASA,EAAOH,OAAOjH,EAAM2B,IAAK,IAExC3B,EAAM2B,IAAI4B,KAAKkE,cAAgB,SAACC,GAAQA,EAAEC,iBAAkBD,EAAEE,mBAC9D5H,EAAM2B,IAAI4B,KAAKtD,GAAK,SAEpBD,EAAMgG,OAAShG,EAAMoH,OAAOvD,UAE5B2D,EAAOK,YAAY7H,EAAMgG,QAEzB,EAAK8B,SAAS9H,IAkIJ,EA/Hd+H,kBAAoB,WAChB,EAAKR,YACL,EAAKvH,MAAMoH,OAAO/D,eAElB,EAAKrD,MAAMgG,OAAOgC,iBAAiB,aAAa,SAACC,GAC7CvI,IAAMC,SAASG,IAAM,CACjBF,EAAGiF,KAAKC,MAAMpF,IAAMC,SAASC,GAC7BC,EAAGgF,KAAKC,MAAMpF,IAAMC,SAASE,IAGjCH,IAAMC,SAASC,EAAIiF,KAAKC,MAAMmD,EAAMC,QAAU,EAAKlI,MAAMoH,OAAOrE,OAAOU,MACvE/D,IAAMC,SAASE,EAAIgF,KAAKC,MAAMmD,EAAME,QAAU,EAAKnI,MAAMoH,OAAOrE,OAAOY,KAEvEjE,IAAMa,QAAS,EAEX8G,GACAe,aAAaf,GAEjBA,EAAoBgB,YAAW,WAC3B3I,IAAMC,SAASG,IAAM,CACjBF,EAAGiF,KAAKC,MAAMpF,IAAMC,SAASC,GAC7BC,EAAGgF,KAAKC,MAAMpF,IAAMC,SAASE,IAEjCH,IAAMa,QAAS,IAChB,OAGP,EAAKP,MAAMgG,OAAOgC,iBAAiB,aAAa,SAACC,GAC7CvI,IAAMK,OAAOC,OAAQ,EACrBN,IAAMK,OAAOE,GAAKgI,EAAMlI,UAG5B,EAAKC,MAAMgG,OAAOgC,iBAAiB,WAAW,WAC1CtI,IAAMK,OAAOC,OAAQ,EACrBN,IAAMK,OAAOE,GAAK,QAGtB,EAAKD,MAAMgG,OAAOgC,iBAAiB,cAAc,kBAAMtI,IAAMY,UAAW,KAExE,EAAKN,MAAMgG,OAAOgC,iBAAiB,cAAc,kBAAMtI,IAAMY,UAAW,KAExE,EAAKN,MAAMgG,OAAOgC,iBAAiB,SAAS,kBAAMtI,IAAMc,SAAU,KAElE8H,OAAON,iBAAiB,UAAU,WAC9B,EAAKhI,MAAMoH,OAAO/D,mBAmFZ,EApDdzC,OAAS,WAGL,OACI,gCACI,sBAAKC,UAAU,2BAA2BZ,GAAG,2BAA7C,UACI,qBAAKY,UAAU,yBAAyBZ,GAAG,2BAC3C,sBAAKY,UAAU,yBAAf,UACI,wBAAQA,UAAU,uBAAuBZ,GAAG,uBAAuBkC,MAAM,OAAOC,OAAO,SAP5F,CAAC,IAAK,IAAK,IAAK,KAQLmG,KAAI,SAAAjC,GAAC,OACP,sBAA0BzF,UAAU,sBAApC,UACI,uBAAO2H,QAAO,cAASlC,GAAKzF,UAAU,kBAAtC,SAAyDyF,IACzD,uBAAeO,KAAI,cAASP,GAAKtD,KAAK,OAAOnC,UAAU,kBAAkB4H,YAAY,IAAIC,SAAU,EAAKC,YAAaC,WAAY,SAACX,GACzHA,EAAMY,IAAIC,MAAM,UACjBb,EAAMN,kBACXoB,aAAoB,MAANzC,EAAY,IAAM,IAHvBA,KAFhB,cAAiBA,EAAjB,eASR,sBAAKzF,UAAU,0BAAf,UACI,wBAAQmI,QAAS,WACb,IAAIhJ,EAAQ,EAAKA,MACjBA,EAAMoH,OAAOxE,UAAY5C,EAAMoH,OAAOxE,SACtC5C,EAAMoH,OAAOvE,SAAU,EACvB,EAAKiF,SAAS9H,IAJlB,yBAMA,wBAAQgJ,QAAS,kBAAM,EAAKhJ,MAAMoH,OAAO5B,SAAzC,mBAEA,iCACI,uBAAOxC,KAAK,OAAO/C,GAAG,mBAAmB4G,KAAK,aAAakC,aAAa,OACxE,uBAAO/F,KAAK,SAAS8D,MAAM,SAASkC,QAAS,EAAKC,mBAGtD,uBAAOT,QAAQ,qBAAf,wBACA,uBAAOxF,KAAK,OAAO6D,KAAK,qBAAqB5G,GAAG,aAAa8I,aAAa,UAAUH,WAAY,SAACX,GACxFA,EAAMY,IAAIC,MAAM,cACjBb,EAAMN,uBAIlB,wBAAQqB,QAAS,kBAAM,EAAKhJ,MAAMoH,OAAOrB,WAAzC,yBAEJ,uBAAO9F,GAAG,oBAAoBuI,QAAQ,cAAtC,mBACA,uBAAO3B,KAAK,cAAc7D,KAAK,WAAW0F,SAAU,SAACT,GACjD,IAAIjI,EAAQ,EAAKA,MACjBA,EAAMoH,OAAO9E,MAAQ2F,EAAMiB,OAAOC,QAClC,EAAKrB,SAAS9H,UAS1B,EAAK2I,YAAc,EAAKA,YAAYS,KAAjB,gBACnB,EAAKH,cAAgB,EAAKA,cAAcG,KAAnB,gBAJX,E,+CA/Ed,SAAYnB,GACR,IAAIjI,EAAQqJ,KAAKrJ,MACbiI,EAAMiB,OAAOpC,MAAQ,MACrBmB,EAAMiB,OAAOpC,MAAQ,KAEzB,IAAIwC,EAAIrB,EAAMiB,OAAOrC,KAAKiC,MAAM,gBAAgB,GAChD9I,EAAMoH,OAAOxF,aAAa0H,GAA4B,KAAvBrB,EAAMiB,OAAOpC,MAAe,EAAImB,EAAMiB,OAAOpC,MAC5E9G,EAAMoH,OAAOnE,kBACboG,KAAKvB,SAAS9H,K,2BAGlB,SAAciI,GACV,IAAIjI,EAAQqJ,KAAKrJ,MAEjBiI,EAAMN,iBACN,IAAI4B,EAAMhI,OAAOiB,SAASC,eAAe,oBAAoBqE,OACzD0C,MAAMD,KAGNA,EAAM,KAAO,GAAKA,EAAM,GAAKA,GAAO,GACpCvJ,EAAMoH,OAASA,EAAOH,OAAOjH,EAAM2B,IAAK4H,GAExCpF,QAAQC,IAAI,MAEhBiF,KAAKvB,SAAS9H,Q,GAxGMc,IAAMC,WCanB0I,MAjBf,WACE,OACE,sBAAK5I,UAAU,MAAf,UACE,iCAAQ,cAAC,EAAD,MACR,iCACE,cAAC,EAAD,IAEA,qBAAKZ,GAAG,aAEV,mCACE,4DACA,wCAAU,mBAAG2G,KAAK,gCAAR,+BCLH8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASvJ,OACP,cAAC,IAAMwJ,WAAP,UACE,cAAC,EAAD,MAEF5H,SAASC,eAAe,SAM1BiH,M","file":"static/js/main.ab8cdb0d.chunk.js","sourcesContent":["const mouse = {\r\n    position: {\r\n        x: 0,\r\n        y: 0,\r\n        old: { x: 0, y: 0 }\r\n    },\r\n    button: {\r\n        state: false,\r\n        id: 0,\r\n        origin: { x: null, y: null }\r\n    },\r\n    displacement: () => {\r\n        return {\r\n            x: mouse.position.old.x === null ? 0 : mouse.position.x - mouse.position.old.x,\r\n            y: mouse.position.old.y === null ? 0 : mouse.position.y - mouse.position.old.y\r\n        }\r\n    },\r\n    getPosition: (offset = null) => {\r\n        return offset === null\r\n        ?\r\n        {\r\n            x: mouse.position.x,\r\n            y: mouse.position.y\r\n        }\r\n        :\r\n        {\r\n                x: mouse.position.x - offset.x,\r\n                y: mouse.position.y - offset.y\r\n        }\r\n    },\r\n    inBounds: false,\r\n    moving: false,\r\n    clicked: false\r\n};\r\n\r\nmodule.exports = mouse;","import React from 'react';\r\n\r\nimport '../styles/nav-bar.css'\r\n\r\nclass NavBar extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <div className='nav-bar'>\r\n                {/* <div className='nav-bar-button'>Button 1</div>\r\n                <div className='nav-bar-button'>Button 2</div>\r\n                <div className='nav-bar-button'>Button 3</div>\r\n                <div className='nav-bar-button'>Button 4</div>\r\n                <div className='nav-bar-button'>Button 5</div> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { NavBar }","import * as PIXI from 'pixi.js';\r\nimport mouse from './common/Mouse';\r\n\r\nconst loader = PIXI.Loader.shared,\r\n    Graphics = PIXI.Graphics\r\n\r\nfunction decToHex (c) {\r\n    var hex = Number(c).toString(16);\r\n    return hex.length === 1 ? `0${hex}` : hex;\r\n}\r\n\r\n\r\nfunction rgbToHex (r, g, b) {\r\n    return Number(`0x${decToHex(r)}${decToHex(g)}${decToHex(b)}`);\r\n}\r\n\r\nconst _ = {\r\n    app: null,\r\n\r\n    currentColor: {\r\n        r: 0,\r\n        g: 0,\r\n        b: 0,\r\n        a: 255\r\n    },\r\n\r\n    resolution: 0,\r\n\r\n    background:[],\r\n\r\n    width: 0,\r\n    height: 0,\r\n    scale : 0,\r\n\r\n    debug : false,\r\n    debugElem : document.getElementById('debug'),\r\n    previewElem: null,\r\n\r\n    pixels :[],\r\n    showGrid : false,\r\n    refresh : true,\r\n\r\n    doBoundUpdate : true,\r\n    bounds : null,\r\n\r\n    type : \"WebGL\",\r\n\r\n    getCurrentColor: () => {\r\n        let rgba = _.currentColor;\r\n        _.previewElem.fillStyle = `rgb(${rgba.r}, ${rgba.g}, ${rgba.b})`;\r\n        _.previewElem.fillRect(0, 0, 32, 32);\r\n\r\n        return {\r\n            r: _.currentColor.r,\r\n            g: _.currentColor.g,\r\n            b: _.currentColor.b,\r\n            a: _.currentColor.a\r\n        }\r\n    },\r\n\r\n    updateBounds: () => {\r\n        let canvasBounds = _.app.view.getBoundingClientRect();\r\n\r\n        _.bounds = {\r\n            x: canvasBounds.x,\r\n            y: canvasBounds.y,\r\n            left: canvasBounds.left,\r\n            right: canvasBounds.right,\r\n            top: canvasBounds.top,\r\n            bottom: canvasBounds.bottom,\r\n            width: canvasBounds.width,\r\n            height: canvasBounds.height\r\n        };\r\n\r\n        _.doBoundUpdate = false;\r\n\r\n        _.refresh = true;\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {PIXI.Application} app \r\n     * @returns {HTMLCanvasElement}\r\n     */\r\n    startup: () => {\r\n        _.onReady(() => _.app.ticker.add(() => _.draw()));\r\n\r\n        return _.app.view;\r\n    },\r\n\r\n    onReady: (setup) => {\r\n        console.log('App ready. Loading.');\r\n\r\n        if (!PIXI.utils.isWebGLSupported()) {\r\n            _.type = \"canvas\";\r\n        }\r\n\r\n        PIXI.utils.sayHello(_.type);\r\n\r\n        loader\r\n            .load(setup);\r\n    },\r\n\r\n    updateDebug: () => {\r\n        if (_.debugElem === null)\r\n            _.debugElem = document.getElementById('debug');\r\n\r\n        if (!_.debug) {\r\n            _.debugElem.innerHTML = \"\";\r\n            return;\r\n        }\r\n\r\n        let mousePos = mouse.getPosition();\r\n\r\n        _.debugElem.innerHTML =\r\n            `Mouse: ${JSON.stringify(mousePos)} --> ${Math.floor(mousePos.x / _.resolution)}, ${Math.floor(mousePos.y / _.resolution)}<br />` +\r\n            `Color: ${JSON.stringify(_.currentColor)}<br />` +\r\n            `0x${_.decToHex(_.currentColor.r)}${_.decToHex(_.currentColor.g)}${_.decToHex(_.currentColor.b)}`;\r\n    },\r\n\r\n    draw: () => {\r\n        _.updateDebug();\r\n\r\n        for (let x = 0; x < _.resolution; x++) {\r\n            for (let y = 0; y < _.resolution; y++) {\r\n                if (_.refresh)\r\n                    _.setPixel(x, y, _.getPixel(x, y).color);\r\n\r\n                if (_.getPixel(x, y).update) {\r\n                    _.app.stage.removeChild(_.getPixel(x, y).graphic);\r\n\r\n                    if (_.getPixel(x, y).color.a < 255)\r\n                        _.app.stage.addChild(_.background[y * _.resolution + x]);\r\n                    else\r\n                        _.app.stage.removeChild(_.background[y * _.resolution + x]);\r\n\r\n                    if (_.getPixel(x, y).color.a > 0)\r\n                        _.app.stage.addChild(_.getPixel(x, y).graphic);\r\n\r\n                    _.getPixel(x, y).update = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mouse.button.state) {\r\n            let pos = mouse.getPosition();\r\n            let x = Math.floor(pos.x / _.scale),\r\n                y = Math.floor(pos.y / _.scale);\r\n\r\n            if (x >= 0 && x < _.resolution && y >= 0 && y < _.resolution) {\r\n                if (mouse.button.id === 0)\r\n                    _.setPixel(x, y, _.getCurrentColor());\r\n                else if (mouse.button.id === 2)\r\n                    _.setPixel(x, y, { r: 0, g: 0, b: 0, a: 0 });\r\n\r\n                _.getPixel(x, y).update = true;\r\n            }\r\n\r\n            if (!mouse.inBounds)\r\n                mouse.button.state = false;\r\n        }\r\n\r\n        _.refresh = false;\r\n    },\r\n\r\n    clear: () => {\r\n        for (let x = 0; x < _.resolution; x++) {\r\n            for (let y = 0; y < _.resolution; y++) {\r\n                _.setPixel(x, y, null);\r\n            }\r\n        }\r\n    },\r\n\r\n    getPixel: (x, y) => {\r\n        return !_.pixels[x] ? null : !_.pixels[x][y] ? null : _.pixels[x][y];\r\n    },\r\n\r\n    setPixel: (x, y, color) => {\r\n        if (!_.getPixel(x, y)) {\r\n            _.pixels[x][y] = {\r\n                color,\r\n                graphic: new Graphics()\r\n            }\r\n        }\r\n\r\n        let pixel = _.getPixel(x, y)\r\n\r\n        pixel.graphic = new Graphics();\r\n\r\n        if (_.showGrid)\r\n            pixel.graphic.lineStyle(1, 0x000000, 1);\r\n\r\n        if (color === null)\r\n            pixel.graphic.beginFill(0x000000);\r\n        else\r\n            pixel.graphic.beginFill(rgbToHex(color.r, color.g, color.b));\r\n\r\n        pixel.graphic.drawRect(0, 0, _.scale, _.scale);\r\n\r\n        pixel.graphic.endFill();\r\n\r\n        pixel.graphic.alpha = color === null ? 0 : color.a / 255;\r\n\r\n        pixel.graphic.x = x * _.scale;\r\n        pixel.graphic.y = y * _.scale;\r\n\r\n        pixel.update = true;\r\n\r\n        pixel.color = color === null ? {r: 0, g: 0, b: 0, a: 0} : color;\r\n\r\n        return pixel;\r\n    },\r\n\r\n    compose: () => {\r\n        const canvas = document.createElement('canvas'), context = canvas.getContext('2d');\r\n        canvas.width = _.resolution;\r\n        canvas.height = _.resolution;\r\n\r\n        let imgData = context.createImageData(_.resolution, _.resolution);\r\n\r\n        let color;\r\n        for (let x = 0; x < _.resolution; x++) {\r\n            for (let y = 0; y < _.resolution; y++) {\r\n                let v = (y * _.resolution + x) * 4;\r\n                color = _.getPixel(x, y).color;\r\n\r\n                imgData.data[v] = color.r;\r\n                imgData.data[v + 1] = color.g;\r\n                imgData.data[v + 2] = color.b;\r\n                imgData.data[v + 3] = color.a;\r\n            }\r\n        }\r\n\r\n        context.putImageData(imgData, 0, 0);\r\n\r\n        const url = canvas.toDataURL('image/png');\r\n        let link = document.createElement('a');\r\n        link.href = url;\r\n        \r\n        let name = document.getElementById('image_name').value;\r\n        link.setAttribute('download', `${!!name ? name : 'texture'}.png`);\r\n        link.click();\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {PIXI.Application} app \r\n     */\r\n    create: (app, resolution = 16) => {\r\n        _.app = app;\r\n\r\n        _.previewElem = document.getElementById('color_picker_display').getContext('2d');\r\n        _.getCurrentColor();\r\n\r\n        _.resolution = resolution\r\n\r\n        _.width = app.view.width;\r\n        _.height = app.view.height;\r\n        _.scale = _.width / _.resolution;\r\n\r\n        _.pixels = [];\r\n\r\n        for (let x = 0; x < _.resolution; x++) {\r\n            _.pixels[x] = [];\r\n            for (let y = 0; y < _.resolution; y++) {\r\n                _.background[y * _.resolution + x] = new Graphics();\r\n                _.background[y * _.resolution + x].beginFill(0xFFFFFF);\r\n                _.background[y * _.resolution + x].drawRect(0, 0, _.scale, _.scale);\r\n                _.background[y * _.resolution + x].endFill();\r\n                _.background[y * _.resolution + x].tint = (x % 2 === 0 && y % 2 === 1) || (x % 2 === 1 && y % 2 === 0) ? 0xFFFFFF : 0xDDDDDD;\r\n\r\n                _.background[y * _.resolution + x].x = x * _.scale;\r\n                _.background[y * _.resolution + x].y = y * _.scale;\r\n\r\n                _.setPixel(x, y, {\r\n                    r: Math.floor(255 * x / (_.resolution - 1)),\r\n                    g: Math.floor(255 * ((x + y) / 2) / (_.resolution - 1)),\r\n                    b: Math.floor(255 * y / (_.resolution - 1)),\r\n                    a: Math.floor(255 - Math.abs(((255 * x / (_.resolution - 1) + 255 * y / (_.resolution - 1)) / 2) - 128))\r\n                });\r\n            }\r\n        }\r\n\r\n        return _;\r\n    }\r\n}\r\n\r\nconst editor = _;\r\n\r\nexport {\r\n    editor\r\n}","import React from 'react';\r\nimport * as PIXI from 'pixi.js';\r\n\r\nimport { editor } from '../app/texture-editor/editor';\r\nimport mouse from '../app/texture-editor/common/Mouse';\r\n\r\nimport '../styles/texture-editor.css';\r\n\r\nlet mouseMove_timeout = null;\r\n\r\nclass TextureEditor extends React.Component {\r\n    state = {\r\n        app: null,\r\n        canvas: null,\r\n        doBoundUpdate: true,\r\n        editor\r\n    }    \r\n\r\n    getCanvas = () => {\r\n        let parent = document.getElementById('texture_editor_wrapper');\r\n\r\n        let scale = parent.getBoundingClientRect().width * 0.5;\r\n\r\n        let state = this.state;\r\n\r\n        state.app = new PIXI.Application({\r\n            width: scale,\r\n            height: scale\r\n        });\r\n\r\n        state.editor = editor.create(state.app, 16);\r\n\r\n        state.app.view.oncontextmenu = (e) => { e.preventDefault(); e.stopPropagation(); }\r\n        state.app.view.id = \"editor\";\r\n\r\n        state.canvas = state.editor.startup();\r\n\r\n        parent.appendChild(state.canvas);\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getCanvas();\r\n        this.state.editor.updateBounds();\r\n\r\n        this.state.canvas.addEventListener('mousemove', (event) => {\r\n            mouse.position.old = {\r\n                x: Math.floor(mouse.position.x),\r\n                y: Math.floor(mouse.position.y)\r\n            };\r\n\r\n            mouse.position.x = Math.floor(event.clientX - this.state.editor.bounds.left);\r\n            mouse.position.y = Math.floor(event.clientY - this.state.editor.bounds.top);\r\n\r\n            mouse.moving = true;\r\n\r\n            if (mouseMove_timeout)\r\n                clearTimeout(mouseMove_timeout);\r\n\r\n            mouseMove_timeout = setTimeout(() => {\r\n                mouse.position.old = {\r\n                    x: Math.floor(mouse.position.x),\r\n                    y: Math.floor(mouse.position.y)\r\n                };\r\n                mouse.moving = false;\r\n            }, 30);\r\n        });\r\n\r\n        this.state.canvas.addEventListener('mousedown', (event) => {\r\n            mouse.button.state = true;\r\n            mouse.button.id = event.button;\r\n        });\r\n\r\n        this.state.canvas.addEventListener('mouseup', () => {\r\n            mouse.button.state = false;\r\n            mouse.button.id = null;\r\n        });\r\n\r\n        this.state.canvas.addEventListener('mouseleave', () => mouse.inBounds = false);\r\n\r\n        this.state.canvas.addEventListener('mouseenter', () => mouse.inBounds = true);\r\n\r\n        this.state.canvas.addEventListener('click', () => mouse.clicked = true);\r\n\r\n        window.addEventListener('resize', () => {\r\n            this.state.editor.updateBounds();\r\n        });\r\n    }\r\n\r\n    updateColor(event) {\r\n        let state = this.state;\r\n        if (event.target.value > 255)\r\n            event.target.value = 255;\r\n\r\n        let m = event.target.name.match(/rgb_([rgba])/)[1];\r\n        state.editor.currentColor[m] = event.target.value === '' ? 0 : event.target.value;\r\n        state.editor.getCurrentColor();\r\n        this.setState(state);\r\n    }\r\n\r\n    setResolution(event) {\r\n        let state = this.state;\r\n\r\n        event.preventDefault();\r\n        let res = Number(document.getElementById('resolution_input').value)\r\n        if (isNaN(res))\r\n            return;\r\n\r\n        if (res % 16 === 0 && res > 0 && res <= 32)\r\n            state.editor = editor.create(state.app, res);\r\n        else\r\n            console.log('No');\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    render = () => {\r\n        let list = ['r', 'g', 'b', 'a'];\r\n\r\n        return (\r\n            <div>\r\n                <div className='texture-editor-container' id='texture_editor_container'>\r\n                    <div className='texture-editor-wrapper' id='texture_editor_wrapper'></div>\r\n                    <div className='color-picker-container'>\r\n                        <canvas className='color-picker-display' id='color_picker_display' width='32px' height='32px' />\r\n                        {list.map(v => (\r\n                            <div key={`rgb_${v}_div`} className='rgb-input-container'>\r\n                                <label htmlFor={`rgb_${v}`} className='rgb-input-label'>{v}</label>\r\n                                <input key={v} name={`rgb_${v}`} type='text' className='rgb-input-field' placeholder='0' onChange={this.updateColor} onKeyPress={(event) => {\r\n                                    if (!event.key.match(/[0-9]/))\r\n                                        event.preventDefault();\r\n                                }} defaultValue={v === 'a' ? 255 : ''} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className='texture-editor-controls'>\r\n                        <button onClick={() => {\r\n                            let state = this.state;\r\n                            state.editor.showGrid = !state.editor.showGrid;\r\n                            state.editor.refresh = true;\r\n                            this.setState(state);\r\n                        }}>Toggle Grid</button>\r\n                        <button onClick={() => this.state.editor.clear()}>Clear</button>\r\n\r\n                        <form>\r\n                            <input type='text' id='resolution_input' name='resolution' defaultValue='16'></input>\r\n                            <input type='submit' value='Create' onClick={this.setResolution}></input>\r\n                        </form>\r\n\r\n                        <label htmlFor='texture-name-input'>File name:</label>\r\n                        <input type='text' name='texture-name-input' id='image_name' defaultValue='texture' onKeyPress={(event) => {\r\n                            if (!event.key.match(/[\\w\\d.()]/))\r\n                                event.preventDefault();\r\n                        }}/>\r\n                    </div>\r\n\r\n                    <button onClick={() => this.state.editor.compose()}>Download</button>\r\n                </div>\r\n                <label id='debug_check_label' htmlFor='debug-check'>Debug</label>\r\n                <input name='debug-check' type='checkbox' onChange={(event) => {\r\n                    let state = this.state;\r\n                    state.editor.debug = event.target.checked;\r\n                    this.setState(state);\r\n                }}></input>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.updateColor = this.updateColor.bind(this);\r\n        this.setResolution = this.setResolution.bind(this);\r\n    }\r\n}\r\n\r\nexport { TextureEditor }","import './styles/App.css';\r\n\r\n// import { ConfigForm } from './components/ConfigGUI';\r\nimport { NavBar } from './components/NavBar';\r\nimport { TextureEditor } from './components/TextureEditor';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header><NavBar /></header>\r\n      <main>\r\n        <TextureEditor />\r\n        {/* <ConfigForm /> */}\r\n        <div id='debug'></div>\r\n      </main>\r\n      <footer>\r\n        <div>Built by ChrisOfNormandy.</div>\r\n        <div>Join <a href='https://discord.gg/EW5JsGJfdt'>Discord</a></div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}