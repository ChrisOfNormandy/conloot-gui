{"version":3,"sources":["app/config-builder/helpers/writeConfig.js","components/ConfigGUI.js","app/texture-editor/common/Mouse.js","app/texture-editor/helpers/colorize.js","app/texture-editor/helpers/Layer.js","app/texture-editor/editor.js","app/texture-editor/helpers/distance.js","components/fragments/Menu.js","components/editor/Ribbon.js","components/fragments/Floater.js","assets/pencil.svg","components/editor/Brushes.js","assets/paintbrush.svg","assets/eraser.svg","app/common/collapseController.js","components/fragments/Collapsable.js","components/editor/side-bar/ColorSettings.js","assets/eye-open.svg","assets/minus.svg","components/editor/side-bar/LayerSettings.js","components/editor/SideBar.js","components/editor/TextureEditor.js","app/common/FileSystem.js","components/fragments/Ribbon.js","helpers/stringUtil.js","components/mod-builder/scripts/tags.js","components/mod-builder/scripts/filemod.js","components/fragments/ContextMenu.js","components/mod-builder/FileExplorer.js","components/mod-builder/scripts/content-builder/blocks/standard.js","components/mod-builder/scripts/content-builder/content-builder.js","components/ModBuilder.js","app/common/download.js","App.js","reportWebVitals.js","components/NavBar.js","index.js"],"names":["getFormattedGroup","prefix","key","value","length","join","getFormattedValue","_key","includes","str","i","getBlocks","blockList","ConfigForm","props","state","values","fields","checkboxes","updateName","bind","updateMaterial","handleSubmit","checkBox","checkRow","event","arr","this","target","name","match","setState","material","push","placeholder","splice","submit","Blocks","Suite","wood_suite_list","stone_suite_list","Redstone","fence_gate_list","door_list","trapdoor_list","Generic","slab_list","wall_list","block_list","stairs_list","fence_list","Interactive","barrel_list","shulker_list","UI","ItemGroups","tabs","Items","Tool","pickaxe_list","axe_list","hoe_list","shovel_list","Resources","Ores","gem_list","metal_list","Plants","crop_list","WorldGen","Biomes","biome_list","forEach","item","all","block","slab","stairs","wall","fence","alert","JSON","stringify","preventDefault","blob","Blob","type","url","window","URL","createObjectURL","link","document","getElementById","href","setAttribute","click","write","index","map","cb","checked","m","box","className","id","download","style","display","onSubmit","field","htmlFor","defaultValue","onChange","required","onKeyPress","onClick","addInput","removeInput","React","Component","mouse","position","x","y","old","button","origin","displacement","getPosition","offset","inBounds","moving","clicked","decToHex","c","hex","Number","toString","hexToDec","parseInt","rgbToHex","r","g","b","a","rgbColorToHex","color","interpolate","v1","v2","Math","floor","calculatePixelColor","color1","color2","Layer","editor","visable","opacity","pixels","clear","pixel","setPixel","getPixel","resolution","changed","toggle","refresh","updatePixel","ignoreChange","alpha","colorize","layers","cache","layer","loader","PIXI","shared","Graphics","_","app","backgroundGroup","imageGroup","gridGroup","width","height","scale","debug","enabled","element","update","pos","image","innerHTML","brush","cursor","size","zoomSettings","dx","dy","fill","mousePos","graphic","focus","preview","getStyle","setStyle","tint","getColor","setColor","getSize","setSize","updateCursor","updateColor","updateSize","active","get","getActive","add","remove","reload","move","newIndex","bounds","doUpdate","view","getBoundingClientRect","startup","onReady","ticker","draw","setup","console","log","load","grid","show","stage","removeChild","addChild","classList","contains","buffer","buf","pos1","pos2","filled","tollerance","abs","checkColor","round","beginFill","drawRect","endFill","col","compose","canvas","createElement","context","getContext","imgData","createImageData","v","data","putImageData","toDataURL","zoom","amount","create","children","bgPixel","line","lineStyle","moveTo","lineTo","Menu","hidden","content","Ribbon","setResolution","res","isNaN","ribbonContent","addEventListener","obj","parentElement","menu","GetContent","container","onMouseDown","mx","clientX","my","clientY","onMouseUp","onMouseMove","parentBounds","left","right","top","bottom","brushes","icon","pencil","Brushes","src","alt","render","Floater","controls","error","maxHeight","scrollHeight","onLoad","con","collapseController","ColorSettings","previewElem","updatePreview","rgba","backgroundColor","updateRgb","k","updateHex","fetchDisplayColor","rgbControls","toUpperCase","min","max","rgb","split","Collapsable","LayerSettings","updateActiveLayer","updateLayerViewable","layerMovementButtons","layerControls","eye_open","minus","SideBar","list","componentDidMount","mouseMove_timeout","TextureEditor","doBoundUpdate","fetchBrush","parent","backgroundAlpha","oncontextmenu","e","stopPropagation","appendChild","getCanvas","clearTimeout","setTimeout","clr","onWheel","deltaY","FSFile","file","dir","path","File","FSDir","overwrite","n","undefined","recurDir","FSManager","rootName","root","zip","JSZip","p","generateAsync","shift","d","getDir","getFile","l","f","addFile","addDir","original","slice","del","start","stop","getIndex","tag","indexOf","tagList","autoTagList","repeat","replTags","options","s","org_name","replace","mod_name","toLowerCase","examplemod","archive","src_main_java_com","fetchDir","Promise","reject","Error","orgName","prompt","modName","resolve","modMain","rename","text","then","fileData","repl","replList","tags","from","to","ind","tagOptions","constructBody","RegExp","tabSize","stringUtil","preConstructorBody","constructorBody","imports","blockRegistry","code","front","buildGradle","repositories","dependencies","group","archivesBaseName","reobf","packFile","fetch","packMcMeta","modsTomlFile","modsToml","modsTomlDependency","modDir","modBlocks","catch","err","modify__buildGradle","ContextMenu","menuItems","action","markup","dirTracker","FileExplorer","currentFile","contextMenu","createFileList","createFileObj","files","dataTransfer","items","kind","getAsFile","handleFileAppend","folder","onDragOver","onDragLeave","onDrop","dropHandler","title","toFixed","ta","fsfile","onContextMenu","fileCtxMenu","deleteFile","uniqueId","folderCtxMenu","deleteDir","blocks","standard","ModBuilder","buttons","setRoot","response","mkd","loadAsync","zipped","fileName","pop","async","filemod","o","accept","zipName","openZip","save","compress","contentBuilder","newFile","txtArea","set","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","NavBar","btn","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.aee25a23.chunk.js","sourcesContent":["function getObj() {\r\n    return {\r\n        Blocks: {\r\n            Suite: {\r\n                \"String Lists\": {\r\n                    wood_suite_list: [],\r\n                    stone_suite_list: []\r\n                }\r\n            },\r\n            Redstone: {\r\n                \"String Lists\": {\r\n                    fence_gate_list: [],\r\n                    door_list: [],\r\n                    trapdoor_list: []\r\n                }\r\n            },\r\n            Generic: {\r\n                \"String Lists\": {\r\n                    slab_list: [],\r\n                    wall_list: [],\r\n                    block_list: [],\r\n                    stairs_list: [],\r\n                    fence_list: []\r\n                }\r\n            },\r\n            Interactive: {\r\n                \"String Lists\": {\r\n                    barrel_list: [],\r\n                    shulker_list: []\r\n                }\r\n            }\r\n        },\r\n        UI: {\r\n            ItemGroups: {\r\n                \"String Lists\": {\r\n                    tabs: []\r\n                }\r\n            }\r\n        },\r\n        Items: {\r\n            Tool: {\r\n                \"String Lists\": {\r\n                    pickaxe_list: [],\r\n                    axe_list: [],\r\n                    hoe_list: [],\r\n                    shovel_list: []\r\n                }\r\n            }\r\n        },\r\n        Resources: {\r\n            Ores: {\r\n                \"String Lists\": {\r\n                    gem_list: [],\r\n                    metal_list: []\r\n                }\r\n            },\r\n            Plants: {\r\n                \"String Lists\": {\r\n                    crop_list: []\r\n                }\r\n            }\r\n        },\r\n        WorldGen: {\r\n            Biomes: {\r\n                \"String Lists\": {\r\n                    biome_list: []\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction getFormattedValue(key, value) {\r\n    return `${key} = [${value.join(', ')}]\\n`;\r\n}\r\n\r\nfunction getFormattedGroup(prefix, key, value) {\r\n    if (value.length >= 0)\r\n        return getFormattedValue(key, value);\r\n    else {\r\n        let _key = `${prefix === null ? '' : `${prefix}.`}${key !== null ? key.includes(\" \") ? `\"${key}\"` : key : \"\"}`;\r\n\r\n        let str = key === null ? '' : `[${_key}]\\n`;\r\n\r\n        for (let i in value)\r\n            str += getFormattedGroup(key !== null ? _key : null, i, value[i]);\r\n\r\n        return str;\r\n    }\r\n}\r\n\r\nfunction getBlocks(blockList) {\r\n    return getFormattedGroup(null, null, blockList);\r\n}\r\n\r\nfunction write(blockList) {\r\n    const blob = new Blob([getBlocks(blockList)], {type: 'application/toml'});\r\n    const url = window.URL.createObjectURL(blob);\r\n    let link = document.getElementById('download_link');\r\n    link.href = url;\r\n    link.setAttribute('download', 'conloot.toml');\r\n    link.click();\r\n}\r\n\r\nexport {\r\n    write,\r\n    getObj\r\n}","import React from 'react';\r\n\r\nimport '../styles/forms.css';\r\nimport '../styles/config-gui.css';\r\n\r\nimport { write, getObj } from '../app/config-builder/helpers/writeConfig';\r\n\r\nexport default class ConfigForm extends React.Component {\r\n\r\n    updateName(event) {\r\n        let arr = this.state.values;\r\n        let i = event.target.name.match(/(\\d+)/)[1];\r\n\r\n        if (!arr[i])\r\n            arr[i] = {};\r\n        arr[i].name = event.target.value;\r\n\r\n        let state = this.state;\r\n        state.values = arr;\r\n        this.setState(state);\r\n    }\r\n\r\n    updateMaterial(event) {\r\n        let arr = this.state.values;\r\n        let i = event.target.name.match(/(\\d+)/)[1];\r\n\r\n        if (!arr[i])\r\n            arr[i] = {};\r\n        arr[i].material = event.target.value;\r\n\r\n        let state = this.state;\r\n        state.values = arr;\r\n        this.setState(state);\r\n    }\r\n\r\n    addInput() {\r\n        this.fields.push({\r\n            key: this.fields.length,\r\n            value: \"\",\r\n            placeholder: `my_block_${this.fields.length}`\r\n        });\r\n\r\n        let arr = this.state.values;\r\n        arr.push({});\r\n\r\n        let state = this.state;\r\n        state.values = arr;\r\n        this.setState(state);\r\n    }\r\n\r\n    removeInput() {\r\n        this.fields.splice(-1, 1);\r\n\r\n        let arr = this.state.values;\r\n        arr.splice(-1, 1);\r\n\r\n        let state = this.state;\r\n        state.values = arr;\r\n        this.setState(state);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        let submit = {};\r\n\r\n        let blockList = getObj();\r\n\r\n        this.state.values.forEach((item, i) => {\r\n            if (!submit[item.name]) {\r\n                submit[item.name] = item;\r\n                if (!!item.all) {\r\n                    if (item.material === 'wood')\r\n                        blockList.Blocks.Suite['String Lists'].wood_suite_list.push(`\"${item.name}\"`);\r\n                    else\r\n                        blockList.Blocks.Suite['String Lists'].stone_suite_list.push(`\"${item.name}\"`);\r\n                }\r\n                else {\r\n                    if (!!item.block)\r\n                        blockList.Blocks.Generic['String Lists'].block_list.push(`\"${item.name}\"`);\r\n                    if (!!item.slab)\r\n                        blockList.Blocks.Generic['String Lists'].slab_list.push(`\"${item.name}\"`);\r\n                    if (!!item.stairs)\r\n                        blockList.Blocks.Generic['String Lists'].stairs_list.push(`\"${item.name}\"`)\r\n                    if (!!item.wall)\r\n                        blockList.Blocks.Generic['String Lists'].wall_list.push(`\"${item.name}\"`);\r\n                    if (!!item.fence)\r\n                        blockList.Blocks.Generic['String Lists'].fence_list.push(`\"${item.name}\"`);\r\n                }\r\n            }\r\n        });\r\n\r\n        alert('A name was submitted: ' + JSON.stringify(submit));\r\n        event.preventDefault();\r\n\r\n        write(blockList);\r\n    }\r\n\r\n    checkRow(index) {\r\n        this.checkboxes.map((cb) => (document.getElementById(`${index}_cb_${cb}`).checked = true));\r\n    }\r\n\r\n    checkBox(event) {\r\n        let m = event.target.name.match(/(\\d+)_cb_(\\w+)/);\r\n        let index = m[1];\r\n        let box = m[2];\r\n\r\n        let arr = this.state.values;\r\n\r\n        if (!arr[index])\r\n            arr[index] = {};\r\n\r\n        if (box === 'all') {\r\n            if (event.target.checked) {\r\n                this.checkRow(index);\r\n                for (let i = 1; i < this.checkboxes.length; i++)\r\n                    arr[index][this.checkboxes[i]] = true;\r\n            }\r\n        }\r\n\r\n        arr[index][box] = event.target.checked;\r\n\r\n        let state = this.state;\r\n        state.values = arr;\r\n        this.setState(state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='config-gui-container'>\r\n                <h1>Config Generator</h1>\r\n                <div className='form-container'>\r\n                    <a id='download_link' href='/file.txt' download style={{ display: 'none' }}>_</a>\r\n                    <form className='form-body' onSubmit={this.handleSubmit}>\r\n                        <ul className='form-input-list'>\r\n                            {\r\n                                this.state.fields.map((field) => (\r\n                                    <li className='form-input-list-item' key={field.key}>\r\n                                        <label htmlFor={field.key} >Block {field.key + 1}</label>\r\n                                        <input\r\n                                            className='form-input'\r\n                                            key={field.key}\r\n                                            name={`${field.key}_content`}\r\n                                            defaultValue={field.value}\r\n                                            placeholder={field.placeholder}\r\n                                            onChange={this.updateName}\r\n                                            required\r\n                                            onKeyPress={(event) => {\r\n                                                if (event.key.match(/[a-zA-Z_0-9]/) === null)\r\n                                                    event.preventDefault();\r\n                                            }}\r\n                                        />\r\n\r\n                                        <input\r\n                                            className='form-input'\r\n                                            key={`${field.key}_material`}\r\n                                            name={`${field.key}_material`}\r\n                                            defaultValue=''\r\n                                            placeholder='stone | wood | etc...'\r\n                                            onChange={this.updateMaterial}\r\n                                        />\r\n\r\n                                        <div className='form-checkbox-container'>\r\n                                            {\r\n                                                this.checkboxes.map((box) => (\r\n                                                    <div key={`checkbox_group_${box}`}>\r\n                                                        <label htmlFor={`${field.key}_rb_${box}`} >{`${box}`}</label>\r\n                                                        <input\r\n                                                            className='form-input-checkbox'\r\n                                                            key={`${field.key}_cb_${box}`}\r\n                                                            id={`${field.key}_cb_${box}`}\r\n                                                            name={`${field.key}_cb_${box}`}\r\n                                                            type='checkbox'\r\n                                                            onChange={this.checkBox}\r\n                                                        />\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                        </div>\r\n                                    </li>\r\n                                ))\r\n                            }\r\n                        </ul>\r\n                        <input className='form-input-submit' type=\"submit\" value=\"Submit\" />\r\n                    </form>\r\n\r\n                    <div className='form-button-container'>\r\n                        <div className='form-button' onClick={(event) => {\r\n                            this.addInput(event)\r\n                        }}>\r\n                            Add\r\n                        </div>\r\n                        <div className='form-button' onClick={(event) => {\r\n                            this.removeInput(event);\r\n                        }}>\r\n                            Remove\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { values: [], fields: [], checkboxes: ['all', 'block', 'slab', 'stairs', 'wall', 'fence'] };\r\n\r\n        this.updateName = this.updateName.bind(this);\r\n        this.updateMaterial = this.updateMaterial.bind(this);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.checkBox = this.checkBox.bind(this);\r\n        this.checkRow = this.checkRow.bind(this);\r\n    }\r\n}","const mouse = {\r\n    position: {\r\n        x: 0,\r\n        y: 0,\r\n        old: { x: 0, y: 0 },\r\n        document: {\r\n            x: 0, y: 0\r\n        }\r\n    },\r\n    button: {\r\n        state: false,\r\n        id: 0,\r\n        origin: { x: null, y: null }\r\n    },\r\n    displacement: () => {\r\n        return {\r\n            x: mouse.position.old.x === null ? 0 : mouse.position.x - mouse.position.old.x,\r\n            y: mouse.position.old.y === null ? 0 : mouse.position.y - mouse.position.old.y\r\n        }\r\n    },\r\n    getPosition: (offset = null) => {\r\n        return offset === null\r\n        ?\r\n        {\r\n            x: mouse.position.x,\r\n            y: mouse.position.y\r\n        }\r\n        :\r\n        {\r\n                x: mouse.position.x - offset.x,\r\n                y: mouse.position.y - offset.y\r\n        }\r\n    },\r\n    inBounds: false,\r\n    moving: false,\r\n    clicked: false\r\n};\r\n\r\nexport default mouse;","function decToHex(c) {\r\n    var hex = Number(c).toString(16);\r\n    return hex.length === 1 ? `0${hex}` : hex;\r\n}\r\n\r\nfunction hexToDec(c) {\r\n    return parseInt(c, 16);\r\n}\r\n\r\nfunction rgbToHex(r, g, b, a = null) {\r\n    return Number(`0x${decToHex(r)}${decToHex(g)}${decToHex(b)}${a !== null ? decToHex(a) : ''}`);\r\n}\r\n\r\nfunction rgbToHexString(r, g, b, a = null) {\r\n    return `${decToHex(r)}${decToHex(g)}${decToHex(b)}${a !== null ? decToHex(a) : ''}`;\r\n}\r\n\r\nfunction hexToRgb(hex) {\r\n    switch (hex.length) {\r\n        case 0: return {r: 0, g: 0, b:0, a: 255}\r\n        case 1: return {r: hexToDec(hex), g: hexToDec(hex), b: hexToDec(hex), a: 255}\r\n        case 3: {\r\n            let rgb = hex.split('');\r\n            return { r: hexToDec(`${rgb[0] + rgb[0]}`), g: hexToDec(`${rgb[1] + rgb[1]}`), b: hexToDec(`${rgb[2] + rgb[2]}`), a: 255 }\r\n        }\r\n        case 4: {\r\n            let rgba = hex.split('');\r\n            return { r: hexToDec(`${rgba[0] + rgba[0]}`), g: hexToDec(`${rgba[1] + rgba[1]}`), b: hexToDec(`${rgba[2] + rgba[2]}`), a: hexToDec(`${rgba[3] + rgba[3]}`) }\r\n        }\r\n        case 6: {\r\n            let rgb = hex.split('');\r\n            return { r: hexToDec(`${rgb[0] + rgb[1]}`), g: hexToDec(`${rgb[2] + rgb[3]}`), b: hexToDec(`${rgb[4] + rgb[5]}`) }\r\n        }\r\n        case 8: {\r\n            let rgb = hex.split('');\r\n            return { r: hexToDec(`${rgb[0] + rgb[1]}`), g: hexToDec(`${rgb[2] + rgb[3]}`), b: hexToDec(`${rgb[4] + rgb[5]}`), a: hexToDec(`${rgb[6] + rgb[7]}`) }\r\n        }\r\n        default: return {r: 0, g: 0, b: 0, a: 255}\r\n    }\r\n}\r\n\r\nfunction rgbToHsv(r, g, b) {\r\n    r /= 255; g /= 255; b /= 255;\r\n\r\n    let v = Math.max(r, g, b), c = v - Math.min(r, g, b);\r\n    let h = c && ((v === r) ? (g - b) / c : ((v === g) ? 2 + (b - r) / c : 4 + (r - g) / c));\r\n\r\n    return {\r\n        h: 60 * (h < 0 ? h + 6 : h),\r\n        s: v && c / v,\r\n        v\r\n    };\r\n}\r\n\r\nfunction rgbColorToHex(color) {\r\n    return rgbToHex(color.r, color.g, color.b);\r\n}\r\n\r\nfunction hsvToRgb(h, s, v) {\r\n    let r, g, b;\r\n    let i = Math.floor(h * 6);\r\n    let f = h * 6 - i;\r\n    let p = v * (1 - s);\r\n    let q = v * (1 - f * s);\r\n    let t = v * (1 - (1 - f) * s);\r\n\r\n    switch (i % 6) {\r\n        case 0: {\r\n            r = v;\r\n            g = t;\r\n            b = p;\r\n            break;\r\n        }\r\n        case 1: {\r\n            r = q;\r\n            g = v;\r\n            b = p;\r\n            break;\r\n        }\r\n        case 2: {\r\n            r = p;\r\n            g = v;\r\n            b = t;\r\n            break;\r\n        }\r\n        case 3: {\r\n            r = p;\r\n            g = q;\r\n            b = v;\r\n            break;\r\n        }\r\n        case 4: {\r\n            r = t;\r\n            g = p;\r\n            b = v;\r\n            break;\r\n        }\r\n        case 5: {\r\n            r = v;\r\n            g = p;\r\n            b = q;\r\n            break;\r\n        }\r\n        default: return null;\r\n    }\r\n\r\n    return [r * 255, g * 255, b * 255];\r\n}\r\n\r\nfunction interpolate(v1, v2, a) {\r\n    return Math.floor((v2 * a) + (v1 * (1 - a)));\r\n}\r\n\r\nfunction calculatePixelColor(color1, color2) {\r\n    if (color1.a === 0)\r\n        return color2;\r\n    if (color2.a === 0 || !color2)\r\n        return color1;\r\n\r\n    return {\r\n        r: interpolate(color1.r, color2.r, color2.a / 255),\r\n        g: interpolate(color1.g, color2.g, color2.a / 255),\r\n        b: interpolate(color1.b, color2.b, color2.a / 255),\r\n        a: (color1.a + color2.a) > 255 ? 255 : color1.a + color2.a\r\n    }\r\n}\r\n\r\nexport {\r\n    decToHex,\r\n    rgbToHex,\r\n    rgbToHexString,\r\n    hexToDec,\r\n    hexToRgb,\r\n    rgbColorToHex,\r\n    rgbToHsv,\r\n    hsvToRgb,\r\n    interpolate,\r\n    calculatePixelColor\r\n}","import * as colorize from './colorize';\r\n\r\nexport default class Layer {\r\n    editor;\r\n\r\n    resolution;\r\n\r\n    name;\r\n\r\n    visable = true;\r\n    opacity = 255;\r\n    pixels = [];\r\n\r\n    clear = () => {\r\n        this.pixels.forEach(pixel => this.setPixel(pixel.x, pixel.y, null));\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @returns {{color: { r: number, g: number, b: number, a: number }, x: number, y: number, changed: boolean}}\r\n     */\r\n    getPixel = (x, y) => {\r\n        if (this.visable)\r\n            return !this.pixels[y * this.resolution + x]\r\n                ? null\r\n                : this.pixels[y * this.resolution + x];\r\n        return {\r\n            x, y, changed: this.pixels[y * this.resolution + x].changed, color: { r: 0, g: 0, b: 0, a: 0 }\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.visable = !this.visable;\r\n        this.editor.refresh = true;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {{r: number, g: number, b: number, a: number}} color\r\n     * @param {boolean} ignoreChange\r\n     * @param {number} alpha\r\n     * @returns {{color: { r: number, g: number, b: number, a: number }, x: number, y: number, changed: boolean}}\r\n     */\r\n    updatePixel = (x, y, color, ignoreChange = false, alpha = null) => {\r\n        let pixel = this.getPixel(x, y);\r\n\r\n        if (pixel === null || (pixel.changed && !ignoreChange))\r\n            return null;\r\n\r\n        if (alpha === null) {\r\n            pixel.color = color === null ? { r: 0, g: 0, b: 0, a: 0 } : colorize.calculatePixelColor(pixel.color, color);\r\n            pixel.changed = true;\r\n        }\r\n        else\r\n            pixel.color.a = (pixel.color.a / 255) * alpha;\r\n\r\n        return pixel;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @param {{r: number, g: number, b: number, a: number}} color \r\n     * @returns {{color: { r: number, g: number, b: number, a: number }, x: number, y: number, changed: boolean}}\r\n     */\r\n    setPixel = (x, y, color = null) => {\r\n        this.pixels[y * this.resolution + x] = {\r\n            color: color === null ? { r: 0, g: 0, b: 0, a: 0 } : color,\r\n            x,\r\n            y,\r\n            changed: false\r\n        };\r\n\r\n        return this.pixels[y * this.resolution + x];\r\n    }\r\n\r\n    constructor(editor, name = null) {\r\n        this.editor = editor;\r\n        this.resolution = editor.resolution;\r\n\r\n        if (name === null) {\r\n            let arr = this.editor.layers.cache.map(layer => {\r\n                return layer.name;\r\n            });\r\n\r\n            if (!arr.length)\r\n                this.name = 'Layer 1';\r\n            else {\r\n                let index = 1;\r\n\r\n                this.name = `Layer ${index}`;\r\n\r\n                while (arr.includes(this.name)) {\r\n                    this.name = `Layer ${index}`;\r\n                    index++;\r\n                }\r\n            }\r\n        }\r\n        else\r\n            this.name = name;\r\n\r\n        for (let x = 0; x < editor.resolution; x++) {\r\n            for (let y = 0; y < editor.resolution; y++) {\r\n                this.setPixel(x, y);\r\n            }\r\n        }\r\n    }\r\n}","import * as PIXI from 'pixi.js';\r\n\r\nimport mouse from './common/Mouse';\r\n\r\nimport Layer from './helpers/Layer';\r\n\r\nimport * as colorize from './helpers/colorize';\r\nimport * as distance from './helpers/distance';\r\n\r\nconst loader = PIXI.Loader.shared,\r\n    Graphics = PIXI.Graphics;\r\n\r\nconst _ = {\r\n    /**\r\n     * @type {PIXI.Application}\r\n     */\r\n    app: null,\r\n\r\n    display: {\r\n        backgroundGroup: new PIXI.Container(),\r\n        imageGroup: new PIXI.Container(),\r\n        gridGroup: new PIXI.Container()\r\n    },\r\n\r\n    resolution: 0,\r\n\r\n    refresh: false,\r\n\r\n    width: 0,\r\n    height: 0,\r\n    scale: 0,\r\n\r\n    debug: {\r\n        enabled: true,\r\n\r\n        element: document.getElementById('debug'),\r\n\r\n        update: () => {\r\n            let pos = mouse.getPosition();\r\n            let x = Math.floor(pos.x / _.scale),\r\n                y = Math.floor(pos.y / _.scale);\r\n            let pixel = _.image.pixels[y * _.resolution + x];\r\n\r\n            if (!pixel)\r\n                return;\r\n\r\n            _.debug.element.innerHTML =\r\n                `Mouse: ${JSON.stringify(pos)} --> ${x}, ${y}<br />` +\r\n                ` - ${JSON.stringify(mouse.position.document)}<br />` +\r\n                ` - ${_.scale}<br />` +\r\n                `Brush:<br />` +\r\n                ` - Pos: ${_.brush.cursor.position.x}, ${_.brush.cursor.position.y} --> ${_.brush.cursor.position.x + _.brush.size - 1}, ${_.brush.cursor.position.y + _.brush.size - 1}<br />` +\r\n                ` - Style: ${_.brush.style}<br />` +\r\n                `Cursor: ${JSON.stringify(_.brush.cursor.position)}<br />` +\r\n                `Zoom: ${_.zoomSettings.width}, ${_.zoomSettings.height} | ${_.zoomSettings.value}<br />` +\r\n                ` - ${JSON.stringify(_.zoomSettings.offset)}`;\r\n        },\r\n    },\r\n\r\n    offset: {\r\n        x: 0,\r\n        y: 0,\r\n        dx: 0,\r\n        dy: 0\r\n    },\r\n\r\n    zoomSettings: {\r\n        scale: 0,\r\n        width: 0,\r\n        height: 0,\r\n        offset: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        value: 0\r\n    },\r\n\r\n    brush: {\r\n        style: 'pencil',\r\n        fill: {\r\n            r: 0, g: 0, b: 0, a: 255\r\n        },\r\n        size: 1,\r\n\r\n        mousePos: null,\r\n        cursor: {\r\n            position: {\r\n                x: 0,\r\n                y: 0,\r\n                old: {\r\n                    x: 0,\r\n                    y: 0\r\n                }\r\n            },\r\n            /**\r\n             * @type {PIXI.Graphics}\r\n             */\r\n            graphic: null,\r\n            focus: null,\r\n        },\r\n\r\n        preview: null,\r\n\r\n        getStyle: () => {\r\n            return _.brush.style;\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @param {string} style \r\n         */\r\n        setStyle: (style) => {\r\n            switch (style) {\r\n                case 'eraser': {\r\n                    _.brush.cursor.graphic.tint = 0xFFFFFF;\r\n                    _.brush.cursor.graphic.alpha = 1;\r\n\r\n                    break;\r\n                }\r\n                // eslint-disable-next-line\r\n                case 'fill': {}\r\n                // eslint-disable-next-line\r\n                case 'color-picker': {\r\n                    _.brush.cursor.graphic.alpha = 0;\r\n\r\n                    break;\r\n                }\r\n                default: {\r\n                    _.brush.cursor.graphic.tint = colorize.rgbToHex(_.brush.fill.r, _.brush.fill.g, _.brush.fill.b);\r\n                    _.brush.cursor.graphic.alpha = _.brush.fill.a / 255;\r\n                    \r\n                    break;\r\n                }\r\n            }\r\n\r\n            _.brush.style = style;\r\n        },\r\n\r\n        getColor: () => {\r\n            return {\r\n                r: _.brush.fill.r,\r\n                g: _.brush.fill.g,\r\n                b: _.brush.fill.b,\r\n                a: _.brush.fill.a\r\n            };\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @param {{r: number, g: number, b: number, a: number}} color \r\n         */\r\n        setColor: (color) => {\r\n            _.brush.cursor.graphic.tint = colorize.rgbToHex(color.r, color.g, color.b);\r\n            _.brush.cursor.graphic.alpha = color.a / 255;\r\n\r\n            _.brush.fill = color;\r\n        },\r\n\r\n        getSize: () => {\r\n            return _.brush.size;\r\n        },\r\n\r\n        setSize: (size) => {\r\n            _.brush.size = size;\r\n        },\r\n\r\n        updateCursor: (updateColor = false, updateSize = false) => {\r\n            _.brush.mousePos = mouse.getPosition();\r\n\r\n            _.brush.mousePos.x -= (_.zoomSettings.offset.x + _.offset.x);\r\n            _.brush.mousePos.y -= (_.zoomSettings.offset.y + _.offset.y);\r\n\r\n            _.brush.cursor.position.old.x = _.brush.cursor.position.x;\r\n            _.brush.cursor.position.old.y = _.brush.cursor.position.y;\r\n\r\n            _.brush.cursor.position.x = Math.floor(((_.brush.mousePos.x) - (_.brush.size - 1) / 2 * _.scale) / _.scale);\r\n            _.brush.cursor.position.y = Math.floor(((_.brush.mousePos.y) - (_.brush.size - 1) / 2 * _.scale) / _.scale);\r\n\r\n            if (_.brush.cursor.position.old.x !== _.brush.cursor.position.x || _.brush.cursor.position.old.y !== _.brush.cursor.position.y) {\r\n                _.brush.cursor.graphic.x = _.brush.cursor.position.x * _.scale + _.zoomSettings.offset.x + _.offset.x;\r\n                _.brush.cursor.graphic.y = _.brush.cursor.position.y * _.scale + _.zoomSettings.offset.y + _.offset.y;\r\n            }\r\n\r\n            if (updateColor) {\r\n                _.brush.cursor.graphic.tint = colorize.rgbToHex(_.brush.fill.r, _.brush.fill.g, _.brush.fill.b);\r\n                _.brush.cursor.graphic.alpha = _.brush.fill.a / 255;\r\n            }\r\n\r\n            if (updateSize) {\r\n                _.brush.cursor.graphic.width = _.scale * _.brush.size;\r\n                _.brush.cursor.graphic.height = _.scale * _.brush.size;\r\n            }            \r\n        }\r\n    },\r\n\r\n    layers: {\r\n        /**\r\n         * @type {Layer[]}\r\n         */\r\n        cache: [],\r\n\r\n        active: 0,\r\n\r\n        /**\r\n         * \r\n         * @param {number} layer \r\n         * @returns {Layer}\r\n         */\r\n        get: (layer) => {\r\n            return _.layers.cache[layer];\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @returns {Layer}\r\n         */\r\n        getActive: () => {\r\n            return _.layers.cache[_.layers.active];\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @returns {Layer}\r\n         */\r\n        add: () => {\r\n            let index = _.layers.cache.length;\r\n            let layer = new Layer(editor);\r\n\r\n            _.layers.cache.push(layer);\r\n            _.layers.active = index;\r\n\r\n            return layer;\r\n        },\r\n\r\n        remove: (index = -1) => {\r\n            _.layers.cache.splice(index, 1);\r\n            _.layers.reload();\r\n\r\n            return _.layers;\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @param {number} index \r\n         * @param {number} newIndex \r\n         * @returns {Layer}\r\n         */\r\n        move: (index, newIndex) => {\r\n            let layer = _.layers.cache.splice(index, 1)[0];\r\n\r\n            _.layers.cache.splice(newIndex, 0, layer);\r\n            _.layers.reload();\r\n\r\n            return layer;\r\n        },\r\n\r\n        clear: () => {\r\n            _.layers.cache = [];\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @param {number} layer \r\n         */\r\n        toggle: (layer) => {\r\n            _.layers.cache[layer].visable = !_.layers.cache[layer].visable;\r\n            _.layers.reload();\r\n        },\r\n\r\n        reload: () => {\r\n            _.refresh = true;\r\n        }\r\n    },\r\n\r\n    bounds: {\r\n        doUpdate: false,\r\n\r\n        /**\r\n         * @type {DOMRect}\r\n         */\r\n        value: null,\r\n\r\n        /**\r\n         * \r\n         * @returns {DOMRect}\r\n         */\r\n        update: () => {\r\n            _.bounds.value = _.app.view.getBoundingClientRect();\r\n            _.bounds.doUpdate = false;\r\n\r\n            return _.bounds.value;\r\n        }\r\n    },    \r\n\r\n    /**\r\n     * \r\n     * @returns {HTMLCanvasElement}\r\n     */\r\n    startup: () => {\r\n        _.onReady(() => _.app.ticker.add(() => _.draw()));\r\n\r\n        return _.app.view;\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {()} setup \r\n     */\r\n    onReady: (setup) => {\r\n        console.log('App ready. Loading.');\r\n\r\n        loader\r\n            .load(setup);\r\n    },\r\n\r\n    grid: {\r\n        enabled: false,\r\n\r\n        show: () => {\r\n            _.app.stage.removeChild(_.display.gridGroup);\r\n            _.app.stage.addChild(_.display.gridGroup);\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @returns {boolean}\r\n         */\r\n        toggle: () => {\r\n            _.grid.enabled = !_.grid.enabled;\r\n\r\n            if (_.grid.enabled)\r\n                _.app.stage.addChild(_.display.gridGroup);\r\n            else\r\n                _.app.stage.removeChild(_.display.gridGroup);\r\n\r\n            return _.grid.enabled;\r\n        },\r\n    },    \r\n\r\n    draw: () => {\r\n        if (_.debug.element === null) {\r\n            _.debug.element = document.getElementById('debug');\r\n            return;\r\n        }\r\n\r\n        if (_.debug.enabled) {\r\n            if (_.debug.element.classList.contains('hidden'))\r\n                _.debug.element.classList.remove('hidden');\r\n\r\n            _.debug.update();\r\n        }\r\n        else if (!_.debug.element.classList.contains('hidden'))\r\n            _.debug.element.classList.add('hidden')\r\n\r\n        if (_.refresh) {\r\n            _.image.pixels.forEach(pixel => {\r\n                _.image.updatePixel(pixel.x, pixel.y);\r\n\r\n                _.app.stage.removeChild(pixel.graphic);\r\n                _.app.stage.addChild(pixel.graphic);\r\n            });\r\n\r\n            _.app.stage.removeChild(_.brush.cursor.graphic);\r\n            _.app.stage.addChild(_.brush.cursor.graphic);\r\n\r\n            if (_.grid.enabled)\r\n                _.grid.show();\r\n\r\n            _.refresh = false;\r\n\r\n            return;\r\n        }\r\n\r\n        _.image.buffer.forEach((pixel, i) => {\r\n            _.image.updatePixel(pixel.x, pixel.y);\r\n\r\n            if (pixel.changed) {\r\n                if (!mouse.button.state)\r\n                    pixel.changed = false;\r\n            }\r\n            else\r\n                _.image.buffer.splice(i, 1);\r\n        });\r\n\r\n        _.brush.updateCursor();\r\n\r\n        let layer = _.layers.getActive();\r\n        let buf;\r\n\r\n        let color, ignoreChange, alpha;\r\n\r\n        if (!!layer) {\r\n            if (mouse.clicked) {\r\n                switch(_.brush.style) {\r\n                    case 'fill': {\r\n                        let position = {\r\n                            x: _.brush.cursor.position.x,\r\n                            y: _.brush.cursor.position.y\r\n                        };\r\n\r\n                        let origin = {\r\n                            color: layer.getPixel(position.x, position.y).color\r\n                        };\r\n\r\n                        color = _.brush.getColor();\r\n                        ignoreChange = false;\r\n                        alpha = null;\r\n\r\n                        let filled = [];\r\n\r\n                        function checkColor(color1, color2, tollerance = 5) {\r\n                            return (\r\n                                Math.abs(color1.r - color2.r) <= tollerance &&\r\n                                Math.abs(color1.g - color2.g) <= tollerance &&\r\n                                Math.abs(color1.b - color2.b) <= tollerance &&\r\n                                Math.abs(color1.a - color2.a) <= tollerance\r\n                            )\r\n                        }\r\n\r\n                        function fill(pos) {\r\n                            let pixel = layer.getPixel(pos.x, pos.y);\r\n\r\n                            if (pixel === null || !checkColor(pixel.color, origin.color) || pos.x < 0 || pos.y >= _.resolution || pos.y < 0 || pos.y >= _.resolution)\r\n                                return;\r\n\r\n                            buf = filled.includes(pos) ? null : layer.updatePixel(pos.x, pos.y, color, ignoreChange, alpha);\r\n\r\n                            if (buf !== null) {\r\n                                _.image.buffer.push(buf);\r\n                                filled.push(pos);\r\n\r\n                                fill({ x: pos.x - 1, y: pos.y });\r\n                                fill({ x: pos.x + 1, y: pos.y });\r\n                                fill({ x: pos.x, y: pos.y - 1 });\r\n                                fill({ x: pos.x, y: pos.y + 1 });\r\n                            }\r\n                        }\r\n\r\n                        fill(position);\r\n                        break;\r\n                    }\r\n                    case 'color-picker': {\r\n                        let color = layer.getPixel(_.brush.cursor.position.x, _.brush.cursor.position.y).color;\r\n\r\n                        _.brush.setColor(color);\r\n                        _.brush.preview.update();\r\n                        _.brush.updateCursor(true);\r\n\r\n                        break;\r\n                    }\r\n                    default: { break; }\r\n                }\r\n            }\r\n            else if (mouse.button.state) {\r\n                if (mouse.button.id === 0) {\r\n                    switch (_.brush.style) {\r\n                        case 'fill': {}\r\n                        // eslint-disable-next-line\r\n                        case 'color-picker': { break; }\r\n                        default: {\r\n                            for (let x = _.brush.cursor.position.x < 0 ? 0 : _.brush.cursor.position.x; x < _.brush.cursor.position.x + _.brush.size && x < _.resolution; x++) {\r\n                                for (let y = _.brush.cursor.position.y < 0 ? 0 : _.brush.cursor.position.y; y < _.brush.cursor.position.y + _.brush.size && y < _.resolution; y++) {\r\n                                    switch (_.brush.style) {\r\n                                        case 'paint': {\r\n                                            color = _.brush.getColor();\r\n\r\n                                            color.a = (_.brush.fill.a / 255) * Math.floor((1 - (distance.manhattan(\r\n                                                {\r\n                                                    x: _.brush.cursor.position.x + Math.floor(_.brush.size / 2),\r\n                                                    y: _.brush.cursor.position.y + Math.floor(_.brush.size / 2)\r\n                                                },\r\n                                                {\r\n                                                    x, y\r\n                                                }\r\n                                            ) / Math.round(_.brush.size / 2))) * 255);\r\n\r\n                                            if (color.a < 0)\r\n                                                color.a = 0;\r\n\r\n                                            ignoreChange = _.brush.cursor.position.old.x !== _.brush.cursor.position.x || _.brush.cursor.position.old.y !== _.brush.cursor.position.y;\r\n                                            alpha = null;\r\n\r\n                                            break;\r\n                                        }\r\n                                        case 'eraser': {\r\n                                            color = null;\r\n                                            ignoreChange = _.brush.cursor.position.old.x !== _.brush.cursor.position.x || _.brush.cursor.position.old.y !== _.brush.cursor.position.y;\r\n                                            alpha = 0;\r\n\r\n                                            break\r\n                                        }\r\n                                        default: {\r\n                                            color = _.brush.getColor();\r\n                                            ignoreChange = false;\r\n                                            alpha = null;\r\n\r\n                                            break;\r\n                                        }\r\n                                    }\r\n\r\n                                    buf = layer.updatePixel(x, y, color, ignoreChange, alpha);\r\n\r\n                                    if (buf !== null)\r\n                                        _.image.buffer.push(buf);\r\n                                }\r\n                            }\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!mouse.inBounds)\r\n            mouse.button.state = false;\r\n\r\n        mouse.clicked = false;\r\n    },\r\n\r\n    image: {\r\n        pixels: [],\r\n        buffer: [],\r\n\r\n        setPixel: (x, y, color = null) => {\r\n            _.image.pixels[y * _.resolution + x] = {\r\n                graphic: new Graphics(),\r\n                color: color === null ? {\r\n                    r: 0,\r\n                    g: 0,\r\n                    b: 0,\r\n                    a: 0\r\n                } : color,\r\n                changed: false,\r\n                x,\r\n                y\r\n            };\r\n\r\n            _.image.pixels[y * _.resolution + x].graphic.beginFill(0xFFFFFF);\r\n            _.image.pixels[y * _.resolution + x].graphic.drawRect(0, 0, _.scale, _.scale);\r\n            _.image.pixels[y * _.resolution + x].graphic.endFill();\r\n\r\n            _.image.pixels[y * _.resolution + x].graphic.tint = colorize.rgbColorToHex(_.image.pixels[y * _.resolution + x].color);\r\n            _.image.pixels[y * _.resolution + x].graphic.alpha = _.image.pixels[y * _.resolution + x].color.a / 255;\r\n\r\n            _.image.pixels[y * _.resolution + x].graphic.x = x * _.scale;\r\n            _.image.pixels[y * _.resolution + x].graphic.y = y * _.scale;\r\n\r\n            return _.image.pixels[y * _.resolution + x];\r\n        },\r\n\r\n        getPixel: (x, y) => {\r\n            return _.image.pixels[y * _.resolution + x] || null;\r\n        },\r\n\r\n        updatePixel: (x, y) => {\r\n            if (!_.image.pixels[y * _.resolution + x])\r\n                _.image.setPixel(x, y);\r\n\r\n            let color = null;\r\n\r\n            _.layers.cache.forEach(layer => {\r\n                if (!layer.visable)\r\n                    return;\r\n\r\n                let col = layer.getPixel(x, y).color;\r\n                if (col.a === 0)\r\n                    return;\r\n\r\n                if (color === null) {\r\n                    color = col;\r\n                }\r\n                else\r\n                    color = colorize.calculatePixelColor(col, color);\r\n            });\r\n\r\n            _.image.pixels[y * _.resolution + x].color = color || { r: 0, g: 0, b: 0, a: 0 };\r\n            _.image.pixels[y * _.resolution + x].graphic.tint = colorize.rgbColorToHex(_.image.pixels[y * _.resolution + x].color);\r\n            _.image.pixels[y * _.resolution + x].graphic.alpha = _.image.pixels[y * _.resolution + x].color.a / 255;\r\n        },\r\n\r\n        compose: () => {\r\n            const canvas = document.createElement('canvas'), context = canvas.getContext('2d');\r\n            canvas.width = _.resolution;\r\n            canvas.height = _.resolution;\r\n\r\n            let imgData = context.createImageData(_.resolution, _.resolution);\r\n\r\n            let color;\r\n            for (let x = 0; x < _.resolution; x++) {\r\n                for (let y = 0; y < _.resolution; y++) {\r\n                    let v = (y * _.resolution + x) * 4;\r\n                    color = _.image.getPixel(x, y).color;\r\n\r\n                    imgData.data[v] = color.r;\r\n                    imgData.data[v + 1] = color.g;\r\n                    imgData.data[v + 2] = color.b;\r\n                    imgData.data[v + 3] = color.a;\r\n                }\r\n            }\r\n\r\n            context.putImageData(imgData, 0, 0);\r\n\r\n            const url = canvas.toDataURL('image/png');\r\n            let link = document.createElement('a');\r\n            link.href = url;\r\n\r\n            let name = document.getElementById('image_name').value;\r\n            link.setAttribute('download', `${!!name ? name : 'texture'}.png`);\r\n            link.click();\r\n        },\r\n\r\n        clear: () => {\r\n            _.layers.cache.forEach(layer => layer.clear());\r\n            _.refresh = true;\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * \r\n     * @param {boolean} amount \r\n     */\r\n    zoom: (amount) => {\r\n        if ((amount && _.zoomSettings.scale <= -9) || (!amount && _.zoomSettings.scale >= 20))\r\n            return;\r\n\r\n        _.zoomSettings.scale += amount ? -1 : 1;\r\n\r\n        _.zoomSettings.value = _.zoomSettings.scale < 0 ? (10 + _.zoomSettings.scale) / 10 : 1 + _.zoomSettings.scale / 10;\r\n\r\n        _.zoomSettings.width = (_.app.view.width < _.app.view.height ? _.app.view.width : _.app.view.height) * _.zoomSettings.value;\r\n        _.zoomSettings.height = _.zoomSettings.width;\r\n        _.zoomSettings.offset.x = (_.app.view.width - _.zoomSettings.width) / 2;\r\n        _.zoomSettings.offset.y = (_.app.view.height - _.zoomSettings.height) / 2;\r\n\r\n        for (let g in _.display) {\r\n            _.display[g].width = _.zoomSettings.width;\r\n            _.display[g].height = _.zoomSettings.height;\r\n            _.display[g].x = _.zoomSettings.offset.x;\r\n            _.display[g].y = _.zoomSettings.offset.y;\r\n        }\r\n\r\n        _.scale = (_.display.imageGroup.width < _.display.imageGroup.height ? _.display.imageGroup.width : _.display.imageGroup.height) / _.resolution;\r\n\r\n        _.scale *= _.zoomSettings.value;\r\n\r\n        _.brush.updateCursor(false, true);\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {PIXI.Application} app \r\n     */\r\n    create: (app, resolution = 16) => {\r\n        if (_.app !== null)\r\n            while (_.app.stage.children[0])\r\n                _.app.stage.removeChild(_.app.stage.children[0]);\r\n\r\n        _.app = app;\r\n\r\n        _.resolution = resolution\r\n\r\n        _.width = app.view.width;\r\n        _.height = app.view.height;\r\n        _.scale = (_.width < _.height ? _.width : _.height) / _.resolution;\r\n\r\n        _.image.pixels = [];\r\n\r\n        _.layers.clear();\r\n        _.layers.add();\r\n\r\n        _.brush.cursor.graphic = new Graphics();\r\n        _.brush.cursor.graphic.beginFill(0xFFFFFF);\r\n        _.brush.cursor.graphic.drawRect(0, 0, _.scale, _.scale);\r\n        _.brush.cursor.graphic.endFill();\r\n\r\n        let layer = _.layers.get(_.layers.active);\r\n\r\n        let bgPixel;\r\n        for (let x = 0; x < _.resolution; x++) {\r\n            for (let y = 0; y < _.resolution; y++) {\r\n                bgPixel = new Graphics();\r\n                bgPixel.beginFill(0xFFFFFF);\r\n                bgPixel.drawRect(0, 0, _.scale, _.scale);\r\n                bgPixel.endFill();\r\n\r\n                bgPixel.tint = (x % 2 === 0 && y % 2 === 1) || (x % 2 === 1 && y % 2 === 0) ? 0xFFFFFF : 0xDDDDDD;\r\n\r\n                bgPixel.x = x * _.scale;\r\n                bgPixel.y = y * _.scale;\r\n\r\n                _.display.backgroundGroup.addChild(bgPixel);\r\n\r\n                _.display.imageGroup.addChild(_.image.setPixel(x, y).graphic);\r\n\r\n                layer.setPixel(x, y, _.image.pixels[y * _.resolution + x].color);\r\n\r\n                let line = new PIXI.Graphics();\r\n                line.lineStyle(1, 0x000000, 1);\r\n                line.moveTo(0, y * _.scale);\r\n                line.lineTo(_.resolution * _.scale, y * _.scale);\r\n\r\n                _.display.gridGroup.addChild(line);\r\n            }\r\n\r\n            let line = new PIXI.Graphics();\r\n            line.lineStyle(1, 0x000000, 1);\r\n            line.moveTo(x * _.scale, 0);\r\n            line.lineTo(x * _.scale, _.resolution * _.scale);\r\n\r\n            _.display.gridGroup.addChild(line);\r\n        }\r\n\r\n        _.offset.x = _.width / 2 - (_.resolution * _.scale) / 2;\r\n        _.offset.y = _.height / 2 - (_.resolution * _.scale) / 2;\r\n\r\n        for (let g in _.display) {\r\n            _.display[g].x = _.offset.x;\r\n            _.display[g].y = _.offset.y;\r\n        }\r\n\r\n        _.brush.updateCursor(true, true);\r\n\r\n        _.app.stage.addChild(_.display.backgroundGroup, _.display.imageGroup);\r\n\r\n        _.app.stage.addChild(_.brush.cursor.graphic);\r\n\r\n        _.zoom(true);\r\n\r\n        return _;\r\n    }\r\n}\r\n\r\nconst editor = _;\r\n\r\nexport {\r\n    editor\r\n}","function manhattan(pos1, pos2) {\r\n    return Math.abs(pos2.x - pos1.x) + Math.abs(pos2.y - pos1.y);\r\n}\r\n\r\nfunction euclidean(pos1, pos2) {\r\n    return Math.sqrt((pos2.x - pos1.x) * (pos2.x - pos1.x) + (pos2.y - pos1.y) * (pos2.y - pos1.y));\r\n}\r\n\r\nexport {\r\n    manhattan,\r\n    euclidean\r\n}","function Menu(props) {\r\n    return (\r\n        <div\r\n            id={props.id}\r\n            className={`menu${!!props.hidden ? ' hidden' : ''}`}\r\n        >\r\n            {props.content.map((item, i) => (\r\n                <div\r\n                    className='menu-item'\r\n                    key={i}\r\n                >\r\n                    {item}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\n\r\nimport Menu from '../fragments/Menu';\r\n\r\nimport './styles/ribbon.css';\r\n\r\nexport default class Ribbon extends React.Component {\r\n    setResolution(event) {\r\n        event.preventDefault();\r\n        let res = Number(document.getElementById('resolution_input').value);\r\n        \r\n        if (isNaN(res))\r\n            return;\r\n\r\n        let state = this.state;\r\n\r\n        if (res % 16 === 0 && res > 0 && res <= 128)\r\n            state.editor = state.editor.create(this.editor.app, res);\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let ribbonContent = [];\r\n        this.state.content.forEach(item => ribbonContent.push(document.getElementById(item.id)));\r\n\r\n        document.addEventListener('click', (event) => {\r\n            ribbonContent.forEach(obj => {\r\n                if (!obj.parentElement.contains(event.target))\r\n                    obj.classList.add('hidden');\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className='texture-editor-ribbon'\r\n            >\r\n                {this.state.content.map(menu => (\r\n                    <div\r\n                        key={menu.key}\r\n                        className='ribbon-menu'\r\n                    >\r\n                        <div\r\n                            className='ribbon-menu-button'\r\n                            onClick={\r\n                                () => {\r\n                                    document.getElementById(menu.id).classList.toggle('hidden');\r\n                                }\r\n                            }\r\n                        >\r\n                            {menu.key}\r\n                        </div>\r\n\r\n                        {menu.value}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            editor: props.editor,\r\n            content: [\r\n                {\r\n                    key: \"File\",\r\n                    id: 'file_menu',\r\n                    value: (<Menu\r\n                        content={[\r\n                            (<div\r\n                                className='menu-button'\r\n                                onClick={\r\n                                    () => this.state.editor.image.compose()\r\n                                }\r\n                            >\r\n                                Download\r\n                            </div>),\r\n                            // (<div\r\n                            //     className='menu-break'\r\n                            // />),\r\n                            // (<form\r\n                            //     className='menu-button'\r\n                            // >\r\n                            //     <input\r\n                            //         type='text'\r\n                            //         id='resolution_input'\r\n                            //         name='resolution'\r\n                            //         defaultValue='16'\r\n                            //     />\r\n                            //     <input\r\n                            //         type='submit'\r\n                            //         value='Create'\r\n                            //         onClick={this.setResolution}\r\n                            //     />\r\n                            // </form>),\r\n                            (<div\r\n                                className='menu-break'\r\n                            />),\r\n                            (<div\r\n                                className='menu-button'\r\n                            >\r\n                                <label\r\n                                    id='debug_check_label'\r\n                                    htmlFor='debug-check'\r\n                                >\r\n                                    Debug\r\n                                </label>\r\n                                <input\r\n                                    name='debug-check'\r\n                                    type='checkbox'\r\n                                    onChange={\r\n                                        (event) => {\r\n                                            let state = this.state;\r\n                                            state.editor.debug.enabled = event.target.checked;\r\n                                            this.setState(state);\r\n                                        }\r\n                                    }\r\n                                />\r\n                            </div>)\r\n                        ]}\r\n                        id='file_menu'\r\n                        hidden={true}\r\n                    />)\r\n                },\r\n                {\r\n                    key: \"Edit\",\r\n                    id: 'edit_menu',\r\n                    value: (<Menu\r\n                        content={[\r\n                            (<div\r\n                                className='menu-button'\r\n                                onClick={\r\n                                    () => this.state.editor.image.clear()\r\n                                }\r\n                            >\r\n                                Clear\r\n                            </div>)\r\n                        ]}\r\n                        id='edit_menu'\r\n                        hidden={true}\r\n                    />)\r\n                },\r\n                {\r\n                    key: \"View\",\r\n                    id: 'view_menu',\r\n                    value: (\r\n                        <Menu\r\n                            content={[\r\n                                (<div\r\n                                    className='menu-button'\r\n                                    onClick={\r\n                                        () => {\r\n                                            this.state.editor.grid.toggle();\r\n                                        }\r\n                                    }\r\n                                >\r\n                                    Toggle Grid\r\n                                </div>)\r\n                            ]}\r\n                            id='view_menu'\r\n                            hidden={true}\r\n                        />\r\n                    )\r\n                }\r\n            ]\r\n        }\r\n\r\n        this.setResolution = this.setResolution.bind(this);\r\n    }\r\n}","import React from 'react';\r\n\r\nimport './styles/floater.css';\r\n\r\nfunction GetContent(props) {\r\n    return props.content();\r\n}\r\n\r\n/**\r\n * \r\n * @param {MouseEvent} event \r\n * @param {{x: number, y: number} | null} moving \r\n * @param {HTMLElement} container \r\n * @returns \r\n */\r\nfunction move (event, moving, container) {\r\n    if (moving === null)\r\n        return;\r\n\r\n    let x = event.clientX - moving.x;\r\n    let y = event.clientY - moving.y;\r\n    let bounds = container.getBoundingClientRect();\r\n    let parentBounds = container.parentElement.getBoundingClientRect();\r\n\r\n    if (x > parentBounds.left && x + bounds.width < parentBounds.right)\r\n        container.style.left = `${x}px`;\r\n    if (y > parentBounds.top && y + bounds.height < parentBounds.bottom)\r\n        container.style.top = `${y}px`;\r\n}\r\n\r\nfunction _(props) {\r\n    const id = props.id;\r\n    const content = props.content;\r\n    let moving = null;\r\n    let container = document.getElementById(id);\r\n\r\n    return (\r\n        <div\r\n            className='floater-container'\r\n            id={id}\r\n            onMouseDown={(event) => {\r\n                let bounds = container.getBoundingClientRect();\r\n\r\n                let mx = event.clientX - bounds.x;\r\n                let my = event.clientY - bounds.y;\r\n\r\n                if (my > 16)\r\n                    return;\r\n\r\n                moving = { x: mx, y: my };\r\n            }}\r\n            onMouseUp={() => {\r\n                moving = null;\r\n            }}\r\n            onMouseMove={(event) => move(event, moving, container)}\r\n        >\r\n            <GetContent content={content} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default _;","export default __webpack_public_path__ + \"static/media/pencil.e99a4c16.svg\";","import React from \"react\";\r\n\r\nimport './styles/brushes.css';\r\n\r\nimport Floater from \"../fragments/Floater\";\r\n\r\nimport pencil from '../../assets/pencil.svg';\r\nimport paintbrush from '../../assets/paintbrush.svg';\r\nimport eraser from '../../assets/eraser.svg';\r\n\r\nconst brushes = [\r\n    {\r\n        key: 'pencil',\r\n        icon: pencil\r\n    },\r\n    {\r\n        key: 'paint',\r\n        icon: paintbrush\r\n    },\r\n    {\r\n        key: 'eraser',\r\n        icon: eraser\r\n    },\r\n    {\r\n        key: 'fill',\r\n        icon: pencil\r\n    },\r\n    {\r\n        key: 'color-picker',\r\n        icon: pencil\r\n    }\r\n];\r\n\r\nexport default class Brushes extends React.Component {\r\n\r\n    state = {\r\n        editor: null,\r\n        brush: null\r\n    };\r\n\r\n    content = () => {\r\n        return (\r\n            <div\r\n                className='brushes-container'\r\n            >\r\n                {brushes.map(brush => (\r\n                    <img\r\n                        key={brush.key}\r\n                        src={brush.icon}\r\n                        className={`brush-icon${this.state.brush.getStyle() === brush.key ? ' brush-selected' : ''}`}\r\n                        id={`${brush.key}_brush`}\r\n                        alt={brush.key}\r\n                        onClick={\r\n                            () => {\r\n                                let style = this.state.brush.getStyle();\r\n                                document.getElementById(`${style}_brush`).classList.remove('brush-selected');\r\n                                this.state.brush.setStyle(brush.key);\r\n                                document.getElementById(`${brush.key}_brush`).classList.add('brush-selected');\r\n                            }\r\n                        }\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <Floater\r\n                id='brushes_container'\r\n                content={this.content}\r\n            />\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state.editor = props.editor;\r\n        this.state.brush = props.editor.brush;\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/paintbrush.f6d07354.svg\";","export default __webpack_public_path__ + \"static/media/eraser.4da23591.svg\";","function _(controls) {\r\n    if (controls === null)\r\n        return console.error('Collapsable div was null.');\r\n    controls.style.maxHeight = !controls.style.maxHeight ? controls.scrollHeight + 'px' : null;\r\n}\r\n\r\nexport default _;","import React from 'react';\r\n\r\nimport './styles/collapsable.css';\r\n\r\nimport collapseController from '../../app/common/collapseController';\r\n\r\nfunction GetContent(props) {\r\n    return props.content();\r\n}\r\n\r\nfunction _(props) {\r\n    const id = props.id;\r\n    const content = props.content;\r\n    let container = document.getElementById(id);\r\n\r\n    return (\r\n        <div\r\n            className='collapsable-container-wrapper'\r\n            onLoad={\r\n                () => {\r\n                    let con = document.getElementById(id);\r\n                    con.style.maxHeight = con.scrollHeight + 'px';\r\n                }\r\n            }\r\n        >\r\n            <div \r\n                className='collapsable-container-group container-group'\r\n                id={id}\r\n            >\r\n                <GetContent content={content} />\r\n            </div>\r\n            <div\r\n                className='collapsable-container-group-trigger'\r\n                onClick={\r\n                    () => {\r\n                        collapseController(container)\r\n                    }\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default _;","import React from 'react';\r\n\r\nimport Collapsable from '../../fragments/Collapsable';\r\n\r\nimport * as colorize from '../../../app/texture-editor/helpers/colorize';\r\n\r\nimport '../styles/side-bar/colors.css';\r\n\r\nexport default class ColorSettings extends React.Component {\r\n    state = {\r\n        brush: null\r\n    }\r\n\r\n    updateColor;\r\n\r\n    previewElem = null;\r\n    container = null;\r\n\r\n    updatePreview = () => {\r\n        let rgba = this.state.brush.getColor();\r\n        this.previewElem.style.backgroundColor = `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a / 255})`;\r\n    }\r\n\r\n    updateRgb = () => {\r\n        let color = this.state.brush.getColor();\r\n\r\n        ['r', 'g', 'b', 'a'].forEach(k => {\r\n            document.getElementById(`rgb_${k}`).value = color[k];\r\n            document.getElementById(`rgb_${k}_slider`).value = color[k];\r\n        });\r\n    }\r\n\r\n    updateHex = () => {\r\n        let hex = colorize.rgbToHexString(document.getElementById('rgb_r').value, document.getElementById('rgb_g').value, document.getElementById('rgb_b').value, document.getElementById('rgb_a').value);\r\n        document.getElementById('hex').value = hex;\r\n    }\r\n\r\n    fetchDisplayColor = () => {\r\n        return {\r\n            r: document.getElementById('rgb_r').value,\r\n            g: document.getElementById('rgb_g').value,\r\n            b: document.getElementById('rgb_b').value,\r\n            a: document.getElementById('rgb_a').value\r\n        }\r\n    }\r\n\r\n    refresh = () => {\r\n        this.previewElem = document.getElementById('color_picker_preview');\r\n        this.container = document.getElementById('color_picker_controls_container');\r\n    }\r\n\r\n    update = () => {\r\n        this.updateRgb();\r\n        this.updatePreview();\r\n        this.updateHex();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n\r\n        this.updatePreview();\r\n    }\r\n\r\n    rgbControls = () => {\r\n        return (\r\n            <div\r\n                className='rgb-container-wrapper'\r\n            >\r\n                {['r', 'g', 'b', 'a'].map(v => (\r\n                    <div\r\n                        key={`rgb_${v}_div`}\r\n                        className='rgb-input-container'\r\n                    >\r\n                        <div\r\n                            htmlFor={`rgb_${v}`}\r\n                            className='rgb-input-label'\r\n                        >\r\n                            {v.toUpperCase()}\r\n                        </div>\r\n\r\n                        <input\r\n                            key={`${v}_slider`}\r\n                            name={`rgb_${v}_slider`}\r\n                            id={`rgb_${v}_slider`}\r\n                            type='range'\r\n                            min='0'\r\n                            max='255'\r\n                            className='rgb-input-slider'\r\n                            onChange={\r\n                                (event) => {\r\n                                    document.getElementById(`rgb_${v}`).value = event.target.value;\r\n                                    this.updateColor(this.fetchDisplayColor());\r\n                                    this.updatePreview();\r\n                                    this.updateHex();\r\n                                }\r\n                            }\r\n                            defaultValue={v === 'a' ? 255 : 0} \r\n                        />\r\n\r\n                        <input\r\n                            key={v}\r\n                            name={`rgb_${v}`}\r\n                            id={`rgb_${v}`}\r\n                            type='text'\r\n                            className='rgb-input-field'\r\n                            placeholder='0'\r\n                            onChange={\r\n                                (event) => {\r\n                                    this.updateColor(this.fetchDisplayColor());\r\n                                    this.updatePreview();\r\n                                    this.updateHex();\r\n                                }\r\n                            }\r\n                            onKeyPress={\r\n                                (event) => {\r\n                                    if (!event.key.match(/[0-9]/))\r\n                                        event.preventDefault();\r\n                                }\r\n                            }\r\n                            defaultValue={v === 'a' ? 255 : ''}\r\n                        />\r\n                    </div>\r\n                ))}\r\n\r\n                <input\r\n                    name='hex'\r\n                    id='hex'\r\n                    type='text'\r\n                    className='hex-input-field'\r\n                    placeholder='000000ff'\r\n                    onChange={\r\n                        (event) => {\r\n                            let rgba = colorize.hexToRgb(event.target.value);\r\n\r\n                            for (let k in rgba)\r\n                                document.getElementById(`rgb_${k}`).value = rgba[k];\r\n\r\n                            this.updateColor(this.fetchDisplayColor());\r\n                            this.updatePreview();\r\n                        }\r\n                    }\r\n                    onKeyPress={\r\n                        (event) => {\r\n                            if (!event.key.match(/[0-9A-Fa-f]/) || event.target.value.length >= 8)\r\n                                event.preventDefault();\r\n                        }\r\n                    }\r\n                    defaultValue='000000ff'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='floater-group'\r\n            >\r\n                <div\r\n                    className='container-group'\r\n                    id='color_picker_preview_container'\r\n                >\r\n                    <div\r\n                        className='color-picker-preview'\r\n                        id='color_picker_preview'\r\n                    />\r\n                    <div\r\n                        className='brush-size-preview'\r\n                        id='brush_size_preview'\r\n                    />\r\n                    <input\r\n                        className='brush-size-input'\r\n                        id='brush_size_input'\r\n                        type='text'\r\n                        defaultValue={1}\r\n                        onChange={\r\n                            (event) => {\r\n                                this.state.brush.setSize(Number(event.target.value));\r\n                            }\r\n                        }\r\n                        onKeyPress={\r\n                            (event) => {\r\n                                if (event.key.match(/[0-9]/) === null)\r\n                                    event.preventDefault();\r\n                            }\r\n                        }\r\n                    />\r\n                </div>\r\n\r\n                <Collapsable\r\n                    id='color_picker_container'\r\n                    content={this.rgbControls}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state.brush = props.brush;\r\n        this.state.brush.preview = this;\r\n\r\n        this.updateColor = props.updateColor.bind(this);\r\n        \r\n        this.fetchDisplayColor = this.fetchDisplayColor.bind(this);\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/eye-open.157d1f69.svg\";","export default __webpack_public_path__ + \"static/media/minus.e3517047.svg\";","import React from 'react';\r\n\r\nimport Collapsable from '../../fragments/Collapsable';\r\n\r\nimport eye_open from '../../../assets/eye-open.svg';\r\nimport minus from '../../../assets/minus.svg';\r\n\r\nimport '../styles/side-bar/layers.css';\r\n\r\nexport default class LayerSettings extends React.Component {\r\n    state = {\r\n        layers: null\r\n    }\r\n\r\n    container = null;\r\n\r\n    updateActiveLayer = (layer) => {\r\n        let state = this.state;\r\n\r\n        document.getElementById(`layer_${state.layers.active}`).classList.remove('layer-item-selected');\r\n        document.getElementById(`layer_${layer}`).classList.add('layer-item-selected');\r\n\r\n        state.layers.active = layer;\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    updateLayerViewable = (index) => {\r\n        let state = this.state;\r\n\r\n        state.layers.get(index).toggle();\r\n\r\n        document.getElementById(`layer_${index}_viewable`).classList.toggle('layer-item-viewable');\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    layerMovementButtons = (index, max) => {\r\n        return (\r\n            <div\r\n                className='layer-item-movement-group'\r\n            >\r\n                <div\r\n                    id='layer_item_move_up'\r\n                    className={`layer-item-movement-button${index === 0 ? ' hidden' : ''}`}\r\n                    onClick={\r\n                        () => {\r\n                            let state = this.state;\r\n                            state.layers.move(index, index - 1);\r\n                            this.setState(state);\r\n                            this.updateActiveLayer(index - 1);\r\n                        }\r\n                    }\r\n                >\r\n                    /\\\r\n                </div>\r\n                <div\r\n                    id='layer_item_move_down'\r\n                    className={`layer-item-movement-button${index === max ? ' hidden' : ''}`}\r\n                    onClick={\r\n                        () => {\r\n                            let state = this.state;\r\n                            state.layers.move(index, index + 1);\r\n                            this.setState(state);\r\n                            this.updateActiveLayer(index + 1);\r\n                        }\r\n                    }\r\n                >\r\n                    \\/\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.container = document.getElementById('layers_controls_container');\r\n    }\r\n\r\n    layerControls = () => {\r\n        return (\r\n            <div\r\n                className='layers-container'\r\n            >\r\n                {\r\n                    this.state.layers.cache.map((layer, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className={`layer-item${index === this.state.layers.active ? ' layer-item-selected' : ''}`}\r\n                            id={`layer_${index}`}\r\n                            onClick={\r\n                                (event) => {\r\n                                    // if (event.target.childNodes > 0)\r\n                                        this.updateActiveLayer(index);\r\n                                }\r\n                            }\r\n                        >\r\n                            {this.layerMovementButtons(index, this.state.layers.cache.length - 1)}\r\n                            <input\r\n                                type='text'\r\n                                className='layer-item-title'\r\n                                placeholder={`Layer ${index + 1}`}\r\n                                value={layer.name}\r\n                                onChange={\r\n                                    (event) => {\r\n                                        let state = this.state;\r\n                                        state.layers.get(index).name = event.target.value;\r\n                                        this.setState(state);\r\n                                    }\r\n                                }\r\n                            />\r\n                            <img\r\n                                src={eye_open}\r\n                                alt='Hide'\r\n                                className='layer-item-button'\r\n                                id={`layer_${index}_viewable`}\r\n                                onClick={\r\n                                    () => {\r\n                                        this.updateLayerViewable(index);\r\n                                    }\r\n                                }\r\n                            />\r\n                            <img\r\n                                src={minus}\r\n                                alt='Remove'\r\n                                className='layer-item-button'\r\n                                onClick={\r\n                                    () => {\r\n                                        let state = this.state;\r\n                                        state.layers = state.layers.remove(index);\r\n                                        this.setState(this.state);\r\n                                    }\r\n                                }\r\n                            />\r\n                        </div>\r\n                    ))\r\n                }\r\n                <div\r\n                    className='layer-add-item'\r\n                    onClick={\r\n                        () => {\r\n                            this.state.layers.add();\r\n                            this.setState(this.state);\r\n                        }\r\n                    }\r\n                >\r\n                    Add Layer\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='floater-group'\r\n            >\r\n                <Collapsable\r\n                    id='layer_container'\r\n                    content={this.layerControls}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state.layers = props.layers;\r\n\r\n        this.updateActiveLayer = this.updateActiveLayer.bind(this);\r\n        this.updateLayerViewable = this.updateLayerViewable.bind(this);\r\n        this.layerMovementButtons = this.layerMovementButtons.bind(this);\r\n    }\r\n}","import React from \"react\";\r\n\r\nimport './styles/debug.css';\r\n\r\nimport Floater from \"../fragments/Floater\";\r\nimport ColorSettings from \"./side-bar/ColorSettings\";\r\nimport LayerSettings from \"./side-bar/LayerSettings\";\r\n\r\nexport default class SideBar extends React.Component {\r\n\r\n    state = {\r\n        editor: null,\r\n        brush: null,\r\n        layers: null,\r\n        /**\r\n         * @type {HTMLElement}\r\n        */\r\n        container: null,\r\n        /**\r\n         * @type {DOMRect}\r\n         */\r\n        origin: null,\r\n        moving: null,\r\n    }\r\n\r\n    updateColor;\r\n\r\n    content = () => {\r\n        const list = [\r\n            {\r\n                key: 'Colors',\r\n                value: (\r\n                    <ColorSettings\r\n                        updateColor={this.updateColor}\r\n                        brush={this.state.brush}\r\n                    />\r\n                )\r\n            },\r\n            {\r\n                key: 'Layers',\r\n                value: (\r\n                    <LayerSettings\r\n                        layers={this.state.layers}\r\n                    />\r\n                )\r\n            },\r\n            {\r\n                key: 'Debug',\r\n                value: (\r\n                    <div\r\n                        className='debug'\r\n                        id='debug'\r\n                    />\r\n                )\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <ul\r\n                className='floater-group-list'\r\n            >\r\n                {list.map((item, index) => (\r\n                    <li\r\n                        key={item.key}\r\n                        className='floater-group'\r\n                    >\r\n                        <div\r\n                            className='floater-group-title'\r\n                        >\r\n                            {item.key}\r\n                        </div>\r\n                        {item.value}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let state = this.state;\r\n\r\n        state.container = document.getElementById('side_bar_container');\r\n        state.origin = state.container.parentElement.getBoundingClientRect();\r\n\r\n        state.container.style.left = `${state.origin.width - state.container.getBoundingClientRect().width}px`;\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <Floater\r\n                id='side_bar_container'\r\n                content={this.content}\r\n            />\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state.editor = props.editor;\r\n        this.state.brush = props.editor.brush;\r\n        this.state.layers = props.editor.layers;\r\n        this.updateColor = props.updateColor;\r\n    }\r\n}","import React from 'react';\r\nimport * as PIXI from 'pixi.js';\r\n\r\nimport { editor } from '../../app/texture-editor/editor';\r\n\r\nimport Ribbon from './Ribbon';\r\nimport Brushes from './Brushes';\r\nimport SideBar from './SideBar';\r\n\r\nimport mouse from '../../app/texture-editor/common/Mouse';\r\n\r\nimport './styles/texture-editor.css';\r\n\r\nlet mouseMove_timeout = null;\r\n\r\nexport default class TextureEditor extends React.Component {\r\n    getCanvas() {\r\n        let parent = document.getElementById('texture_editor_wrapper');\r\n        let parentBounds = parent.getBoundingClientRect();\r\n\r\n        let state = this.state;\r\n\r\n        state.app = new PIXI.Application({\r\n            width: parentBounds.width,\r\n            height: parentBounds.height,\r\n            backgroundAlpha: 1\r\n        });\r\n\r\n        state.editor = editor.create(state.app, 16);\r\n\r\n        state.app.view.oncontextmenu = (e) => { e.preventDefault(); e.stopPropagation(); }\r\n        state.app.view.id = \"editor\";\r\n\r\n        state.canvas = state.editor.startup();\r\n\r\n        parent.appendChild(state.canvas);\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCanvas();\r\n        this.state.editor.bounds.update();\r\n\r\n        document.addEventListener('mousemove', (event) => {\r\n            mouse.position.document.x = event.clientX;\r\n            mouse.position.document.y = event.clientY;\r\n\r\n            mouse.position.old = {\r\n                x: Math.floor(mouse.position.x),\r\n                y: Math.floor(mouse.position.y)\r\n            };\r\n\r\n            mouse.position.x = Math.floor(event.clientX - this.state.editor.bounds.value.left);\r\n            mouse.position.y = Math.floor(event.clientY - this.state.editor.bounds.value.top);\r\n\r\n            mouse.moving = true;\r\n\r\n            if (mouseMove_timeout)\r\n                clearTimeout(mouseMove_timeout);\r\n\r\n            mouseMove_timeout = setTimeout(() => {\r\n                mouse.position.old = {\r\n                    x: Math.floor(mouse.position.x),\r\n                    y: Math.floor(mouse.position.y)\r\n                };\r\n                mouse.moving = false;\r\n            }, 30);\r\n        });\r\n\r\n        this.state.canvas.addEventListener('mousedown', (event) => {\r\n            mouse.button.state = true;\r\n            mouse.button.id = event.button;\r\n        });\r\n\r\n        this.state.canvas.addEventListener('mouseup', () => {\r\n            mouse.button.state = false;\r\n            mouse.button.id = null;\r\n        });\r\n\r\n        this.state.canvas.addEventListener('mouseleave', () => mouse.inBounds = false);\r\n\r\n        this.state.canvas.addEventListener('mouseenter', () => mouse.inBounds = true);\r\n\r\n        this.state.canvas.addEventListener('click', () => mouse.clicked = true);\r\n\r\n        window.addEventListener('resize', () => this.state.editor.bounds.update());\r\n    }\r\n\r\n    fetchBrush() {\r\n        return this.state.editor.brush;\r\n    }\r\n\r\n    updateColor(clr) {\r\n        let state = this.state;\r\n\r\n        let color = state.editor.brush.getColor();\r\n\r\n        for (let k in clr)\r\n            color[k] = clr[k] === '' ? 0 : Number(clr[k]);\r\n\r\n        state.editor.brush.setColor(color);\r\n        \r\n        this.setState(state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className='editor-container'\r\n            >\r\n                <Ribbon\r\n                    editor={this.state.editor}\r\n                />\r\n                \r\n                <div\r\n                    className='texture-editor-container'\r\n                    id='texture_editor_container'\r\n                >\r\n                    <Brushes\r\n                        editor={this.state.editor}\r\n                    />\r\n\r\n                    <SideBar\r\n                        editor={this.state.editor}\r\n                        updateColor={this.updateColor}\r\n                    />\r\n\r\n                    <div\r\n                        className='texture-editor-wrapper'\r\n                        id='texture_editor_wrapper'\r\n                        onWheel={\r\n                            (event) => this.state.editor.zoom(event.deltaY > 0)\r\n                        }\r\n                    />\r\n                </div>\r\n\r\n                <div\r\n                    className='texture-editor-controls'\r\n                >\r\n                    <label\r\n                        htmlFor='texture-name-input'\r\n                    >\r\n                        File name:\r\n                    </label>\r\n                    <input\r\n                        type='text'\r\n                        name='texture-name-input'\r\n                        id='image_name'\r\n                        defaultValue='texture'\r\n                        onKeyPress={\r\n                            (event) => {\r\n                                if (!event.key.match(/[\\w\\d.()]/))\r\n                                    event.preventDefault();\r\n                            }\r\n                        }\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            app: null,\r\n                /**\r\n                 * @type {HTMLElement}\r\n                 */\r\n                canvas: null,\r\n                    doBoundUpdate: true,\r\n                        editor\r\n        }\r\n\r\n        this.updateColor = this.updateColor.bind(this);\r\n        this.fetchBrush = this.fetchBrush.bind(this);\r\n    }\r\n}","import JSZip from 'jszip';\r\n\r\nexport class FSFile {\r\n\r\n    /**\r\n     * \r\n     * @returns {File}\r\n     */\r\n    values() {\r\n        return this.file;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} name \r\n     */\r\n    rename(name) {\r\n        return this.moveTo(this.dir, name);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns {string}\r\n     */\r\n    path() {\r\n        return this.dir.path() + '/' + this.name;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} str \r\n     * @returns {File}\r\n     */\r\n    write(str) {\r\n        this.file = new File([str], this.name, { type: this.file.type });\r\n        return this.file;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {FSDir} dir \r\n     * @param {string} name\r\n     * @returns {FSFile}\r\n     */\r\n    moveTo(dir, name = null) {\r\n        if (this.dir !== null)\r\n            delete this.dir.content[this.name];\r\n\r\n        if (name !== null) {\r\n            this.name = name;\r\n            this.file = new File([this.file], this.name, { type: this.file.type });\r\n        }\r\n\r\n        this.dir = dir;\r\n        dir.content[this.name] = this;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} name \r\n     * @param {File} file \r\n     * @param {FSDir} dir\r\n     */\r\n    constructor(name, file, dir) {\r\n        this.name = name;\r\n        this.file = file;\r\n        this.dir = dir;\r\n    }\r\n}\r\n\r\nexport class FSDir {\r\n    /**\r\n     * \r\n     * @param {string} name \r\n     * @param {File} file \r\n     * @returns \r\n     */\r\n    addFile(name, file, overwrite = false) {\r\n        let n = name;\r\n\r\n        if (!!this.content[n] && !overwrite) {\r\n            let i = 1;\r\n            let m = n.match(/(.*?)(\\.[a-zA-Z0-9]+)/);\r\n            while (!!this.content[n]) {\r\n                n = m[1] + `(${i})` + m[2];\r\n                i++;\r\n            }\r\n        }\r\n\r\n        this.content[n] = new FSFile(n, new File([file], n, { type: file.type }), this);\r\n\r\n        return this.content[n];\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} name \r\n     * @returns {FSFile}\r\n     */\r\n    getFile(name) {\r\n        return (this.content[name] !== undefined && this.content[name].content === undefined)\r\n            ? this.content[name]\r\n            : null;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} name \r\n     */\r\n    deleteFile(name) {\r\n        delete this.content[name];\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} name \r\n     * @param {FSDir} dir\r\n     * @returns {FSDir}\r\n     */\r\n    addDir(name, dir = null, overwrite = false) {\r\n        let n = name;\r\n\r\n        if (!!this.content[n] && !overwrite) {\r\n            let i = 1;\r\n            while (!!this.content[n]) {\r\n                n = name + `(${i})`;\r\n                i++;\r\n            }\r\n        }\r\n\r\n        if (dir !== null)\r\n            this.content[n] = dir.moveTo(this, n);\r\n        else\r\n            this.content[n] = new FSDir(n, this);\r\n\r\n        return this.content[n];\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} name \r\n     * @returns {FSDir}\r\n     */\r\n    getDir(name) {\r\n        return (this.content[name] !== undefined && this.content[name].content !== undefined)\r\n            ? this.content[name]\r\n            : null;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {name} name \r\n     */\r\n    deleteDir(name) {\r\n        delete this.content[name];\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    contains(name) {\r\n        return !!this.content[name];\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns \r\n     */\r\n    values() {\r\n        let arr = [];\r\n        for (let i in this.content)\r\n            arr.push(this.content[i].values());\r\n\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} name \r\n     * @returns {FSDir}\r\n     */\r\n    rename(name) {\r\n        return this.moveTo(this.dir, name);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {FSDir} dir \r\n     * @param {string} name\r\n     * @returns {FSDir}\r\n     */\r\n    moveTo(dir, name = null) {\r\n        if (this.dir !== null)\r\n            delete this.dir.content[this.name];\r\n\r\n        if (name !== null)\r\n            this.name = name;\r\n\r\n        this.dir = dir;\r\n        dir.content[this.name] = this;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns {string}\r\n     */\r\n    path() {\r\n        return (this.dir === null ? '' : this.dir.path() + '/') + this.name;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} name \r\n     * @param {FSDir} dir\r\n     */\r\n    constructor(name, dir = null) {\r\n        this.name = name;\r\n        this.dir = dir;\r\n\r\n        this.content = {};\r\n    }\r\n}\r\n\r\nfunction recurDir(dir, list) {\r\n    if (!!dir.content) {\r\n        for (let i in dir.content) {\r\n            if (!!dir.content[i].content)\r\n                list = recurDir(dir.content[i], list);\r\n            else\r\n                list[dir.content[i].path()] = dir.content[i].file;\r\n        }\r\n    }\r\n\r\n    return list;\r\n}\r\n\r\nexport default class FSManager {\r\n\r\n    values() {\r\n        return this.root.values();\r\n    }\r\n\r\n    async compress() {\r\n        const zip = new JSZip();\r\n\r\n        let v = recurDir(this.root, {});\r\n\r\n        for (let p in v)\r\n            zip.file(p, await v[p]);\r\n\r\n        return zip.generateAsync({ type: 'blob' });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} rootName \r\n     * @returns {FSDir}\r\n     */\r\n    setRoot(rootName) {\r\n        this.root = new FSDir(rootName);\r\n        return this.root;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} path \r\n     * @returns {FSFile}\r\n     */\r\n    fetch(path) {\r\n        if (this.root === null)\r\n            return null;\r\n\r\n        let p = path.split('/');\r\n\r\n        if (p[0] === this.root.name)\r\n            p.shift();\r\n\r\n        let d = this.root;\r\n        p.forEach((v, i) => {\r\n            if (i === p.length - 1) {\r\n                d = d.getFile(v);\r\n                return;\r\n            }\r\n            else if (!d.content) {\r\n                d = null;\r\n                return;\r\n            }\r\n\r\n            if (d.contains(v))\r\n                d = d.getDir(v);\r\n        });\r\n\r\n        return d;\r\n    }\r\n\r\n    fetchDir(path) {\r\n        if (this.root === null)\r\n            return null;\r\n\r\n        let p = path.split('/');\r\n\r\n        if (p[0] === this.root.name)\r\n            p.shift();\r\n\r\n        let d = this.root;\r\n        p.forEach((v, i) => {\r\n            if (i === p.length - 1) {\r\n                d = d.getDir(v);\r\n                return;\r\n            }\r\n            else if (!d.content) {\r\n                d = null;\r\n                return;\r\n            }\r\n\r\n            if (d.contains(v))\r\n                d = d.getDir(v);\r\n        });\r\n\r\n        return d;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} path \r\n     * @param {string} name \r\n     * @param {File} file \r\n     * @returns {FSFile}\r\n     */\r\n    set(path, name, file) {\r\n        let p = path.split('/');\r\n\r\n        if (p[0] === this.root.name)\r\n            p.shift();\r\n\r\n        let d = this.root;\r\n        let l = p.length - 1;\r\n        let f = null;\r\n\r\n        for (let i in p) {\r\n            if (Number(i) === l && d !== null)\r\n                f = d.addFile(name, file, true);\r\n            else {\r\n                if (d.contains(p[i]))\r\n                    d = d.getDir(p[i]);\r\n                else\r\n                    d = d.addDir(p[i]);\r\n            }\r\n        }\r\n\r\n        return f;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} rootName \r\n     */\r\n    constructor(rootName = null) {\r\n        this.root = rootName === null ? null : new FSDir(rootName);\r\n    }\r\n}","import React from 'react';\r\n\r\nimport './styles/ribbon.css';\r\n\r\nexport default class Ribbon extends React.Component {\r\n    componentDidMount() {\r\n        let ribbonContent = [];\r\n\r\n        this.state.content.forEach(item => ribbonContent.push(document.getElementById(item.id)));\r\n\r\n        document.addEventListener('click', (event) => {\r\n            ribbonContent.forEach(obj => {\r\n                if (!obj.parentElement.contains(event.target))\r\n                    obj.classList.add('hidden');\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className='texture-editor-ribbon'\r\n            >\r\n                {this.state.content.map(menu => (\r\n                    <div\r\n                        key={menu.key}\r\n                        className='ribbon-menu'\r\n                    >\r\n                        <div\r\n                            className='ribbon-menu-button'\r\n                            onClick={\r\n                                () => {\r\n                                    document.getElementById(menu.id).classList.toggle('hidden');\r\n                                }\r\n                            }\r\n                        >\r\n                            {menu.key}\r\n                        </div>\r\n\r\n                        {menu.value}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {{content: {key: string, value: JSX, id: string}[]}} props Value should be JSX or string.\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            content: props.content\r\n        };\r\n    }\r\n}","/**\r\n * \r\n * @param {string} original \r\n * @param {string} str \r\n * @param {number} index \r\n */\r\nexport function splice(original, str, index) {\r\n    return original.slice(0, index) + str + original.slice(index, original.length);\r\n}\r\n\r\n/**\r\n * \r\n * @param {string} str \r\n * @param {number} start \r\n * @param {number} stop \r\n * @returns {string}\r\n */\r\nexport function del(str, start, stop) {\r\n    if (stop < start)\r\n        return str;\r\n\r\n    return str.slice(0, start) + str.slice(stop, str.length);\r\n}","/**\r\n * \r\n * @param {string} str\r\n * @param {string} tag \r\n * @returns {number}\r\n */\r\nexport function getIndex(str, tag) {\r\n    return str.indexOf(tag) + tag.length;\r\n}\r\n\r\nconst tabSize = 4;\r\nconst libVersion = '1.6';\r\n\r\nconst tagList = {\r\n    'org_name': /%org_name%/g,\r\n    'mod_name': /%mod_name%/g,\r\n    'mod_name_lc': /%mod_name_lc%/g\r\n};\r\n\r\nconst autoTagList = {\r\n    'tab': {\r\n        r: /%tab_(\\d+)%/,\r\n        f: (n) => { return ' '.repeat(n * tabSize); }\r\n    },\r\n    'libRepo': {\r\n        r: /%lib_repo_url%/,\r\n        f: (v) => {\r\n            let version = v || '1.16.5';\r\n            return `https://raw.githubusercontent.com/ChrisOfNormandy/CoNLib/${version}`;\r\n        }\r\n    },\r\n    'libVersion': {\r\n        r: /%lib_version%/,\r\n        f: (v) => { return !!v ? v : libVersion; }\r\n    }\r\n};\r\n\r\n/**\r\n * \r\n * @param {string} str \r\n * @param {{org_name: string, mod_name: string}}\r\n * @returns {string}\r\n */\r\nexport function replTags(str, options = {}) {\r\n    let s = str;\r\n\r\n    if (options.org_name !== undefined)\r\n        s = s.replace(tagList.org_name, options.org_name);\r\n\r\n    if (options.mod_name !== undefined) {\r\n        s = s\r\n            .replace(tagList.mod_name, options.mod_name)\r\n            .replace(tagList.mod_name_lc, options.mod_name.toLowerCase());\r\n    }\r\n\r\n    let m = null;\r\n    for (let tag in autoTagList) {\r\n        m = s.match(autoTagList[tag].r);\r\n        while (m !== null) {\r\n            s = s.replace(m[0], autoTagList[tag].f(m[1]));\r\n            m = s.match(autoTagList[tag].r);\r\n        }\r\n    }\r\n\r\n    return s;\r\n}","import FSManager from \"../../../app/common/FileSystem\";\r\n\r\nimport * as stringUtil from '../../../helpers/stringUtil';\r\nimport * as tags from './tags';\r\n\r\nimport replList from './repl-list.json';\r\n\r\nconst tabSize = 4;\r\n\r\n/**\r\n * \r\n * @param {FSManager} archive \r\n * @returns {Promise<{archive: FSManager, modName: string, orgName: string}>}\r\n */\r\nexport function examplemod(archive) {\r\n    let src_main_java_com = archive.fetchDir('src/main/java/com');\r\n\r\n    if (src_main_java_com === null)\r\n        return Promise.reject(new Error(`Failed to fetch file: 'src/main/java/com'`));\r\n\r\n    let orgName = prompt('Organization (or your name)', 'myorg').toLowerCase() || 'myorg';\r\n    const modName = prompt('Mod name', 'MyMod').replace(/[^a-zA-Z0-9]/g, '') || 'MyMod';\r\n\r\n    return new Promise((resolve, reject) => {\r\n        let modMain = src_main_java_com\r\n            .getDir('example').rename(orgName)\r\n            .getDir('examplemod').rename(modName.toLowerCase())\r\n            .getFile('ExampleMod.java').rename(modName + '.java');\r\n\r\n        modMain.file.text()\r\n            .then(fileData => {\r\n                let content = fileData;\r\n                const repl = replList.tags;\r\n\r\n                for (let r in repl)\r\n                    content = content.replace(repl[r].from, repl[r].to);\r\n\r\n                let ind = 0;\r\n                const tagOptions = { mod_name: modName, org_name: orgName };\r\n\r\n                content = tags.replTags(content, tagOptions);\r\n\r\n                let constructBody = content.match(new RegExp(`public ${modName}\\\\(\\\\) {\\n([^}]+)}`));\r\n\r\n                content = content.replace(constructBody[1], `${' '.repeat(tabSize * 2)}// ##CON_TAG##\\n${' '.repeat(tabSize)}`);\r\n                \r\n                // Replace pre-contructor body\r\n                ind = tags.getIndex(content, 'LogManager.getLogger();');\r\n                content = stringUtil.splice(content, '\\n' + replList[\"Main.java\"].preConstructorBody.join('\\n'), ind);\r\n\r\n                // Replace constructor body\r\n                ind = tags.getIndex(content, '##CON_TAG##');\r\n                content = stringUtil.splice(content, '\\n' + replList[\"Main.java\"].constructorBody.join('\\n'), ind);\r\n\r\n                content = stringUtil.del(content, content.indexOf(\"private void setup\"), content.indexOf(\"@Mod.EventBusSubscriber(bus=Mod.EventBusSubscriber.Bus.MOD)\"));\r\n\r\n                // Replace imports\r\n                content = tags.replTags(content, tagOptions);\r\n                content = stringUtil.del(content, content.indexOf('import net.minecraft.block.Block;'), content.indexOf(`@Mod(\"${modName.toLowerCase()}\")`));\r\n                content = stringUtil.splice(content, replList[\"Main.java\"].imports.join('\\n') + '\\n', content.indexOf(`@Mod(\"${modName.toLowerCase()}\")`));\r\n\r\n                // Add ModBlocks Init method to block registry event function\r\n                content = stringUtil.splice(content, tags.replTags(replList[\"Main.java\"].blockRegistry.code), tags.getIndex(content, replList[\"Main.java\"].blockRegistry.front));\r\n\r\n                // Create and set file\r\n                modMain.file = new File([content], modMain.file.name, { type: modMain.file.type });\r\n\r\n                modify__buildGradle(archive, modName, orgName)\r\n                    .then(archive => {\r\n                        resolve({\r\n                            archive,\r\n                            modName,\r\n                            orgName\r\n                        });\r\n                    })\r\n                    .catch(err => reject(err));\r\n            })\r\n            .catch(err => reject(err));\r\n    });\r\n}\r\n\r\n/**\r\n * \r\n * @param {FSManager} archive \r\n * @param {string} modName \r\n * @param {string} orgName \r\n * @returns {Promise<FSManager>}\r\n */\r\nfunction modify__buildGradle(archive, modName, orgName) {\r\n    const buildGradle = archive.root.getFile('build.gradle');\r\n    if (buildGradle === null)\r\n        return Promise.reject(new Error('Failed to fetch build.gradle file.'));\r\n\r\n    return new Promise((resolve, reject) => {\r\n        buildGradle.file.text()\r\n            .then(fileData => {\r\n                let content = fileData;\r\n\r\n                content = stringUtil.splice(content, replList[\"build.gradle\"].repositories.data.join('\\n'), tags.getIndex(content, replList[\"build.gradle\"].repositories.tag));\r\n                content = stringUtil.splice(content, replList[\"build.gradle\"].dependencies.data, tags.getIndex(content, replList[\"build.gradle\"].dependencies.tag));\r\n\r\n                content = content.replace(replList[\"build.gradle\"].group.from, replList[\"build.gradle\"].group.to);\r\n                content = content.replace(replList[\"build.gradle\"].archivesBaseName.from, replList[\"build.gradle\"].archivesBaseName.to);\r\n                content = content.replace(replList[\"build.gradle\"][\"Specification-Title\"].from, replList[\"build.gradle\"][\"Specification-Title\"].to);\r\n                content = content.replace(replList[\"build.gradle\"][\"Specification-Vendor\"].from, replList[\"build.gradle\"][\"Specification-Vendor\"].to);\r\n                content = content.replace(replList[\"build.gradle\"][\"Implementation-Vendor\"].from, replList[\"build.gradle\"][\"Implementation-Vendor\"].to);\r\n                content = content.replace(replList[\"build.gradle\"].reobf.from, replList[\"build.gradle\"].reobf.to);\r\n\r\n                content = tags.replTags(content, { mod_name: modName, org_name: orgName });\r\n\r\n                buildGradle.file = new File([content], buildGradle.file.name, { type: buildGradle.file.type });\r\n\r\n                packMcMeta(archive, modName, orgName)\r\n                    .then(archive => resolve(archive))\r\n                    .catch(err => reject(err));\r\n            })\r\n            .catch(err => reject(err));\r\n    });\r\n}\r\n\r\n/**\r\n * \r\n * @param {FSManager} archive \r\n * @param {string} modName \r\n * @param {string} orgName \r\n * @returns {Promise<FSManager>}\r\n */\r\nfunction packMcMeta(archive, modName, orgName) {\r\n    const packFile = archive.fetch('src/main/resources/pack.mcmeta');\r\n    if (packFile === null)\r\n        return Promise.reject(new Error('Failed to fetch pack.mcmeta file.'));\r\n\r\n    return new Promise((resolve, reject) => {\r\n        packFile.file.text()\r\n            .then(fileData => {\r\n                let content = fileData;\r\n\r\n                for (let i in replList.packMcMeta)\r\n                    content = content.replace(replList.packMcMeta[i].from, replList.packMcMeta[i].to);\r\n\r\n                content = tags.replTags(content, { mod_name: modName, org_name: orgName });\r\n\r\n                packFile.file = new File([content], packFile.file.name, { type: packFile.file.type });\r\n\r\n                modsToml(archive, modName, orgName)\r\n                    .then(archive => resolve(archive))\r\n                    .catch(err => reject(err));\r\n            })\r\n            .catch(err => reject(err));\r\n    });\r\n}\r\n\r\n/**\r\n * \r\n * @param {FSManager} archive \r\n * @param {string} modName \r\n * @param {string} orgName \r\n * @returns {Promise<FSManager>}\r\n */\r\nfunction modsToml(archive, modName, orgName) {\r\n    const modsTomlFile = archive.fetch('src/main/resources/META-INF/mods.toml');\r\n    if (modsTomlFile === null)\r\n        return Promise.reject(new Error('Failed to fetch mods.toml file.'));\r\n\r\n    return new Promise((resolve, reject) => {\r\n        modsTomlFile.file.text()\r\n            .then(fileData => {\r\n                let content = fileData;\r\n\r\n                for (let i in replList.modsToml)\r\n                    content = content.replace(replList.modsToml[i].from, replList.modsToml[i].to);\r\n\r\n                content += replList.modsTomlDependency.join('\\n');\r\n\r\n                content = tags.replTags(content, { mod_name: modName, org_name: orgName });\r\n\r\n\r\n                modsTomlFile.file = new File([content], modsTomlFile.file.name, { type: modsTomlFile.file.type });\r\n\r\n                modBlocks(archive, modName, orgName)\r\n                    .then(archive => resolve(archive))\r\n                    .catch(err => reject(err));\r\n            })\r\n            .catch(err => reject(err));\r\n    });\r\n}\r\n\r\n/**\r\n * \r\n * @param {FSManager} archive \r\n * @param {string} modName \r\n * @param {string} orgName \r\n * @returns {Promise<FSManager>}\r\n */\r\nfunction modBlocks(archive, modName, orgName) {\r\n    let src_main_java_com = archive.fetchDir('src/main/java/com');\r\n\r\n    const modDir = src_main_java_com.getDir(orgName).getDir(modName.toLowerCase());\r\n\r\n    return new Promise((resolve, reject) => {\r\n        let content = replList[\"ModBlocks.java\"].data.join('\\n');\r\n\r\n        content = tags.replTags(content, { mod_name: modName, org_name: orgName });\r\n\r\n        modDir.addFile('ModBlocks.java', new File([content], \"ModBlocks.java\", { type: src_main_java_com.getDir(orgName).getDir(modName.toLowerCase()).getFile(modName + \".java\").file.type }));\r\n\r\n        resolve(archive);\r\n    });\r\n}","import React from \"react\";\r\n\r\nimport './styles/context-menu.css';\r\n\r\nexport default class ContextMenu extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const menu = document.getElementById('context_menu');\r\n        if (menu === null)\r\n            return;\r\n\r\n        menu.style.top = this.state.position.y + 'px';\r\n        menu.style.left = this.state.position.x + 'px';\r\n    }\r\n\r\n    render() {\r\n        return this.state.menuItems.length > 0\r\n            ? (\r\n                <ul\r\n                    id='context_menu'\r\n                    className='context-menu'\r\n                >\r\n                    {this.state.menuItems.map((v, i) => (\r\n                        <li\r\n                            key={i}\r\n                            className='context-menu-item'\r\n                            onClick={\r\n                                () => {\r\n                                    v.action();\r\n                                    this.setState(this.state);\r\n                                }\r\n                            }\r\n                        >\r\n                            {v.markup}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )\r\n            : null;\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\"New context menu.\", props.menuItems.length);\r\n\r\n        this.state = {\r\n            position: props.position,\r\n            menuItems: props.menuItems || []\r\n        };\r\n    }\r\n}","import React from \"react\";\r\n\r\nimport { uniqueId } from \"lodash\";\r\nimport ContextMenu from \"../fragments/ContextMenu\";\r\nimport FSManager, { FSFile, FSDir } from \"../../app/common/FileSystem\";\r\n\r\nlet dirTracker = {};\r\n\r\nexport default class FileExplorer extends React.Component {\r\n\r\n    /**\r\n     * \r\n     * @param {React.DragEvent<HTMLLIElement>} event \r\n     * @param {FSDir} dir \r\n     */\r\n    dropHandler(event, dir) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const handleFileAppend = async () => {\r\n            let state = this.state;\r\n\r\n            let files = [];\r\n\r\n            if (event.dataTransfer.items.length) {\r\n                for (let i in event.dataTransfer.items) {\r\n                    const item = event.dataTransfer.items[i];\r\n\r\n                    if (item.kind === 'file')\r\n                        files.push(item.getAsFile());\r\n                }\r\n            }\r\n            else {\r\n                for (let i in event.dataTransfer.files) {\r\n                    const file = event.dataTransfer.files[i];\r\n\r\n                    if (file.kind === 'file')\r\n                        files.push(file);\r\n                }\r\n            }\r\n\r\n            files.forEach(f => dir.addFile(f.name, f));\r\n\r\n            this.setState(state);\r\n        };\r\n\r\n        handleFileAppend();\r\n    }\r\n\r\n    onDragOver(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    onDragLeave(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {FSDir} folder \r\n     * @returns {JSX.Element[]}\r\n     */\r\n    folderCtxMenu(folder) {\r\n        return [\r\n            {\r\n                action: () => {\r\n                    let name = prompt('File name', 'new-file.txt') || 'new-file.txt'\r\n                    folder.addFile(name, new File([], name));\r\n                    this.setState(this.state);\r\n                },\r\n                markup:\r\n                    (\r\n                        <div>\r\n                            New File\r\n                        </div>\r\n                    )\r\n            },\r\n            {\r\n                action: () => {\r\n                    let name = prompt('Folder name', 'New Folder') || 'New Folder'\r\n                    folder.addDir(name);\r\n                    this.setState(this.state);\r\n                },\r\n                markup:\r\n                    (\r\n                        <div>\r\n                            New Folder\r\n                        </div>\r\n                    )\r\n            }\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {FSFile} file \r\n     * @returns {JSX.Element[]}\r\n     */\r\n    fileCtxMenu(file) {\r\n        return [\r\n            {\r\n                action: () => {\r\n                    let name = prompt('File name', file.name) || file.name\r\n                    file.rename(name);\r\n                    this.setState(this.state);\r\n                },\r\n                markup:\r\n                    (\r\n                        <div>\r\n                            Rename\r\n                        </div>\r\n                    )\r\n            }\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {FSFile} f \r\n     * @returns \r\n     */\r\n    createFileObj(f) {\r\n        return (\r\n            <li\r\n                id={f.name}\r\n                key={f.name}\r\n                className='file-explorer-row file-explorer-list-item file-explorer-file-label file-item'\r\n                onDragOver={this.onDragOver}\r\n                onDragLeave={this.onDragLeave}\r\n                onDrop={(e) => {\r\n                    console.log(e.target)\r\n                    this.dropHandler(e, f.dir)\r\n                }}\r\n            >\r\n                <span\r\n                    title={`${f.path()} | Size: ${\r\n                        f.file.size < 1024\r\n                            ? f.file.size + 'B'\r\n                        : f.file.size / 1024 < 1024\r\n                            ? (f.file.size / 1024).toFixed(2) + 'KB'\r\n                            : (f.file.size / (1024 * 1024)).toFixed(2) + 'MB'\r\n                    }`}\r\n                    onClick={\r\n                        () => {\r\n                            f.file.text()\r\n                                .then(v => {\r\n                                    const ta = document.getElementById('txtArea');\r\n                                    const state = this.state;\r\n\r\n                                    if (ta.value === '' || state.currentFile.file === null || ta.value === state.currentFile.text) {\r\n                                        ta.value = v;\r\n\r\n                                        state.currentFile.fsfile = f;\r\n                                        state.currentFile.file = f.file;\r\n                                        state.currentFile.path = f.path();\r\n                                        state.currentFile.text = v.replace(/\\r\\n/g, '\\n');\r\n\r\n                                        document.getElementById('text_area_file_name').value = f.file.name;\r\n\r\n                                        this.setState(state);\r\n                                    }\r\n                                    else\r\n                                        console.log('Unsaved changes.');\r\n                                })\r\n                                .catch(err => console.error(err));\r\n                                \r\n                        }\r\n                    }\r\n                    onContextMenu={\r\n                        (e) => {\r\n                            e.preventDefault();\r\n                            const state = this.state;\r\n                            state.contextMenu = (\r\n                                <ContextMenu\r\n                                    position={\r\n                                        {\r\n                                            x: e.clientX,\r\n                                            y: e.clientY\r\n                                        }\r\n                                    }\r\n                                    menuItems={this.fileCtxMenu(f)}\r\n                                />\r\n                            );\r\n                            this.setState(state);\r\n                        }\r\n                    }\r\n                >\r\n                    {f.name}\r\n                </span>\r\n\r\n                <div\r\n                    className='file-explorer-options'\r\n                >\r\n                    <i\r\n                        id={`${f.name}_delete_button`}\r\n                        className=\"icon bi-file-earmark-x editor-toolbar-icon dir-item-icon\"\r\n                        title='Delete'\r\n                        onClick={\r\n                            () => {\r\n                                const state = this.state;\r\n                                f.dir.deleteFile(f.name);\r\n                                this.setState(state);\r\n                            }\r\n                        }\r\n                    />\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {FSDir} dir \r\n     * @returns \r\n     */\r\n    createFileList(dir) {\r\n        if (dir === null)\r\n            return;\r\n\r\n        if (!!dir.content) {\r\n            let arr = [];\r\n\r\n            for (let i in dir.content) {\r\n                if (!!dir.content[i].content) {\r\n                    let id = uniqueId();\r\n\r\n                    if (dirTracker[id] === undefined)\r\n                        dirTracker[id] = false;\r\n\r\n                    arr.push(\r\n                        (\r\n                            <li\r\n                                className='file-explorer-list-item'\r\n                                key={id}\r\n                                onDragOver={this.onDragOver}\r\n                                onDragLeave={this.onDragLeave}\r\n                                onDrop={(e) => this.dropHandler(e, dir.content[i])}\r\n                            >\r\n                                <div\r\n                                    className='file-explorer-row file-explorer-dir-label dir-item'\r\n                                >\r\n                                    <span\r\n                                        onClick={\r\n                                            () => {\r\n                                                let v = document.getElementById(id)\r\n                                                v.classList.toggle('hidden');\r\n                                                dirTracker[id] = v.classList.contains('hidden');\r\n                                            }\r\n                                        }\r\n                                        onContextMenu={\r\n                                            (e) => {\r\n                                                e.preventDefault();\r\n                                                const state = this.state;\r\n                                                state.contextMenu = (\r\n                                                    <ContextMenu\r\n                                                        position={\r\n                                                            {\r\n                                                                x: e.clientX,\r\n                                                                y: e.clientY\r\n                                                            }\r\n                                                        }\r\n                                                        menuItems={this.folderCtxMenu(dir.content[i])}\r\n                                                    />\r\n                                                );\r\n                                                this.setState(state);\r\n                                            }\r\n                                        }\r\n                                    >\r\n                                        {i}\r\n                                    </span>\r\n\r\n                                    <div\r\n                                        className='file-explorer-options'\r\n                                    >\r\n                                        <i\r\n                                            id={`${id}_new_file_button`}\r\n                                            className=\"icon bi-file-earmark-plus editor-toolbar-icon dir-item-icon\"\r\n                                            title='New File'\r\n                                            onClick={\r\n                                                () => {\r\n                                                    const state = this.state;\r\n                                                    dir.content[i].addFile(\r\n                                                        'new-file.txt',\r\n                                                        new File([], 'new-file.txt')\r\n                                                    );\r\n                                                    this.setState(state);\r\n                                                }\r\n                                            }\r\n                                        />\r\n                                        <i\r\n                                            id={`${id}_new_folder_button`}\r\n                                            className=\"icon bi-folder-plus editor-toolbar-icon dir-item-icon\"\r\n                                            title='New Folder'\r\n                                            onClick={\r\n                                                () => {\r\n                                                    const state = this.state;\r\n                                                    dir.content[i].addDir('new-folder');\r\n                                                    this.setState(state);\r\n                                                }\r\n                                            }\r\n                                        />\r\n                                        <i\r\n                                            id={`${id}_delete_button`}\r\n                                            className=\"icon bi-folder-x editor-toolbar-icon dir-item-icon\"\r\n                                            title='Delete'\r\n                                            onClick={\r\n                                                () => {\r\n                                                    const state = this.state;\r\n                                                    dir.deleteDir(i);\r\n                                                    this.setState(state);\r\n                                                }\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div\r\n                                    id={id}\r\n                                    className={`file-explorer-dir-group ${dirTracker[id] === true ? 'hidden' : ''}`}\r\n                                >\r\n                                    {this.createFileList(dir.content[i])}\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    );\r\n                }\r\n                else\r\n                    arr.push(this.createFileObj(dir.content[i]));\r\n            }\r\n\r\n            return (\r\n                <ul className='file-explorer-list'>\r\n                    {arr.map(v => v)}\r\n                </ul>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <li\r\n                className='file-explorer-list-item'\r\n            >\r\n                {this.createFileObj(dir)}\r\n            </li>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className='sect-file-explorer-list'\r\n                id='sect_file_explorer_list'\r\n                onClick={\r\n                    () => {\r\n                        if (this.state.contextMenu !== null) {\r\n                            let state = this.state;\r\n                            state.contextMenu = null;\r\n                            console.log('FF')\r\n                            this.setState(state);\r\n                        }\r\n                    }\r\n                }\r\n                onDrop={(e) => { this.dropHandler(e, this.state.archive.root) }}\r\n            >\r\n                {this.createFileList(this.state.archive.root)}\r\n                {this.state.contextMenu}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        /**\r\n         * @type {{archive: FSManager, currentFile: {file: File, fsfile: FSFile, path: string, text: string}, contextMenu: ContextMenu}}\r\n         */\r\n        this.state = {\r\n            archive: props.archive,\r\n            currentFile: props.currentFile,\r\n            contextMenu: null\r\n        };\r\n\r\n        this.createFileList = this.createFileList.bind(this);\r\n        this.createFileObj = this.createFileObj.bind(this);\r\n    }\r\n}","import FSManager, { FSDir, FSFile } from \"../../../../../app/common/FileSystem\";\r\n\r\nimport * as tags from '../../tags';\r\nimport * as stringUtil from '../../../../../helpers/stringUtil';\r\n\r\n/**\r\n * \r\n * @param {FSFile} modBlocks \r\n * @param {string} name \r\n * @returns {Promise<FSFile>}\r\n */\r\nexport function create(modBlocks, name) {\r\n    return new Promise((resolve, reject) => {\r\n        modBlocks.file.text()\r\n            .then(fileData => {\r\n                let content = fileData;\r\n\r\n                content = stringUtil.splice(content, `Standard.create(\"${name}\", Properties.copy(Blocks.STONE), ItemGroup.TAB_BUILDING_BLOCKS);\\n%tab_2%`, content.indexOf(\"// ##MB_TAG##\"));\r\n\r\n                content = tags.replTags(content);\r\n\r\n                modBlocks.file = new File([content], modBlocks.file.name, { type: modBlocks.file.type });\r\n\r\n                resolve(modBlocks);\r\n            })\r\n            .catch(err => reject(err));\r\n    });\r\n}","import * as standard from './blocks/standard';\r\n\r\nconst _ = {\r\n    blocks: {\r\n        standard\r\n    }\r\n};\r\n\r\nexport default _;","import React from \"react\";\r\nimport JSZip from 'jszip';\r\nimport FSManager from \"../app/common/FileSystem\";\r\nimport { FSDir } from \"../app/common/FileSystem\";\r\nimport Ribbon from './fragments/Ribbon';\r\nimport Menu from './fragments/Menu';\r\n\r\nimport './mod-builder/styles/main.css';\r\nimport download from \"../app/common/download\";\r\n\r\nimport * as filemod from './mod-builder/scripts/filemod';\r\n\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport FileExplorer from \"./mod-builder/FileExplorer\";\r\n\r\nimport * as contentBuilder from './mod-builder/scripts/content-builder/content-builder';\r\n\r\nconst currentFile = {\r\n    file: null,\r\n    fsfile: null,\r\n    path: '',\r\n    text: ''\r\n};\r\n\r\nconst dev = true;\r\n\r\n/**\r\n * \r\n * @param {string} mcVersion \r\n * @param {string} forgeVersion \r\n * @returns {Promise<JSZip>}\r\n */\r\nfunction fetchForgeZip(mcVersion, forgeVersion) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(dev\r\n            ? `http://localhost:8080/download`\r\n            : `https://maven.minecraftforge.net/net/minecraftforge/forge/${mcVersion}-${forgeVersion}/forge-${mcVersion}-${forgeVersion}-mdk.zip`\r\n        )\r\n            .then(response => {\r\n                const zip = new JSZip();\r\n\r\n                response.blob()\r\n                    .then(mkd => {\r\n                        zip.loadAsync(mkd)\r\n                            .then(zipped => resolve(zipped))\r\n                            .catch(err => reject(err));\r\n                    })\r\n                    .catch(err => reject(err));\r\n            })\r\n            .catch(err => reject(err));\r\n    });\r\n}\r\n\r\nexport default class ModBuilder extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='mod-builder-sect'>\r\n                <div\r\n                    className='sect-container'\r\n                >\r\n                    <div className='nav-wrapper'>\r\n                        <Ribbon content={this.state.buttons} />\r\n                    </div>\r\n\r\n                    <div\r\n                        id='sect_main'\r\n                        className='sect-main'\r\n                    >\r\n                        <div\r\n                            className='sect-file-explorer'\r\n                            id='sect_file_explorer'\r\n                        >\r\n                            <div\r\n                                className='file-explorer-toolbar'\r\n                            >\r\n                                <i\r\n                                    id='editor_new_file_button'\r\n                                    className=\"icon bi-file-earmark-plus editor-toolbar-icon icon-active\"\r\n                                    title='New File'\r\n                                    onClick={\r\n                                        () => {\r\n                                            if (this.state.archive.root === null)\r\n                                                return;\r\n\r\n                                            const state = this.state;\r\n                                            state.archive.root.addFile(\r\n                                                'new-file.txt',\r\n                                                new File([], 'new-file.txt')\r\n                                            );\r\n                                            this.setState(state);\r\n                                        }\r\n                                    }\r\n                                />\r\n                            </div>\r\n\r\n                            <FileExplorer archive={this.state.archive} currentFile={currentFile} />\r\n                        </div>\r\n\r\n                        <div\r\n                            className='sect-text-area'\r\n                        >\r\n                            <textarea\r\n                                id='txtArea'\r\n                                onChange={\r\n                                    (e) => {\r\n                                        if (currentFile.file !== null && e.target.value !== currentFile.text) {\r\n                                            document.getElementById('editor_save_button').classList.add('icon-active');\r\n                                            document.getElementById('editor_discard_button').classList.add('icon-active');\r\n                                        }\r\n                                        else if (e.target.value === currentFile.text) {\r\n                                            document.getElementById('editor_save_button').classList.remove('icon-active');\r\n                                            document.getElementById('editor_discard_button').classList.remove('icon-active');\r\n                                        }\r\n                                    }\r\n                                }\r\n                            />\r\n                            <div\r\n                                className='text-area-toolbar'\r\n                            >\r\n                                <label htmlFor='fileName'>File name:</label>\r\n                                <input\r\n                                    type='text'\r\n                                    name='fileName'\r\n                                    id='text_area_file_name'\r\n                                    onKeyPress={\r\n                                        (e) => {\r\n                                            if (currentFile.file === null)\r\n                                                e.preventDefault();\r\n                                        }\r\n                                    }\r\n                                />\r\n                                <i\r\n                                    id='editor_rename_button'\r\n                                    className=\"icon bi-arrow-return-right editor-toolbar-icon icon-active\"\r\n                                    title='Rename'\r\n                                    onClick={\r\n                                        () => {\r\n                                            if (currentFile.file === null)\r\n                                                return;\r\n\r\n                                            const state = this.state;\r\n                                            state.archive = rename(state.archive);\r\n                                            this.setState(state);\r\n                                        }\r\n                                    }\r\n                                />\r\n                                <i\r\n                                    id='editor_save_button'\r\n                                    className=\"icon bi-save editor-toolbar-icon\"\r\n                                    title='Save'\r\n                                    onClick={\r\n                                        () => {\r\n                                            const state = this.state;\r\n                                            state.archive = save(state.archive);\r\n                                            this.setState(state);\r\n                                        }\r\n                                    }\r\n                                />\r\n                                <i\r\n                                    id='editor_discard_button'\r\n                                    className=\"icon bi-x-circle editor-toolbar-icon\"\r\n                                    title='Discard Changes'\r\n                                    onClick={\r\n                                        () => cancelChanges()\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            archive: new FSManager(),\r\n            modName: '',\r\n            orgName: '',\r\n            buttons: [\r\n                {\r\n                    key: \"File\",\r\n                    id: 'mod_builder_file_menu',\r\n                    value: (\r\n                        <Menu\r\n                            content={\r\n                                [\r\n                                    (\r\n                                        <div\r\n                                            className='menu-button'\r\n                                            onClick={\r\n                                                () => {\r\n                                                    const state = this.state;\r\n\r\n                                                    state.archive.setRoot('My_Mod');\r\n\r\n                                                    openForgeZip(\"1.16.5\", \"36.2.5\", state.archive)\r\n                                                        .then(archive => {\r\n                                                            filemod.examplemod(archive) \r\n                                                                .then(o => {\r\n                                                                    state.archive = o.archive;\r\n                                                                    state.modName = o.modName;\r\n                                                                    state.orgName = o.orgName;\r\n\r\n                                                                    this.setState(state);\r\n                                                                })\r\n                                                                .catch(err => console.error(err));\r\n                                                        })\r\n                                                        .catch(err => console.error(err));\r\n                                                }\r\n                                            }\r\n                                        >\r\n                                            New Project\r\n                                        </div>\r\n                                    ),\r\n                                    (\r\n                                        <div>\r\n                                            <input\r\n                                                type='file'\r\n                                                id='zip_input'\r\n                                                name='zip_input'\r\n                                                accept='.zip'\r\n                                            />\r\n                                            <button\r\n                                                className='menu-button'\r\n                                                onClick={\r\n                                                    () => {\r\n                                                        const files = document.getElementById('zip_input').files;\r\n\r\n                                                        if (files.length === 1) {\r\n                                                            const zip = new JSZip();\r\n\r\n                                                            const state = this.state;\r\n                                                            let zipName = files.item(0).name;\r\n                                                            state.archive.setRoot(zipName.slice(0, zipName.length - 4));\r\n\r\n                                                            openZip(zip, state.archive, files.item(0))\r\n                                                                .then(archive => {\r\n                                                                    state.archive = archive;\r\n                                                                    this.setState(state);\r\n                                                                })\r\n                                                                .catch(err => console.error(err));\r\n                                                        }\r\n                                                        else {\r\n                                                            console.log('No file selected.');\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            >\r\n                                                Open Project\r\n                                            </button>\r\n                                        </div>\r\n                                    ),\r\n                                    (\r\n                                        <div\r\n\r\n                                            className='menu-button'\r\n                                            onClick={\r\n                                                () => {\r\n                                                    const state = this.state;\r\n                                                    state.archive = save(state.archive);\r\n                                                    this.setState(state);\r\n                                                }\r\n                                            }\r\n                                        >\r\n                                            Save File\r\n                                        </div>\r\n                                    ),\r\n                                    (\r\n                                        <div\r\n\r\n                                            className='menu-button'\r\n                                            onClick={\r\n                                                () => exportZip(this.state.archive)\r\n                                            }\r\n                                        >\r\n                                            Download\r\n                                        </div>\r\n                                    )\r\n                                ]\r\n                            }\r\n                            id='mod_builder_file_menu'\r\n                            hidden={true}\r\n                        />\r\n                    )\r\n                },\r\n                {\r\n                    key: \"Blocks\",\r\n                    id: 'mod_builder_content_blocks_menu',\r\n                    value: (\r\n                        <Menu\r\n                            content={\r\n                                [\r\n                                    (\r\n                                        <div\r\n\r\n                                            className='menu-button'\r\n                                            onClick={\r\n                                                () => {\r\n                                                    if (this.state.archive.root === null || this.state.orgName === '' || this.state.modName === '')\r\n                                                        return console.log('Invalid.');\r\n                                                        \r\n                                                    let state = this.state;\r\n\r\n                                                    let name = prompt('Block name', 'my_block') || 'my_block';\r\n\r\n                                                    contentBuilder.default.blocks.standard.create(state.archive.fetch(`src/main/java/com/${state.orgName}/${state.modName.toLowerCase()}/ModBlocks.java`), name)\r\n                                                        .then(file => {\r\n                                                            this.setState(state);\r\n                                                        })\r\n                                                        .catch(err => console.error(err));\r\n                                                }\r\n                                            }\r\n                                        >\r\n                                            Create Standard\r\n                                        </div>\r\n                                    )\r\n                                ]\r\n                            }\r\n                            id='mod_builder_content_blocks_menu'\r\n                            hidden={true}\r\n                        />\r\n                    )\r\n                }\r\n            ]\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @param {FSManager} archive \r\n * @returns {FSManager}\r\n */\r\nfunction save(archive) {\r\n    const txtArea = document.getElementById('txtArea');\r\n\r\n    let v = archive.set(\r\n        currentFile.path,\r\n        currentFile.file.name,\r\n        new File([txtArea.value], currentFile.file.name, { type: currentFile.file.type })\r\n    );\r\n\r\n    currentFile.fsfile = v;\r\n    currentFile.file = v.file;\r\n    currentFile.path = v.path();\r\n    currentFile.text = txtArea.value;\r\n\r\n    document.getElementById('editor_save_button').classList.remove('icon-active');\r\n    document.getElementById('editor_discard_button').classList.remove('icon-active');\r\n\r\n    return archive;\r\n}\r\n\r\nfunction rename(archive) {\r\n    const name = document.getElementById('text_area_file_name').value;\r\n\r\n    let newFile = currentFile.fsfile.dir.addFile(name, new File([currentFile.file], name, { type: currentFile.file.type }), currentFile.path);\r\n\r\n    currentFile.fsfile.dir.deleteFile(currentFile.file.name);\r\n\r\n    currentFile.file = newFile.file;\r\n    currentFile.fsfile = newFile;\r\n\r\n    return archive;\r\n}\r\n\r\nfunction cancelChanges() {\r\n    document.getElementById('txtArea').value = currentFile.text;\r\n\r\n    document.getElementById('editor_save_button').classList.remove('icon-active');\r\n    document.getElementById('editor_discard_button').classList.remove('icon-active');\r\n}\r\n\r\n/**\r\n * \r\n * @param {FSManager} archive \r\n */\r\nfunction exportZip(archive) {\r\n    archive.compress()\r\n        .then(zip => {\r\n            download(archive.root.name + '.zip', zip);\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\nfunction openZip(zip, archive, blob) {\r\n    return new Promise((resolve, reject) => {\r\n        zip.loadAsync(blob)\r\n            .then(async (zipped) => {\r\n                let i, file, path, fileName;\r\n\r\n                for (i in zipped.files) {\r\n                    let d = archive.root;\r\n\r\n                    file = zipped.file(i);\r\n                    path = i.split('/');\r\n                    fileName = path.pop();\r\n\r\n                    // If file === null, the item is a dir.\r\n\r\n                    if (fileName !== '') {\r\n                        path.forEach(v => {\r\n                            if (d === null) {\r\n                                archive.root = new FSDir(v);\r\n                                d = archive.root;\r\n                            }\r\n                            else if (d.contains(v))\r\n                                d = d.getDir(v);\r\n                            else {\r\n                                d = d.addDir(v);\r\n                            }\r\n                        });\r\n\r\n                        d.addFile(\r\n                            fileName,\r\n                            new File([await file.async('blob')], fileName),\r\n                            path.join('/')\r\n                        );\r\n                    }\r\n                }\r\n\r\n                resolve(archive);\r\n            })\r\n            .catch(err => reject(err));\r\n    });\r\n}\r\n\r\nfunction openForgeZip(mcVersion, forgeVersion, archive) {\r\n    return new Promise((resolve, reject) => {\r\n        fetchForgeZip(mcVersion, forgeVersion, archive)\r\n            .then(async (zipped) => {\r\n                let i, file, path, fileName;\r\n\r\n                for (i in zipped.files) {\r\n                    let d = archive.root;\r\n\r\n                    file = zipped.file(i);\r\n                    path = i.split('/');\r\n                    fileName = path.pop();\r\n\r\n                    // If file === null, the item is a dir.\r\n\r\n                    if (fileName !== '') {\r\n                        path.forEach(v => {\r\n                            if (d === null) {\r\n                                archive.root = new FSDir(v);\r\n                                d = archive.root;\r\n                            }\r\n                            else if (d.contains(v))\r\n                                d = d.getDir(v);\r\n                            else {\r\n                                d = d.addDir(v);\r\n                            }\r\n                        });\r\n\r\n                        d.addFile(\r\n                            fileName,\r\n                            new File([await file.async('blob')], fileName),\r\n                            path.join('/')\r\n                        );\r\n                    }\r\n                }\r\n\r\n                resolve(archive);\r\n            })\r\n            .catch(err => reject(err));\r\n    });\r\n}","/**\r\n * \r\n * @param {string} name\r\n * @param {Blob} blob \r\n */\r\nexport default function download(name, blob) {\r\n    const url = window.URL.createObjectURL(blob);\r\n    let link = document.getElementById('download_link');\r\n    link.href = url;\r\n    link.setAttribute('download', name);\r\n    link.click();\r\n}","import ConfigForm from './components/ConfigGUI';\r\nimport TextureEditor from './components/editor/TextureEditor';\r\nimport ModBuilder from './components/ModBuilder';\r\n\r\nimport './styles/sections.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <div \r\n            className='App'\r\n            onDrop={(e) => e.preventDefault()}\r\n        >\r\n            <div id='sect_paint' className='primary-sect hidden'>\r\n                <TextureEditor />\r\n            </div>\r\n\r\n            <div id='sect_config' className='primary-sect hidden'>\r\n                <ConfigForm />\r\n            </div>\r\n\r\n            <div id='sect_builder' className='primary-sect'>\r\n                <ModBuilder />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nimport '../styles/nav-bar.css';\r\n\r\nexport default class NavBar extends React.Component {\r\n    render() {\r\n        return (\r\n            <ul className='nav-bar'>\r\n                {this.state.buttons.map((btn, i) => (\r\n                    <li\r\n                        className='nav-bar-button'\r\n                        id={btn.id + '_btn'}\r\n                        key={i}\r\n                        onClick={\r\n                            (e) => {\r\n                                btn.action(e);\r\n                            }\r\n                        }\r\n                    >\r\n                        {btn.value}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            buttons: props.buttons || []\r\n        };\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport NavBar from './components/NavBar';\r\n\r\nimport './styles/index.css';\r\nimport './styles/themes.css';\r\n\r\nfunction toggle(id) {\r\n    let d;\r\n\r\n    buttons.forEach(v => {\r\n        d = document.getElementById(v.id);\r\n\r\n        if (v.id === id)\r\n            d.classList.remove('hidden');\r\n        else\r\n            d.classList.add('hidden');\r\n    });\r\n}\r\n\r\nconst buttons = [\r\n    {\r\n        value: (<div>Paint</div>),\r\n        id: \"sect_paint\",\r\n        action: (e) => {\r\n            toggle('sect_paint');\r\n        }\r\n    },\r\n    {\r\n        value: (<div>Builder</div>),\r\n        id: \"sect_builder\",\r\n        action: (e) => {\r\n            toggle('sect_builder');\r\n        }\r\n    },\r\n    {\r\n        value: (<div>Config</div>),\r\n        id: \"sect_config\",\r\n        action: (e) => {\r\n            toggle('sect_config');\r\n        }\r\n    }\r\n];\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <header>\r\n            <NavBar buttons={buttons} />\r\n        </header>\r\n\r\n        <main>\r\n            <App />\r\n        </main>\r\n\r\n        <footer>\r\n            <div>Built by ChrisOfNormandy.</div>\r\n            <div>Join <a href='https://discord.gg/EW5JsGJfdt'>Discord</a></div>\r\n        </footer>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}