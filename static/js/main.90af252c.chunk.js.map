{"version":3,"sources":["app/texture-editor/common/Mouse.js","app/texture-editor/helpers/colorize.js","app/texture-editor/helpers/Layer.js","app/texture-editor/editor.js","app/texture-editor/helpers/distance.js","components/Menu.js","components/editor/Ribbon.js","assets/pencil.svg","assets/paintbrush.svg","assets/eraser.svg","components/editor/Brushes.js","app/common/collapseController.js","components/fragments/Collapsable.js","components/editor/side-bar/ColorSettings.js","assets/eye-open.svg","assets/minus.svg","components/editor/side-bar/LayerSettings.js","components/editor/SideBar.js","components/editor/TextureEditor.js","App.js","reportWebVitals.js","components/NavBar.js","index.js"],"names":["mouse","position","x","y","old","document","button","state","id","origin","displacement","getPosition","offset","inBounds","moving","clicked","decToHex","c","hex","Number","toString","length","hexToDec","parseInt","rgbToHex","r","g","b","a","rgbColorToHex","color","interpolate","v1","v2","Math","floor","calculatePixelColor","color1","color2","Layer","editor","name","visable","opacity","pixels","clear","forEach","pixel","setPixel","getPixel","resolution","changed","toggle","refresh","updatePixel","ignoreChange","alpha","colorize","this","arr","layers","cache","map","layer","index","includes","loader","PIXI","shared","Graphics","_","app","brush","style","fill","size","mousePos","cursor","graphic","focus","preview","getStyle","setStyle","tint","getColor","setColor","getSize","setSize","updateCursor","updateColor","updateSize","scale","width","height","background","grid","debug","enabled","element","getElementById","active","get","getActive","add","push","remove","splice","reload","move","newIndex","buffer","gridFlag","doBoundUpdate","bounds","updateBounds","view","getBoundingClientRect","startup","onReady","ticker","draw","setup","console","log","load","showGrid","stage","removeChild","addChild","toggleGrid","updateDebug","pos","innerHTML","JSON","stringify","col","classList","contains","i","buf","pos1","pos2","filled","tollerance","abs","checkColor","update","round","compose","canvas","createElement","context","getContext","imgData","createImageData","v","data","putImageData","url","toDataURL","link","href","value","setAttribute","click","beginFill","drawRect","endFill","create","children","line","lineStyle","moveTo","lineTo","Menu","props","className","hidden","content","item","Ribbon","key","onClick","htmlFor","type","onChange","event","target","checked","setState","componentDidMount","ribbonContent","addEventListener","obj","parentElement","render","menu","setResolution","bind","preventDefault","res","isNaN","React","Component","Brushes","brushes","icon","pencil","paintbrush","eraser","src","alt","controls","error","maxHeight","scrollHeight","GetContent","container","onLoad","con","collapseController","ColorSettings","previewElem","updatePreview","rgba","backgroundColor","updateRgb","k","updateHex","fetchDisplayColor","rgbControls","toUpperCase","min","max","defaultValue","placeholder","onKeyPress","match","rgb","split","Collapsable","LayerSettings","updateActiveLayer","updateLayerViewable","layerMovementButtons","layerControls","eye_open","minus","SideBar","group","title","component","right","left","top","clientX","clientY","window","innerWidth","innerHeight","onMouseDown","mx","my","onMouseUp","onMouseLeave","onMouseMove","mouseMove_timeout","TextureEditor","getCanvas","parent","oncontextmenu","e","stopPropagation","appendChild","clearTimeout","setTimeout","fetchBrush","clr","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NavBar","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.90af252c.chunk.js","sourcesContent":["const mouse = {\r\n    position: {\r\n        x: 0,\r\n        y: 0,\r\n        old: { x: 0, y: 0 },\r\n        document: {\r\n            x: 0, y: 0\r\n        }\r\n    },\r\n    button: {\r\n        state: false,\r\n        id: 0,\r\n        origin: { x: null, y: null }\r\n    },\r\n    displacement: () => {\r\n        return {\r\n            x: mouse.position.old.x === null ? 0 : mouse.position.x - mouse.position.old.x,\r\n            y: mouse.position.old.y === null ? 0 : mouse.position.y - mouse.position.old.y\r\n        }\r\n    },\r\n    getPosition: (offset = null) => {\r\n        return offset === null\r\n        ?\r\n        {\r\n            x: mouse.position.x,\r\n            y: mouse.position.y\r\n        }\r\n        :\r\n        {\r\n                x: mouse.position.x - offset.x,\r\n                y: mouse.position.y - offset.y\r\n        }\r\n    },\r\n    inBounds: false,\r\n    moving: false,\r\n    clicked: false\r\n};\r\n\r\nexport default mouse;","function decToHex(c) {\r\n    var hex = Number(c).toString(16);\r\n    return hex.length === 1 ? `0${hex}` : hex;\r\n}\r\n\r\nfunction hexToDec(c) {\r\n    return parseInt(c, 16);\r\n}\r\n\r\nfunction rgbToHex(r, g, b, a = null) {\r\n    return Number(`0x${decToHex(r)}${decToHex(g)}${decToHex(b)}${a !== null ? decToHex(a) : ''}`);\r\n}\r\n\r\nfunction rgbToHexString(r, g, b, a = null) {\r\n    return `${decToHex(r)}${decToHex(g)}${decToHex(b)}${a !== null ? decToHex(a) : ''}`;\r\n}\r\n\r\nfunction hexToRgb(hex) {\r\n    switch (hex.length) {\r\n        case 0: return {r: 0, g: 0, b:0, a: 255}\r\n        case 1: return {r: hexToDec(hex), g: hexToDec(hex), b: hexToDec(hex), a: 255}\r\n        case 3: {\r\n            let rgb = hex.split('');\r\n            return { r: hexToDec(`${rgb[0] + rgb[0]}`), g: hexToDec(`${rgb[1] + rgb[1]}`), b: hexToDec(`${rgb[2] + rgb[2]}`), a: 255 }\r\n        }\r\n        case 4: {\r\n            let rgba = hex.split('');\r\n            return { r: hexToDec(`${rgba[0] + rgba[0]}`), g: hexToDec(`${rgba[1] + rgba[1]}`), b: hexToDec(`${rgba[2] + rgba[2]}`), a: hexToDec(`${rgba[3] + rgba[3]}`) }\r\n        }\r\n        case 6: {\r\n            let rgb = hex.split('');\r\n            return { r: hexToDec(`${rgb[0] + rgb[1]}`), g: hexToDec(`${rgb[2] + rgb[3]}`), b: hexToDec(`${rgb[4] + rgb[5]}`) }\r\n        }\r\n        case 8: {\r\n            let rgb = hex.split('');\r\n            return { r: hexToDec(`${rgb[0] + rgb[1]}`), g: hexToDec(`${rgb[2] + rgb[3]}`), b: hexToDec(`${rgb[4] + rgb[5]}`), a: hexToDec(`${rgb[6] + rgb[7]}`) }\r\n        }\r\n        default: return {r: 0, g: 0, b: 0, a: 255}\r\n    }\r\n}\r\n\r\nfunction rgbToHsv(r, g, b) {\r\n    r /= 255; g /= 255; b /= 255;\r\n\r\n    let v = Math.max(r, g, b), c = v - Math.min(r, g, b);\r\n    let h = c && ((v === r) ? (g - b) / c : ((v === g) ? 2 + (b - r) / c : 4 + (r - g) / c));\r\n\r\n    return {\r\n        h: 60 * (h < 0 ? h + 6 : h),\r\n        s: v && c / v,\r\n        v\r\n    };\r\n}\r\n\r\nfunction rgbColorToHex(color) {\r\n    return rgbToHex(color.r, color.g, color.b);\r\n}\r\n\r\nfunction hsvToRgb(h, s, v) {\r\n    let r, g, b;\r\n    let i = Math.floor(h * 6);\r\n    let f = h * 6 - i;\r\n    let p = v * (1 - s);\r\n    let q = v * (1 - f * s);\r\n    let t = v * (1 - (1 - f) * s);\r\n\r\n    switch (i % 6) {\r\n        case 0: {\r\n            r = v;\r\n            g = t;\r\n            b = p;\r\n            break;\r\n        }\r\n        case 1: {\r\n            r = q;\r\n            g = v;\r\n            b = p;\r\n            break;\r\n        }\r\n        case 2: {\r\n            r = p;\r\n            g = v;\r\n            b = t;\r\n            break;\r\n        }\r\n        case 3: {\r\n            r = p;\r\n            g = q;\r\n            b = v;\r\n            break;\r\n        }\r\n        case 4: {\r\n            r = t;\r\n            g = p;\r\n            b = v;\r\n            break;\r\n        }\r\n        case 5: {\r\n            r = v;\r\n            g = p;\r\n            b = q;\r\n            break;\r\n        }\r\n        default: return null;\r\n    }\r\n\r\n    return [r * 255, g * 255, b * 255];\r\n}\r\n\r\nfunction interpolate(v1, v2, a) {\r\n    return Math.floor((v2 * a) + (v1 * (1 - a)));\r\n}\r\n\r\nfunction calculatePixelColor(color1, color2) {\r\n    if (color1.a === 0)\r\n        return color2;\r\n    if (color2.a === 0 || !color2)\r\n        return color1;\r\n\r\n    return {\r\n        r: interpolate(color1.r, color2.r, color2.a / 255),\r\n        g: interpolate(color1.g, color2.g, color2.a / 255),\r\n        b: interpolate(color1.b, color2.b, color2.a / 255),\r\n        a: (color1.a + color2.a) > 255 ? 255 : color1.a + color2.a\r\n    }\r\n}\r\n\r\nexport {\r\n    decToHex,\r\n    rgbToHex,\r\n    rgbToHexString,\r\n    hexToDec,\r\n    hexToRgb,\r\n    rgbColorToHex,\r\n    rgbToHsv,\r\n    hsvToRgb,\r\n    interpolate,\r\n    calculatePixelColor\r\n}","import * as colorize from './colorize';\r\n\r\nexport default class Layer {\r\n    editor;\r\n\r\n    resolution;\r\n\r\n    name;\r\n\r\n    visable = true;\r\n    opacity = 255;\r\n    pixels = [];\r\n\r\n    clear = () => {\r\n        this.pixels.forEach(pixel => this.setPixel(pixel.x, pixel.y, null));\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @returns {{color: { r: number, g: number, b: number, a: number }, x: number, y: number, changed: boolean}}\r\n     */\r\n    getPixel = (x, y) => {\r\n        if (this.visable)\r\n            return !this.pixels[y * this.resolution + x]\r\n                ? null\r\n                : this.pixels[y * this.resolution + x];\r\n        return {\r\n            x, y, changed: this.pixels[y * this.resolution + x].changed, color: { r: 0, g: 0, b: 0, a: 0 }\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.visable = !this.visable;\r\n        this.editor.refresh = true;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {{r: number, g: number, b: number, a: number}} color\r\n     * @param {boolean} ignoreChange\r\n     * @param {number} alpha\r\n     * @returns {{color: { r: number, g: number, b: number, a: number }, x: number, y: number, changed: boolean}}\r\n     */\r\n    updatePixel = (x, y, color, ignoreChange = false, alpha = null) => {\r\n        let pixel = this.getPixel(x, y);\r\n\r\n        if (pixel === null || (pixel.changed && !ignoreChange))\r\n            return null;\r\n\r\n        if (alpha === null) {\r\n            pixel.color = color === null ? { r: 0, g: 0, b: 0, a: 0 } : colorize.calculatePixelColor(pixel.color, color);\r\n            pixel.changed = true;\r\n        }\r\n        else\r\n            pixel.color.a = (pixel.color.a / 255) * alpha;\r\n\r\n        return pixel;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @param {{r: number, g: number, b: number, a: number}} color \r\n     * @returns {{color: { r: number, g: number, b: number, a: number }, x: number, y: number, changed: boolean}}\r\n     */\r\n    setPixel = (x, y, color = null) => {\r\n        this.pixels[y * this.resolution + x] = {\r\n            color: color === null ? { r: 0, g: 0, b: 0, a: 0 } : color,\r\n            x,\r\n            y,\r\n            changed: false\r\n        };\r\n\r\n        return this.pixels[y * this.resolution + x];\r\n    }\r\n\r\n    constructor(editor, name = null) {\r\n        this.editor = editor;\r\n        this.resolution = editor.resolution;\r\n\r\n        if (name === null) {\r\n            let arr = this.editor.layers.cache.map(layer => {\r\n                return layer.name;\r\n            });\r\n\r\n            if (!arr.length)\r\n                this.name = 'Layer 1';\r\n            else {\r\n                let index = 1;\r\n\r\n                this.name = `Layer ${index}`;\r\n\r\n                while (arr.includes(this.name)) {\r\n                    this.name = `Layer ${index}`;\r\n                    index++;\r\n                }\r\n            }\r\n        }\r\n        else\r\n            this.name = name;\r\n\r\n        for (let x = 0; x < editor.resolution; x++) {\r\n            for (let y = 0; y < editor.resolution; y++) {\r\n                this.setPixel(x, y);\r\n            }\r\n        }\r\n    }\r\n}","import * as PIXI from 'pixi.js';\r\n\r\nimport mouse from './common/Mouse';\r\n\r\nimport Layer from './helpers/Layer';\r\n\r\nimport * as colorize from './helpers/colorize';\r\nimport * as distance from './helpers/distance';\r\n\r\nconst loader = PIXI.Loader.shared,\r\n    Graphics = PIXI.Graphics;\r\n\r\nconst _ = {\r\n    /**\r\n     * @type {PIXI.Application}\r\n     */\r\n    app: null,\r\n\r\n    brush: {\r\n        style: 'pencil',\r\n        fill: {\r\n            r: 0, g: 0, b: 0, a: 255\r\n        },\r\n        size: 1,\r\n\r\n        mousePos: null,\r\n        cursor: {\r\n            position: {\r\n                x: 0,\r\n                y: 0,\r\n                old: {\r\n                    x: 0,\r\n                    y: 0\r\n                }\r\n            },\r\n            /**\r\n             * @type {PIXI.Graphics}\r\n             */\r\n            graphic: null,\r\n            focus: null,\r\n        },\r\n\r\n        preview: null,\r\n\r\n        getStyle: () => {\r\n            return _.brush.style;\r\n        },\r\n        /**\r\n         * \r\n         * @param {string} style \r\n         */\r\n        setStyle: (style) => {\r\n            switch (style) {\r\n                case 'eraser': {\r\n                    _.brush.cursor.graphic.tint = 0xFFFFFF;\r\n                    _.brush.cursor.graphic.alpha = 1;\r\n                    break;\r\n                }\r\n                // eslint-disable-next-line\r\n                case 'fill': {}\r\n                // eslint-disable-next-line\r\n                case 'color-picker': {\r\n                    _.brush.cursor.graphic.alpha = 0;\r\n                    break;\r\n                }\r\n                default: {\r\n                    _.brush.cursor.graphic.tint = colorize.rgbToHex(_.brush.fill.r, _.brush.fill.g, _.brush.fill.b);\r\n                    _.brush.cursor.graphic.alpha = _.brush.fill.a / 255;\r\n                    break;\r\n                }\r\n            }\r\n            _.brush.style = style;\r\n        },\r\n\r\n        getColor: () => {\r\n            return {\r\n                r: _.brush.fill.r,\r\n                g: _.brush.fill.g,\r\n                b: _.brush.fill.b,\r\n                a: _.brush.fill.a\r\n            };\r\n        },\r\n        /**\r\n         * \r\n         * @param {{r: number, g: number, b: number, a: number}} color \r\n         */\r\n        setColor: (color) => {\r\n            _.brush.cursor.graphic.tint = colorize.rgbToHex(color.r, color.g, color.b);\r\n            _.brush.cursor.graphic.alpha = color.a / 255;\r\n\r\n            _.brush.fill = color;\r\n        },\r\n\r\n        getSize: () => {\r\n            return _.brush.size;\r\n        },\r\n        setSize: (size) => {\r\n            _.brush.size = size;\r\n        },\r\n\r\n        updateCursor: (updateColor = false, updateSize = false) => {\r\n            _.brush.mousePos = mouse.getPosition();\r\n\r\n            _.brush.cursor.position.old.x = _.brush.cursor.position.x;\r\n            _.brush.cursor.position.old.y = _.brush.cursor.position.y;\r\n\r\n            _.brush.cursor.position.x = Math.floor((_.brush.mousePos.x - (_.brush.size - 1) / 2 * _.scale) / _.scale);\r\n            _.brush.cursor.position.y = Math.floor((_.brush.mousePos.y - (_.brush.size - 1) / 2 * _.scale) / _.scale);\r\n\r\n            if (_.brush.cursor.position.old.x !== _.brush.cursor.position.x || _.brush.cursor.position.old.y !== _.brush.cursor.position.y) {\r\n                _.brush.cursor.graphic.x = _.brush.cursor.position.x * _.scale;\r\n                _.brush.cursor.graphic.y = _.brush.cursor.position.y * _.scale;\r\n            }\r\n\r\n            if (updateSize) {\r\n                _.brush.cursor.graphic.width = _.scale * _.brush.size;\r\n                _.brush.cursor.graphic.height = _.scale * _.brush.size;\r\n            }\r\n\r\n            if (updateColor) {\r\n                _.brush.cursor.graphic.tint = colorize.rgbToHex(_.brush.fill.r, _.brush.fill.g, _.brush.fill.b);\r\n                _.brush.cursor.graphic.alpha = _.brush.fill.a / 255;\r\n            }\r\n        }\r\n    },\r\n\r\n    background: [],\r\n    grid: new PIXI.Container(),\r\n\r\n    resolution: 0,\r\n\r\n    width: 0,\r\n    height: 0,\r\n    scale: 0,\r\n\r\n    debug: {\r\n        enabled: true,\r\n        element: document.getElementById('debug')\r\n    },\r\n\r\n    pixels: [],\r\n    layers: {\r\n        /**\r\n         * @type {Layer[]}\r\n         */\r\n        cache: [],\r\n\r\n        active: 0,\r\n\r\n        /**\r\n         * \r\n         * @param {number} layer \r\n         * @returns {Layer}\r\n         */\r\n        get: (layer) => {\r\n            return _.layers.cache[layer];\r\n        },\r\n        /**\r\n         * \r\n         * @returns {Layer}\r\n         */\r\n        getActive: () => {\r\n            return _.layers.cache[_.layers.active];\r\n        },\r\n        add: () => {\r\n            let index = _.layers.cache.length;\r\n\r\n            _.layers.cache.push(new Layer(editor));\r\n            _.layers.active = index;\r\n        },\r\n        remove: (index = -1) => {\r\n            _.layers.cache.splice(index, 1);\r\n            _.layers.reload();\r\n            return _.layers;\r\n        },\r\n        move: (index, newIndex) => {\r\n            let layer = _.layers.cache.splice(index, 1)[0];\r\n            _.layers.cache.splice(newIndex, 0, layer);\r\n            _.layers.reload();\r\n        },\r\n        clear: () => {\r\n            _.layers.cache = [];\r\n        },\r\n        toggle: (layer) => {\r\n            _.layers.cache[layer].visable = !_.layers.cache[layer].visable;\r\n            _.layers.reload();\r\n        },\r\n        reload: () => {\r\n            _.refresh = true;\r\n        }\r\n    },\r\n    buffer: [],\r\n\r\n    gridFlag: false,\r\n    refresh: false,\r\n\r\n    doBoundUpdate: true,\r\n    bounds: null,\r\n\r\n    updateBounds: () => {\r\n        _.bounds = _.app.view.getBoundingClientRect();\r\n        _.doBoundUpdate = false;\r\n    },\r\n\r\n    startup: () => {\r\n        _.onReady(() => _.app.ticker.add(() => _.draw()));\r\n        return _.app.view;\r\n    },\r\n\r\n    onReady: (setup) => {\r\n        console.log('App ready. Loading.');\r\n\r\n        loader\r\n            .load(setup);\r\n    },\r\n\r\n    clear: () => {\r\n        _.layers.cache.forEach(layer => layer.clear());\r\n        _.refresh = true;\r\n    },\r\n\r\n    showGrid: () => {\r\n        _.app.stage.removeChild(_.grid);\r\n        _.app.stage.addChild(_.grid);\r\n    },\r\n\r\n    toggleGrid: () => {\r\n        _.gridFlag = !_.gridFlag;\r\n\r\n        if (_.gridFlag)\r\n            _.app.stage.addChild(_.grid);\r\n        else\r\n            _.app.stage.removeChild(_.grid);\r\n    },\r\n\r\n    updateDebug: () => {\r\n        let pos = mouse.getPosition();\r\n        let x = Math.floor(pos.x / _.scale),\r\n            y = Math.floor(pos.y / _.scale);\r\n        let pixel = _.pixels[y * _.resolution + x];\r\n\r\n        if (!pixel)\r\n            return;\r\n\r\n        _.debug.element.innerHTML =\r\n            `Mouse: ${JSON.stringify(pos)} --> ${x}, ${y}<br />` +\r\n            ` - ${JSON.stringify(mouse.position.document)}<br />` +\r\n            `Brush:<br />` +\r\n            ` - Color: ${JSON.stringify(_.brush.fill)}<br />` +\r\n            ` - Pos: ${_.brush.cursor.position.x}, ${_.brush.cursor.position.y} --> ${_.brush.cursor.position.x + _.brush.size - 1}, ${_.brush.cursor.position.y + _.brush.size - 1}<br />` +\r\n            ` - Hex: 0x${colorize.decToHex(_.brush.fill.r)}${colorize.decToHex(_.brush.fill.g)}${colorize.decToHex(_.brush.fill.b)}<br />` +\r\n            ` - Style: ${_.brush.style}<br />` +\r\n            `Buffer: ${_.buffer.length}<br />` +\r\n            `Hover: ${JSON.stringify(pixel.color)}<br />` +\r\n            ` - Tint:${pixel.graphic.tint}<br />` +\r\n            ` - Alpha: ${pixel.graphic.alpha}`;\r\n    },\r\n\r\n    updatePixel: (x, y) => {\r\n        if (!_.pixels[y * _.resolution + x])\r\n            _.setPixel(x, y);\r\n\r\n        let color = null;\r\n\r\n        _.layers.cache.forEach(layer => {\r\n            if (!layer.visable)\r\n                return;\r\n\r\n            let col = layer.getPixel(x, y).color;\r\n            if (col.a === 0)\r\n                return;\r\n\r\n            if (color === null) {\r\n                color = col;\r\n            }\r\n            else\r\n                color = colorize.calculatePixelColor(col, color);\r\n        });\r\n\r\n        _.pixels[y * _.resolution + x].color = color || { r: 0, g: 0, b: 0, a: 0 };\r\n        _.pixels[y * _.resolution + x].graphic.tint = colorize.rgbColorToHex(_.pixels[y * _.resolution + x].color);\r\n        _.pixels[y * _.resolution + x].graphic.alpha = _.pixels[y * _.resolution + x].color.a / 255;\r\n    },\r\n\r\n    draw: () => {\r\n        if (_.debug.element === null) {\r\n            _.debug.element = document.getElementById('debug');\r\n            return;\r\n        }\r\n\r\n        if (_.debug.enabled) {\r\n            if (_.debug.element.classList.contains('hidden'))\r\n                _.debug.element.classList.remove('hidden');\r\n            _.updateDebug();\r\n        }\r\n        else if (!_.debug.element.classList.contains('hidden'))\r\n            _.debug.element.classList.add('hidden')\r\n\r\n        if (_.refresh) {\r\n            _.pixels.forEach(pixel => {\r\n                _.updatePixel(pixel.x, pixel.y);\r\n\r\n                _.app.stage.removeChild(pixel.graphic);\r\n                _.app.stage.addChild(pixel.graphic);\r\n            });\r\n\r\n            _.app.stage.removeChild(_.brush.cursor.graphic);\r\n            _.app.stage.addChild(_.brush.cursor.graphic);\r\n\r\n            if (_.gridFlag)\r\n                _.showGrid();\r\n\r\n            _.refresh = false;\r\n\r\n            return;\r\n        }\r\n\r\n        _.buffer.forEach((pixel, i) => {\r\n            _.updatePixel(pixel.x, pixel.y);\r\n\r\n            if (pixel.changed) {\r\n                if (!mouse.button.state)\r\n                    pixel.changed = false;\r\n            }\r\n            else\r\n                _.buffer.splice(i, 1);\r\n        });\r\n\r\n        _.brush.updateCursor();\r\n\r\n        let layer = _.layers.getActive();\r\n        let buf;\r\n\r\n        let color, ignoreChange, alpha;\r\n\r\n        if (!!layer) {\r\n            if (mouse.clicked) {\r\n                switch(_.brush.style) {\r\n                    case 'fill': {\r\n                        let position = {\r\n                            x: _.brush.cursor.position.x,\r\n                            y: _.brush.cursor.position.y\r\n                        };\r\n\r\n                        let origin = {\r\n                            color: layer.getPixel(position.x, position.y).color\r\n                        };\r\n\r\n                        color = _.brush.getColor();\r\n                        ignoreChange = false;\r\n                        alpha = null;\r\n\r\n                        let filled = [];\r\n\r\n                        function checkColor(color1, color2, tollerance = 5) {\r\n                            return (\r\n                                Math.abs(color1.r - color2.r) <= tollerance &&\r\n                                Math.abs(color1.g - color2.g) <= tollerance &&\r\n                                Math.abs(color1.b - color2.b) <= tollerance &&\r\n                                Math.abs(color1.a - color2.a) <= tollerance\r\n                            )\r\n                        }\r\n\r\n                        function fill(pos) {\r\n                            let pixel = layer.getPixel(pos.x, pos.y);\r\n\r\n                            if (pixel === null || !checkColor(pixel.color, origin.color) || pos.x < 0 || pos.y >= _.resolution || pos.y < 0 || pos.y >= _.resolution)\r\n                                return;\r\n\r\n                            buf = filled.includes(pos) ? null : layer.updatePixel(pos.x, pos.y, color, ignoreChange, alpha);\r\n\r\n                            if (buf !== null) {\r\n                                _.buffer.push(buf);\r\n                                filled.push(pos);\r\n\r\n                                fill({ x: pos.x - 1, y: pos.y });\r\n                                fill({ x: pos.x + 1, y: pos.y });\r\n                                fill({ x: pos.x, y: pos.y - 1 });\r\n                                fill({ x: pos.x, y: pos.y + 1 });\r\n                            }\r\n                        }\r\n\r\n                        fill(position);\r\n                        break;\r\n                    }\r\n                    case 'color-picker': {\r\n                        let color = layer.getPixel(_.brush.cursor.position.x, _.brush.cursor.position.y).color;\r\n                        _.brush.setColor(color);\r\n                        _.brush.preview.update();\r\n                        _.brush.updateCursor(true);\r\n                        break;\r\n                    }\r\n                    default: { break; }\r\n                }\r\n            }\r\n            else if (mouse.button.state) {\r\n                if (mouse.button.id === 0) {\r\n                    switch (_.brush.style) {\r\n                        case 'fill': {}\r\n                        // eslint-disable-next-line\r\n                        case 'color-picker': { break; }\r\n                        default: {\r\n                            for (let x = _.brush.cursor.position.x < 0 ? 0 : _.brush.cursor.position.x; x < _.brush.cursor.position.x + _.brush.size && x < _.resolution; x++) {\r\n                                for (let y = _.brush.cursor.position.y < 0 ? 0 : _.brush.cursor.position.y; y < _.brush.cursor.position.y + _.brush.size && y < _.resolution; y++) {\r\n                                    switch (_.brush.style) {\r\n                                        case 'paint': {\r\n                                            color = _.brush.getColor();\r\n\r\n                                            color.a = (_.brush.fill.a / 255) * Math.floor((1 - (distance.manhattan(\r\n                                                {\r\n                                                    x: _.brush.cursor.position.x + Math.floor(_.brush.size / 2),\r\n                                                    y: _.brush.cursor.position.y + Math.floor(_.brush.size / 2)\r\n                                                },\r\n                                                {\r\n                                                    x, y\r\n                                                }\r\n                                            ) / Math.round(_.brush.size / 2))) * 255);\r\n                                            if (color.a < 0)\r\n                                                color.a = 0;\r\n\r\n                                            ignoreChange = _.brush.cursor.position.old.x !== _.brush.cursor.position.x || _.brush.cursor.position.old.y !== _.brush.cursor.position.y;\r\n                                            alpha = null;\r\n                                            break;\r\n                                        }\r\n                                        case 'eraser': {\r\n                                            color = null;\r\n                                            ignoreChange = _.brush.cursor.position.old.x !== _.brush.cursor.position.x || _.brush.cursor.position.old.y !== _.brush.cursor.position.y;\r\n                                            alpha = 0;\r\n                                            break\r\n                                        }\r\n                                        default: {\r\n                                            color = _.brush.getColor();\r\n                                            ignoreChange = false;\r\n                                            alpha = null;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n\r\n                                    buf = layer.updatePixel(x, y, color, ignoreChange, alpha);\r\n\r\n                                    if (buf !== null)\r\n                                        _.buffer.push(buf);\r\n                                }\r\n                            }\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!mouse.inBounds)\r\n            mouse.button.state = false;\r\n\r\n        mouse.clicked = false;\r\n    },\r\n\r\n    compose: () => {\r\n        const canvas = document.createElement('canvas'), context = canvas.getContext('2d');\r\n        canvas.width = _.resolution;\r\n        canvas.height = _.resolution;\r\n\r\n        let imgData = context.createImageData(_.resolution, _.resolution);\r\n\r\n        let color;\r\n        for (let x = 0; x < _.resolution; x++) {\r\n            for (let y = 0; y < _.resolution; y++) {\r\n                let v = (y * _.resolution + x) * 4;\r\n                color = _.getPixel(x, y).color;\r\n\r\n                imgData.data[v] = color.r;\r\n                imgData.data[v + 1] = color.g;\r\n                imgData.data[v + 2] = color.b;\r\n                imgData.data[v + 3] = color.a;\r\n            }\r\n        }\r\n\r\n        context.putImageData(imgData, 0, 0);\r\n\r\n        const url = canvas.toDataURL('image/png');\r\n        let link = document.createElement('a');\r\n        link.href = url;\r\n\r\n        let name = document.getElementById('image_name').value;\r\n        link.setAttribute('download', `${!!name ? name : 'texture'}.png`);\r\n        link.click();\r\n    },\r\n\r\n    setPixel: (x, y, color = null) => {\r\n        _.pixels[y * _.resolution + x] = {\r\n            graphic: new Graphics(),\r\n            color: color === null ? {\r\n                r: 0,\r\n                g: 0,\r\n                b: 0,\r\n                a: 0\r\n            } : color,\r\n            changed: false,\r\n            x,\r\n            y\r\n        };\r\n\r\n        _.pixels[y * _.resolution + x].graphic.beginFill(0xFFFFFF);\r\n        _.pixels[y * _.resolution + x].graphic.drawRect(0, 0, _.scale, _.scale);\r\n        _.pixels[y * _.resolution + x].graphic.endFill();\r\n\r\n        _.pixels[y * _.resolution + x].graphic.tint = colorize.rgbColorToHex(_.pixels[y * _.resolution + x].color);\r\n        _.pixels[y * _.resolution + x].graphic.alpha = _.pixels[y * _.resolution + x].color.a / 255;\r\n\r\n        _.pixels[y * _.resolution + x].graphic.x = x * _.scale;\r\n        _.pixels[y * _.resolution + x].graphic.y = y * _.scale;\r\n\r\n        return _.pixels[y * _.resolution + x];\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {PIXI.Application} app \r\n     */\r\n    create: (app, resolution = 16) => {\r\n        if (_.app !== null)\r\n            while (_.app.stage.children[0])\r\n                _.app.stage.removeChild(_.app.stage.children[0]);\r\n\r\n        _.app = app;\r\n\r\n        _.resolution = resolution\r\n\r\n        _.width = app.view.width;\r\n        _.height = app.view.height;\r\n        _.scale = _.width / _.resolution;\r\n\r\n        _.pixels = [];\r\n\r\n        _.layers.clear();\r\n        _.layers.add();\r\n\r\n        _.brush.cursor.graphic = new Graphics();\r\n        _.brush.cursor.graphic.beginFill(0xFFFFFF);\r\n        _.brush.cursor.graphic.drawRect(0, 0, _.scale, _.scale);\r\n        _.brush.cursor.graphic.endFill();\r\n\r\n        _.brush.updateCursor(true, true);\r\n\r\n        let layer = _.layers.get(_.layers.active);\r\n\r\n        for (let x = 0; x < _.resolution; x++) {\r\n            for (let y = 0; y < _.resolution; y++) {\r\n                _.background[y * _.resolution + x] = new Graphics();\r\n                _.background[y * _.resolution + x].beginFill(0xFFFFFF);\r\n                _.background[y * _.resolution + x].drawRect(0, 0, _.scale, _.scale);\r\n                _.background[y * _.resolution + x].endFill();\r\n\r\n                _.background[y * _.resolution + x].tint = (x % 2 === 0 && y % 2 === 1) || (x % 2 === 1 && y % 2 === 0) ? 0xFFFFFF : 0xDDDDDD;\r\n\r\n                _.background[y * _.resolution + x].x = x * _.scale;\r\n                _.background[y * _.resolution + x].y = y * _.scale;\r\n\r\n                _.app.stage.addChild(_.background[y * _.resolution + x]);\r\n\r\n                _.app.stage.addChild(_.setPixel(x, y).graphic);\r\n\r\n                layer.setPixel(x, y, _.pixels[y * _.resolution + x].color);\r\n\r\n                let line = new PIXI.Graphics();\r\n                line.lineStyle(1, 0x000000, 1);\r\n                line.moveTo(0, y * _.scale);\r\n                line.lineTo(_.resolution * _.scale, y * _.scale);\r\n\r\n                _.grid.addChild(line);\r\n            }\r\n\r\n            let line = new PIXI.Graphics();\r\n            line.lineStyle(1, 0x000000, 1);\r\n            line.moveTo(x * _.scale, 0);\r\n            line.lineTo(x * _.scale, _.resolution * _.scale);\r\n\r\n            _.grid.addChild(line);\r\n        }\r\n\r\n        _.app.stage.addChild(_.brush.cursor.graphic);\r\n\r\n        return _;\r\n    }\r\n}\r\n\r\nconst editor = _;\r\n\r\nexport {\r\n    editor\r\n}","function manhattan(pos1, pos2) {\r\n    return Math.abs(pos2.x - pos1.x) + Math.abs(pos2.y - pos1.y);\r\n}\r\n\r\nfunction euclidean(pos1, pos2) {\r\n    return Math.sqrt((pos2.x - pos1.x) * (pos2.x - pos1.x) + (pos2.y - pos1.y) * (pos2.y - pos1.y));\r\n}\r\n\r\nexport {\r\n    manhattan,\r\n    euclidean\r\n}","function Menu(props) {\r\n    return (\r\n        <div\r\n            id={props.id}\r\n            className={`menu${!!props.hidden ? ' hidden' : ''}`}\r\n        >\r\n            {props.content.map((item, i) => (\r\n                <div\r\n                    className='menu-item'\r\n                    key={i}\r\n                >\r\n                    {item}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\n\r\nimport Menu from '../Menu';\r\n\r\nimport './css/ribbon.css';\r\n\r\nexport default class Ribbon extends React.Component {\r\n\r\n    state = {\r\n        editor: null,\r\n        content: [\r\n        {\r\n            key: \"File\",\r\n            id: 'file_menu',\r\n            value: (<Menu\r\n                content={[\r\n                    (<div\r\n                        className='menu-button'\r\n                        onClick={\r\n                            () => this.state.editor.compose()\r\n                        }\r\n                    >\r\n                        Download\r\n                    </div>),\r\n                    // (<div\r\n                    //     className='menu-break'\r\n                    // />),\r\n                    // (<form\r\n                    //     className='menu-button'\r\n                    // >\r\n                    //     <input\r\n                    //         type='text'\r\n                    //         id='resolution_input'\r\n                    //         name='resolution'\r\n                    //         defaultValue='16'\r\n                    //     />\r\n                    //     <input\r\n                    //         type='submit'\r\n                    //         value='Create'\r\n                    //         onClick={this.setResolution}\r\n                    //     />\r\n                    // </form>),\r\n                    (<div\r\n                        className='menu-break'\r\n                    />),\r\n                    (<div\r\n                        className='menu-button'\r\n                    >\r\n                        <label\r\n                            id='debug_check_label'\r\n                            htmlFor='debug-check'\r\n                        >\r\n                            Debug\r\n                        </label>\r\n                        <input\r\n                            name='debug-check'\r\n                            type='checkbox'\r\n                            onChange={\r\n                                (event) => {\r\n                                    let state = this.state;\r\n                                    state.editor.debug = event.target.checked;\r\n                                    this.setState(state);\r\n                                }\r\n                            }\r\n                        />\r\n                    </div>)\r\n                ]}\r\n                id='file_menu'\r\n                hidden={true}\r\n            />)\r\n        },\r\n        {\r\n            key: \"Edit\",\r\n            id: 'edit_menu',\r\n            value: (<Menu\r\n                content={[\r\n                    (<div\r\n                        className='menu-button'\r\n                        onClick={\r\n                            () => this.state.editor.clear()\r\n                        }\r\n                    >\r\n                        Clear\r\n                    </div>)\r\n                ]}\r\n                id='edit_menu'\r\n                hidden={true}\r\n            />)\r\n        },\r\n        {\r\n            key: \"View\",\r\n            id: 'view_menu',\r\n            value: (\r\n                <Menu\r\n                    content={[\r\n                        (<div\r\n                            className='menu-button'\r\n                            onClick={\r\n                                () => {\r\n                                    this.state.editor.toggleGrid();\r\n                                }\r\n                            }\r\n                        >\r\n                            Toggle Grid\r\n                        </div>)\r\n                    ]}\r\n                    id='view_menu'\r\n                    hidden={true}\r\n                />\r\n            )\r\n        }\r\n    ]\r\n}\r\n\r\nsetResolution(event) {\r\n    event.preventDefault();\r\n    let res = Number(document.getElementById('resolution_input').value)\r\n    if (isNaN(res))\r\n        return;\r\n\r\n    let state = this.state;\r\n\r\n    if (res % 16 === 0 && res > 0 && res <= 128)\r\n        state.editor = state.editor.create(this.editor.app, res);\r\n\r\n    this.setState(state);\r\n}\r\n\r\n    componentDidMount = () => {\r\n        let ribbonContent = [];\r\n        this.state.content.forEach(item => ribbonContent.push(document.getElementById(item.id)));\r\n\r\n        document.addEventListener('click', (event) => {\r\n            ribbonContent.forEach(obj => {\r\n                if (!obj.parentElement.contains(event.target))\r\n                    obj.classList.add('hidden');\r\n            });\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='texture-editor-ribbon'\r\n            >\r\n                {this.state.content.map(menu => (\r\n                    <div\r\n                        key={menu.key}\r\n                        className='ribbon-menu'\r\n                    >\r\n                        <div\r\n                            className='ribbon-menu-button'\r\n                            onClick={\r\n                                () => {\r\n                                    document.getElementById(menu.id).classList.toggle('hidden');\r\n                                }\r\n                            }\r\n                        >\r\n                            {menu.key}\r\n                        </div>\r\n                        {menu.value}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state.editor = props.editor;\r\n\r\n        this.setResolution = this.setResolution.bind(this);\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/pencil.34dc5e45.svg\";","export default __webpack_public_path__ + \"static/media/paintbrush.3b3671d0.svg\";","export default __webpack_public_path__ + \"static/media/eraser.4da23591.svg\";","import React from \"react\";\r\n\r\nimport './css/brushes.css';\r\n\r\nimport pencil from '../../assets/pencil.svg';\r\nimport paintbrush from '../../assets/paintbrush.svg';\r\nimport eraser from '../../assets/eraser.svg';\r\n\r\nexport default class Brushes extends React.Component {\r\n\r\n    state = {\r\n        editor: null,\r\n        brush: null\r\n    };\r\n\r\n    brushes = [\r\n        {\r\n            key: 'pencil',\r\n            icon: pencil\r\n        },\r\n        {\r\n            key: 'paint',\r\n            icon: paintbrush\r\n        },\r\n        {\r\n            key: 'eraser',\r\n            icon: eraser\r\n        },\r\n        {\r\n            key: 'fill',\r\n            icon: pencil\r\n        },\r\n        {\r\n            key: 'color-picker',\r\n            icon: pencil\r\n        }\r\n    ];\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='brushes-container'\r\n            >\r\n                {this.brushes.map(brush => (\r\n                    <img\r\n                        key={brush.key}\r\n                        src={brush.icon}\r\n                        className='brush-icon'\r\n                        id={`${brush.key}_brush`}\r\n                        alt={brush.key}\r\n                        onClick={\r\n                            () => this.state.brush.setStyle(brush.key)\r\n                        }\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state.editor = props.editor;\r\n        this.state.brush = props.editor.brush;\r\n    }\r\n}","function _(controls) {\r\n    if (controls === null)\r\n        return console.error('Collapsable div was null.');\r\n    controls.style.maxHeight = !controls.style.maxHeight ? controls.scrollHeight + 'px' : null;\r\n}\r\n\r\nexport default _;","import React from 'react';\r\n\r\nimport collapseController from '../../app/common/collapseController';\r\n\r\nfunction GetContent(props) {\r\n    return props.content();\r\n}\r\n\r\nfunction _(props) {\r\n    const id = props.id;\r\n    const content = props.content;\r\n    let container = document.getElementById(id);\r\n\r\n    return (\r\n        <div\r\n            className='collapsable-container-wrapper'\r\n            onLoad={\r\n                () => {\r\n                    let con = document.getElementById(id);\r\n                    con.style.maxHeight = con.scrollHeight + 'px';\r\n                }\r\n            }\r\n        >\r\n            <div \r\n                className='collapsable-container-group container-group'\r\n                id={id}\r\n            >\r\n                <GetContent content={content} />\r\n            </div>\r\n            <div\r\n                className='collapsable-container-group-trigger'\r\n                onClick={\r\n                    () => {\r\n                        collapseController(container)\r\n                    }\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default _;","import React from 'react';\r\n\r\nimport Collapsable from '../../fragments/Collapsable';\r\n\r\nimport * as colorize from '../../../app/texture-editor/helpers/colorize';\r\n\r\nimport '../css/side-bar/colors.css';\r\n\r\nexport default class ColorSettings extends React.Component {\r\n    state = {\r\n        brush: null\r\n    }\r\n\r\n    updateColor;\r\n\r\n    previewElem = null;\r\n    container = null;\r\n\r\n    updatePreview = () => {\r\n        let rgba = this.state.brush.getColor();\r\n        this.previewElem.style.backgroundColor = `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a / 255})`;\r\n    }\r\n\r\n    updateRgb = () => {\r\n        let color = this.state.brush.getColor();\r\n\r\n        ['r', 'g', 'b', 'a'].forEach(k => {\r\n            document.getElementById(`rgb_${k}`).value = color[k];\r\n            document.getElementById(`rgb_${k}_slider`).value = color[k];\r\n        });\r\n    }\r\n\r\n    updateHex = () => {\r\n        let hex = colorize.rgbToHexString(document.getElementById('rgb_r').value, document.getElementById('rgb_g').value, document.getElementById('rgb_b').value, document.getElementById('rgb_a').value);\r\n        document.getElementById('hex').value = hex;\r\n    }\r\n\r\n    fetchDisplayColor = () => {\r\n        return {\r\n            r: document.getElementById('rgb_r').value,\r\n            g: document.getElementById('rgb_g').value,\r\n            b: document.getElementById('rgb_b').value,\r\n            a: document.getElementById('rgb_a').value\r\n        }\r\n    }\r\n\r\n    refresh = () => {\r\n        this.previewElem = document.getElementById('color_picker_preview');\r\n        this.container = document.getElementById('color_picker_controls_container');\r\n    }\r\n\r\n    update = () => {\r\n        this.updateRgb();\r\n        this.updatePreview();\r\n        this.updateHex();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n\r\n        this.updatePreview();\r\n    }\r\n\r\n    rgbControls = () => {\r\n        return (\r\n            <div\r\n                className='rgb-container-wrapper'\r\n            >\r\n                {['r', 'g', 'b', 'a'].map(v => (\r\n                    <div\r\n                        key={`rgb_${v}_div`}\r\n                        className='rgb-input-container'\r\n                    >\r\n                        <div\r\n                            htmlFor={`rgb_${v}`}\r\n                            className='rgb-input-label'\r\n                        >\r\n                            {v.toUpperCase()}\r\n                        </div>\r\n\r\n                        <input\r\n                            key={`${v}_slider`}\r\n                            name={`rgb_${v}_slider`}\r\n                            id={`rgb_${v}_slider`}\r\n                            type='range'\r\n                            min='0'\r\n                            max='255'\r\n                            className='rgb-input-slider'\r\n                            onChange={\r\n                                (event) => {\r\n                                    document.getElementById(`rgb_${v}`).value = event.target.value;\r\n                                    this.updateColor(this.fetchDisplayColor());\r\n                                    this.updatePreview();\r\n                                    this.updateHex();\r\n                                }\r\n                            }\r\n                            defaultValue={v === 'a' ? 255 : 0} \r\n                        />\r\n\r\n                        <input\r\n                            key={v}\r\n                            name={`rgb_${v}`}\r\n                            id={`rgb_${v}`}\r\n                            type='text'\r\n                            className='rgb-input-field'\r\n                            placeholder='0'\r\n                            onChange={\r\n                                (event) => {\r\n                                    this.updateColor(this.fetchDisplayColor());\r\n                                    this.updatePreview();\r\n                                    this.updateHex();\r\n                                }\r\n                            }\r\n                            onKeyPress={\r\n                                (event) => {\r\n                                    if (!event.key.match(/[0-9]/))\r\n                                        event.preventDefault();\r\n                                }\r\n                            }\r\n                            defaultValue={v === 'a' ? 255 : ''}\r\n                        />\r\n                    </div>\r\n                ))}\r\n\r\n                <input\r\n                    name='hex'\r\n                    id='hex'\r\n                    type='text'\r\n                    className='hex-input-field'\r\n                    placeholder='000000ff'\r\n                    onChange={\r\n                        (event) => {\r\n                            let rgba = colorize.hexToRgb(event.target.value);\r\n\r\n                            for (let k in rgba)\r\n                                document.getElementById(`rgb_${k}`).value = rgba[k];\r\n\r\n                            this.updateColor(this.fetchDisplayColor());\r\n                            this.updatePreview();\r\n                        }\r\n                    }\r\n                    onKeyPress={\r\n                        (event) => {\r\n                            if (!event.key.match(/[0-9A-Fa-f]/) || event.target.value.length >= 8)\r\n                                event.preventDefault();\r\n                        }\r\n                    }\r\n                    defaultValue='000000ff'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='side-bar-group'\r\n            >\r\n                <div\r\n                    className='container-group'\r\n                    id='color_picker_preview_container'\r\n                >\r\n                    <div\r\n                        className='color-picker-preview'\r\n                        id='color_picker_preview'\r\n                    />\r\n                    <div\r\n                        className='brush-size-preview'\r\n                        id='brush_size_preview'\r\n                    />\r\n                    <input\r\n                        className='brush-size-input'\r\n                        id='brush_size_input'\r\n                        type='text'\r\n                        defaultValue={1}\r\n                        onChange={\r\n                            (event) => {\r\n                                this.state.brush.setSize(Number(event.target.value));\r\n                            }\r\n                        }\r\n                        onKeyPress={\r\n                            (event) => {\r\n                                if (event.key.match(/[0-9]/) === null)\r\n                                    event.preventDefault();\r\n                            }\r\n                        }\r\n                    />\r\n                </div>\r\n\r\n                <Collapsable\r\n                    id='color_picker_container'\r\n                    content={this.rgbControls}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state.brush = props.brush;\r\n        this.state.brush.preview = this;\r\n\r\n        this.updateColor = props.updateColor.bind(this);\r\n        \r\n        this.fetchDisplayColor = this.fetchDisplayColor.bind(this);\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/eye-open.157d1f69.svg\";","export default __webpack_public_path__ + \"static/media/minus.e3517047.svg\";","import React from 'react';\r\n\r\nimport Collapsable from '../../fragments/Collapsable';\r\n\r\nimport eye_open from '../../../assets/eye-open.svg';\r\nimport minus from '../../../assets/minus.svg';\r\n\r\nimport '../css/side-bar/layers.css';\r\n\r\nexport default class LayerSettings extends React.Component {\r\n    state = {\r\n        layers: null\r\n    }\r\n\r\n    container = null;\r\n\r\n    updateActiveLayer = (layer) => {\r\n        let state = this.state;\r\n\r\n        state.layers.active = layer;\r\n\r\n        let i = state.layers.cache.length - 1;\r\n        while (i >= 0) {\r\n            if (i !== layer)\r\n                document.getElementById(`layer_${i}`).classList.remove('layer-item-selected');\r\n            else\r\n                document.getElementById(`layer_${i}`).classList.add('layer-item-selected');\r\n            i--;\r\n        }\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    updateLayerViewable = (index) => {\r\n        let state = this.state;\r\n\r\n        state.layers.get(index).toggle();\r\n\r\n        document.getElementById(`layer_${index}_viewable`).classList.toggle('layer-item-viewable');\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    layerMovementButtons = (index, max) => {\r\n        return (\r\n            <div\r\n                className='layer-item-movement-group'\r\n            >\r\n                <div\r\n                    id='layer_item_move_up'\r\n                    className={`layer-item-movement-button${index === 0 ? ' hidden' : ''}`}\r\n                    onClick={\r\n                        () => {\r\n                            let state = this.state;\r\n                            state.layers.move(index, index - 1);\r\n                            this.setState(state);\r\n                            this.updateActiveLayer(index - 1);\r\n                        }\r\n                    }\r\n                >\r\n                    /\\\r\n                </div>\r\n                <div\r\n                    id='layer_item_move_down'\r\n                    className={`layer-item-movement-button${index === max ? ' hidden' : ''}`}\r\n                    onClick={\r\n                        () => {\r\n                            let state = this.state;\r\n                            state.layers.move(index, index + 1);\r\n                            this.setState(state);\r\n                            this.updateActiveLayer(index + 1);\r\n                        }\r\n                    }\r\n                >\r\n                    \\/\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    refresh = () => {\r\n        this.container = document.getElementById('layers_controls_container');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n\r\n        this.updateActiveLayer(0);\r\n    }\r\n\r\n    layerControls = () => {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.layers.cache.map((layer, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className={`layer-item${index === this.state.layers.active ? ' layer-item-selected' : ''}`}\r\n                            id={`layer_${index}`}\r\n                            onClick={\r\n                                (event) => {\r\n                                    // if (event.target.childNodes > 0)\r\n                                        this.updateActiveLayer(index);\r\n                                }\r\n                            }\r\n                        >\r\n                            {this.layerMovementButtons(index, this.state.layers.cache.length - 1)}\r\n                            <input\r\n                                type='text'\r\n                                className='layer-item-title'\r\n                                placeholder={`Layer ${index + 1}`}\r\n                                value={layer.name}\r\n                                onChange={\r\n                                    (event) => {\r\n                                        let state = this.state;\r\n                                        state.layers.get(index).name = event.target.value;\r\n                                        this.setState(state);\r\n                                    }\r\n                                }\r\n                            />\r\n                            <img\r\n                                src={eye_open}\r\n                                alt='Hide'\r\n                                className='layer-item-button'\r\n                                id={`layer_${index}_viewable`}\r\n                                onClick={\r\n                                    () => {\r\n                                        this.updateLayerViewable(index);\r\n                                    }\r\n                                }\r\n                            />\r\n                            <img\r\n                                src={minus}\r\n                                alt='Remove'\r\n                                className='layer-item-button'\r\n                                onClick={\r\n                                    () => {\r\n                                        let state = this.state;\r\n                                        state.layers = state.layers.remove(index);\r\n                                        this.setState(this.state);\r\n                                    }\r\n                                }\r\n                            />\r\n                        </div>\r\n                    ))\r\n                }\r\n                <div\r\n                    className='layer-add-item'\r\n                    onClick={\r\n                        () => {\r\n                            this.state.layers.add();\r\n                            this.setState(this.state);\r\n                        }\r\n                    }\r\n                >\r\n                    Add Layer\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='side-bar-group'\r\n            >\r\n                <Collapsable\r\n                    id='layer_container'\r\n                    content={this.layerControls}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state.layers = props.layers;\r\n\r\n        this.updateActiveLayer = this.updateActiveLayer.bind(this);\r\n        this.updateLayerViewable = this.updateLayerViewable.bind(this);\r\n        this.layerMovementButtons = this.layerMovementButtons.bind(this);\r\n    }\r\n}","import React from \"react\";\r\n\r\nimport './css/sidebar.css';\r\nimport './css/debug.css';\r\n\r\nimport ColorSettings from \"./side-bar/ColorSettings\";\r\nimport LayerSettings from \"./side-bar/LayerSettings\";\r\n\r\nexport default class SideBar extends React.Component {\r\n\r\n    state = {\r\n        editor: null,\r\n        brush: null,\r\n        layers: null,\r\n        /**\r\n         * @type {HTMLElement}\r\n        */\r\n        container: null,\r\n        /**\r\n         * @type {DOMRect}\r\n         */\r\n        origin: null,\r\n        moving: null\r\n    }\r\n\r\n    updateColor;\r\n\r\n    group = (title, component) => {\r\n        return (\r\n            <div>\r\n                <div\r\n                    className='side-bar-group-title'\r\n                >\r\n                    {title}\r\n                </div>\r\n                {component}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let state = this.state;\r\n        state.container = document.getElementById('side_bar_container');\r\n        state.origin = state.container.parentElement.getBoundingClientRect();\r\n        console.log(state.origin.right)\r\n        state.container.style.left = `${state.origin.right - state.container.getBoundingClientRect().width}px`;\r\n        state.container.style.top = `${state.origin.y}px`;\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    move = (event) => {\r\n        if (this.state.moving === null)\r\n            return;\r\n\r\n        let state = this.state;\r\n        \r\n        let x = event.clientX - state.moving.x;\r\n        let y = event.clientY - state.moving.y;\r\n        let bounds = state.container.getBoundingClientRect();\r\n\r\n        if (x > 0 && x + bounds.width < window.innerWidth)\r\n            state.container.style.left = `${x}px`;\r\n        if (y > 0 && y + bounds.height < window.innerHeight)\r\n            state.container.style.top = `${y}px`;\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='side-bar-container'\r\n                id='side_bar_container'\r\n                onMouseDown={(event) => {\r\n                    let state = this.state;\r\n                    let bounds = state.container.getBoundingClientRect();\r\n\r\n                    let mx = event.clientX - bounds.x;\r\n                    let my = event.clientY - bounds.y;\r\n\r\n                    if (my > 16)\r\n                        return;\r\n\r\n                    state.moving = { x: mx, y: my };\r\n                    this.setState(state);\r\n                }}\r\n                onMouseUp={() => {\r\n                    let state = this.state;\r\n                    state.moving = null;\r\n                    this.setState(state);\r\n                }}\r\n                onMouseLeave={() => {\r\n                    let state = this.state;\r\n                    state.moving = null;\r\n                    this.setState(state);\r\n                }}\r\n                onMouseMove={this.move}\r\n            >\r\n                <ul\r\n                    className='side-bar-group-list'\r\n                >\r\n                    <li className='side-bar-group'>\r\n                        {this.group(\r\n                            'COLORS',\r\n                            <ColorSettings\r\n                                updateColor={this.updateColor}\r\n                                brush={this.state.brush}\r\n                            />\r\n                        )}\r\n                    </li>\r\n                    <li className='side-bar-group'>\r\n                        {this.group(\r\n                            'LAYERS',\r\n                            <LayerSettings\r\n                                layers={this.state.layers}\r\n                            />\r\n                        )}\r\n                    </li>\r\n                    <li className='side-bar-group'>\r\n                        <div\r\n                            className='debug'\r\n                            id='debug'\r\n                        />\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state.editor = props.editor;\r\n        this.state.brush = props.editor.brush;\r\n        this.state.layers = props.editor.layers;\r\n        this.updateColor = props.updateColor;\r\n    }\r\n}","import React from 'react';\r\nimport * as PIXI from 'pixi.js';\r\n\r\nimport { editor } from '../../app/texture-editor/editor';\r\n\r\nimport Ribbon from './Ribbon';\r\nimport Brushes from './Brushes';\r\nimport SideBar from './SideBar';\r\n\r\nimport mouse from '../../app/texture-editor/common/Mouse';\r\n\r\nimport './css/texture-editor.css';\r\n\r\nlet mouseMove_timeout = null;\r\n\r\nexport default class TextureEditor extends React.Component {\r\n    state = {\r\n        app: null,\r\n        canvas: null,\r\n        doBoundUpdate: true,\r\n        editor\r\n    }\r\n\r\n    getCanvas = () => {\r\n        let parent = document.getElementById('texture_editor_wrapper');\r\n\r\n        let scale = parent.getBoundingClientRect().height < parent.getBoundingClientRect().width\r\n            ? parent.getBoundingClientRect().height * 0.9\r\n            : parent.getBoundingClientRect().width * 0.9;\r\n\r\n        let state = this.state;\r\n\r\n        state.app = new PIXI.Application({\r\n            width: scale,\r\n            height: scale\r\n        });\r\n\r\n        state.editor = editor.create(state.app, 16);\r\n\r\n        state.app.view.oncontextmenu = (e) => { e.preventDefault(); e.stopPropagation(); }\r\n        state.app.view.id = \"editor\";\r\n\r\n        state.canvas = state.editor.startup();\r\n\r\n        parent.appendChild(state.canvas);\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getCanvas();\r\n        this.state.editor.updateBounds();\r\n\r\n        document.addEventListener('mousemove', (event) => {\r\n            mouse.position.document.x = event.clientX;\r\n            mouse.position.document.y = event.clientY;\r\n\r\n            mouse.position.old = {\r\n                x: Math.floor(mouse.position.x),\r\n                y: Math.floor(mouse.position.y)\r\n            };\r\n\r\n            mouse.position.x = Math.floor(event.clientX - this.state.editor.bounds.left);\r\n            mouse.position.y = Math.floor(event.clientY - this.state.editor.bounds.top);\r\n\r\n            mouse.moving = true;\r\n\r\n            if (mouseMove_timeout)\r\n                clearTimeout(mouseMove_timeout);\r\n\r\n            mouseMove_timeout = setTimeout(() => {\r\n                mouse.position.old = {\r\n                    x: Math.floor(mouse.position.x),\r\n                    y: Math.floor(mouse.position.y)\r\n                };\r\n                mouse.moving = false;\r\n            }, 30);\r\n        });\r\n\r\n        this.state.canvas.addEventListener('mousedown', (event) => {\r\n            mouse.button.state = true;\r\n            mouse.button.id = event.button;\r\n        });\r\n\r\n        this.state.canvas.addEventListener('mouseup', () => {\r\n            mouse.button.state = false;\r\n            mouse.button.id = null;\r\n        });\r\n\r\n        this.state.canvas.addEventListener('mouseleave', () => mouse.inBounds = false);\r\n\r\n        this.state.canvas.addEventListener('mouseenter', () => mouse.inBounds = true);\r\n\r\n        this.state.canvas.addEventListener('click', () => mouse.clicked = true);\r\n\r\n        window.addEventListener('resize', () => this.state.editor.updateBounds());\r\n    }\r\n\r\n    fetchBrush() {\r\n        return this.state.editor.brush;\r\n    }\r\n\r\n    updateColor(clr) {\r\n        let state = this.state;\r\n\r\n        let color = state.editor.brush.getColor();\r\n\r\n        for (let k in clr)\r\n            color[k] = clr[k] === '' ? 0 : Number(clr[k]);\r\n\r\n        state.editor.brush.setColor(color);\r\n        \r\n        this.setState(state);\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='editor-container'\r\n            >\r\n                <Brushes \r\n                    editor={this.state.editor}\r\n                />\r\n\r\n                <div\r\n                    className='texture-editor-container'\r\n                    id='texture_editor_container'\r\n                >\r\n                    <Ribbon\r\n                        editor={this.state.editor}\r\n                    />\r\n\r\n                    <div\r\n                        className='texture-editor-wrapper'\r\n                        id='texture_editor_wrapper'\r\n                    />\r\n\r\n                    <div\r\n                        className='texture-editor-controls'\r\n                    >\r\n                        <label\r\n                            htmlFor='texture-name-input'\r\n                        >\r\n                            File name:\r\n                        </label>\r\n                        <input\r\n                            type='text'\r\n                            name='texture-name-input'\r\n                            id='image_name'\r\n                            defaultValue='texture'\r\n                            onKeyPress={\r\n                                (event) => {\r\n                                    if (!event.key.match(/[\\w\\d.()]/))\r\n                                        event.preventDefault();\r\n                                }\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <SideBar\r\n                    editor={this.state.editor}\r\n                    updateColor={this.updateColor}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.updateColor = this.updateColor.bind(this);\r\n        this.fetchBrush = this.fetchBrush.bind(this);\r\n    }\r\n}","import './styles/App.css';\r\n\r\n// import { ConfigForm } from './components/ConfigGUI';\r\nimport TextureEditor from './components/editor/TextureEditor';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <TextureEditor />\r\n      {/* <ConfigForm /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nimport '../styles/nav-bar.css'\r\n\r\nexport default class NavBar extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <div className='nav-bar'>\r\n                {/* <div className='nav-bar-button'>Button 1</div>\r\n                <div className='nav-bar-button'>Button 2</div>\r\n                <div className='nav-bar-button'>Button 3</div>\r\n                <div className='nav-bar-button'>Button 4</div>\r\n                <div className='nav-bar-button'>Button 5</div> */}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport NavBar from './components/NavBar';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <header>\r\n      <NavBar />\r\n    </header>\r\n    <main>\r\n      <App />\r\n    </main>\r\n    <footer>\r\n      <div>Built by ChrisOfNormandy.</div>\r\n      <div>Join <a href='https://discord.gg/EW5JsGJfdt'>Discord</a></div>\r\n    </footer>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}