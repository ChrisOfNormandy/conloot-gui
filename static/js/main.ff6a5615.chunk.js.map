{"version":3,"sources":["app/texture-editor/common/Mouse.js","app/texture-editor/helpers/colorize.js","app/texture-editor/helpers/Layer.js","app/texture-editor/editor.js","app/texture-editor/helpers/distance.js","components/Menu.js","components/editor/Ribbon.js","components/fragments/Floater.js","assets/pencil.svg","components/editor/Brushes.js","assets/paintbrush.svg","assets/eraser.svg","app/common/collapseController.js","components/fragments/Collapsable.js","components/editor/side-bar/ColorSettings.js","assets/eye-open.svg","assets/minus.svg","components/editor/side-bar/LayerSettings.js","components/editor/SideBar.js","components/editor/TextureEditor.js","App.js","reportWebVitals.js","components/NavBar.js","index.js"],"names":["mouse","position","x","y","old","document","button","state","id","origin","displacement","getPosition","offset","inBounds","moving","clicked","decToHex","c","hex","Number","toString","length","hexToDec","parseInt","rgbToHex","r","g","b","a","rgbColorToHex","color","interpolate","v1","v2","Math","floor","calculatePixelColor","color1","color2","Layer","editor","name","visable","opacity","pixels","clear","forEach","pixel","setPixel","getPixel","resolution","changed","toggle","refresh","updatePixel","ignoreChange","alpha","colorize","this","arr","layers","cache","map","layer","index","includes","loader","PIXI","shared","Graphics","_","app","display","backgroundGroup","imageGroup","gridGroup","width","height","scale","debug","enabled","element","getElementById","update","pos","image","innerHTML","JSON","stringify","brush","cursor","size","style","zoomSettings","value","dx","dy","fill","mousePos","graphic","focus","preview","getStyle","setStyle","tint","getColor","setColor","getSize","setSize","updateCursor","updateColor","updateSize","active","get","getActive","add","push","remove","splice","reload","move","newIndex","bounds","doUpdate","view","getBoundingClientRect","startup","onReady","ticker","draw","setup","console","log","load","grid","show","stage","removeChild","addChild","classList","contains","buffer","i","buf","pos1","pos2","filled","tollerance","abs","checkColor","round","beginFill","drawRect","endFill","col","compose","canvas","createElement","context","getContext","imgData","createImageData","v","data","putImageData","url","toDataURL","link","href","setAttribute","click","zoom","amount","create","children","bgPixel","line","lineStyle","moveTo","lineTo","Menu","props","className","hidden","content","item","Ribbon","key","onClick","htmlFor","type","onChange","event","target","checked","setState","componentDidMount","ribbonContent","addEventListener","obj","parentElement","render","menu","setResolution","bind","preventDefault","res","isNaN","React","Component","GetContent","container","onMouseDown","mx","clientX","my","clientY","onMouseUp","onMouseMove","parentBounds","left","right","top","bottom","brushes","icon","pencil","Brushes","src","alt","Floater","controls","error","maxHeight","scrollHeight","onLoad","con","collapseController","ColorSettings","previewElem","updatePreview","rgba","backgroundColor","updateRgb","k","updateHex","fetchDisplayColor","rgbControls","toUpperCase","min","max","defaultValue","placeholder","onKeyPress","match","rgb","split","Collapsable","LayerSettings","updateActiveLayer","updateLayerViewable","layerMovementButtons","layerControls","eye_open","minus","SideBar","list","mouseMove_timeout","TextureEditor","doBoundUpdate","getCanvas","parent","backgroundAlpha","oncontextmenu","e","stopPropagation","appendChild","clearTimeout","setTimeout","window","onWheel","deltaY","fetchBrush","clr","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NavBar","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.ff6a5615.chunk.js","sourcesContent":["const mouse = {\r\n    position: {\r\n        x: 0,\r\n        y: 0,\r\n        old: { x: 0, y: 0 },\r\n        document: {\r\n            x: 0, y: 0\r\n        }\r\n    },\r\n    button: {\r\n        state: false,\r\n        id: 0,\r\n        origin: { x: null, y: null }\r\n    },\r\n    displacement: () => {\r\n        return {\r\n            x: mouse.position.old.x === null ? 0 : mouse.position.x - mouse.position.old.x,\r\n            y: mouse.position.old.y === null ? 0 : mouse.position.y - mouse.position.old.y\r\n        }\r\n    },\r\n    getPosition: (offset = null) => {\r\n        return offset === null\r\n        ?\r\n        {\r\n            x: mouse.position.x,\r\n            y: mouse.position.y\r\n        }\r\n        :\r\n        {\r\n                x: mouse.position.x - offset.x,\r\n                y: mouse.position.y - offset.y\r\n        }\r\n    },\r\n    inBounds: false,\r\n    moving: false,\r\n    clicked: false\r\n};\r\n\r\nexport default mouse;","function decToHex(c) {\r\n    var hex = Number(c).toString(16);\r\n    return hex.length === 1 ? `0${hex}` : hex;\r\n}\r\n\r\nfunction hexToDec(c) {\r\n    return parseInt(c, 16);\r\n}\r\n\r\nfunction rgbToHex(r, g, b, a = null) {\r\n    return Number(`0x${decToHex(r)}${decToHex(g)}${decToHex(b)}${a !== null ? decToHex(a) : ''}`);\r\n}\r\n\r\nfunction rgbToHexString(r, g, b, a = null) {\r\n    return `${decToHex(r)}${decToHex(g)}${decToHex(b)}${a !== null ? decToHex(a) : ''}`;\r\n}\r\n\r\nfunction hexToRgb(hex) {\r\n    switch (hex.length) {\r\n        case 0: return {r: 0, g: 0, b:0, a: 255}\r\n        case 1: return {r: hexToDec(hex), g: hexToDec(hex), b: hexToDec(hex), a: 255}\r\n        case 3: {\r\n            let rgb = hex.split('');\r\n            return { r: hexToDec(`${rgb[0] + rgb[0]}`), g: hexToDec(`${rgb[1] + rgb[1]}`), b: hexToDec(`${rgb[2] + rgb[2]}`), a: 255 }\r\n        }\r\n        case 4: {\r\n            let rgba = hex.split('');\r\n            return { r: hexToDec(`${rgba[0] + rgba[0]}`), g: hexToDec(`${rgba[1] + rgba[1]}`), b: hexToDec(`${rgba[2] + rgba[2]}`), a: hexToDec(`${rgba[3] + rgba[3]}`) }\r\n        }\r\n        case 6: {\r\n            let rgb = hex.split('');\r\n            return { r: hexToDec(`${rgb[0] + rgb[1]}`), g: hexToDec(`${rgb[2] + rgb[3]}`), b: hexToDec(`${rgb[4] + rgb[5]}`) }\r\n        }\r\n        case 8: {\r\n            let rgb = hex.split('');\r\n            return { r: hexToDec(`${rgb[0] + rgb[1]}`), g: hexToDec(`${rgb[2] + rgb[3]}`), b: hexToDec(`${rgb[4] + rgb[5]}`), a: hexToDec(`${rgb[6] + rgb[7]}`) }\r\n        }\r\n        default: return {r: 0, g: 0, b: 0, a: 255}\r\n    }\r\n}\r\n\r\nfunction rgbToHsv(r, g, b) {\r\n    r /= 255; g /= 255; b /= 255;\r\n\r\n    let v = Math.max(r, g, b), c = v - Math.min(r, g, b);\r\n    let h = c && ((v === r) ? (g - b) / c : ((v === g) ? 2 + (b - r) / c : 4 + (r - g) / c));\r\n\r\n    return {\r\n        h: 60 * (h < 0 ? h + 6 : h),\r\n        s: v && c / v,\r\n        v\r\n    };\r\n}\r\n\r\nfunction rgbColorToHex(color) {\r\n    return rgbToHex(color.r, color.g, color.b);\r\n}\r\n\r\nfunction hsvToRgb(h, s, v) {\r\n    let r, g, b;\r\n    let i = Math.floor(h * 6);\r\n    let f = h * 6 - i;\r\n    let p = v * (1 - s);\r\n    let q = v * (1 - f * s);\r\n    let t = v * (1 - (1 - f) * s);\r\n\r\n    switch (i % 6) {\r\n        case 0: {\r\n            r = v;\r\n            g = t;\r\n            b = p;\r\n            break;\r\n        }\r\n        case 1: {\r\n            r = q;\r\n            g = v;\r\n            b = p;\r\n            break;\r\n        }\r\n        case 2: {\r\n            r = p;\r\n            g = v;\r\n            b = t;\r\n            break;\r\n        }\r\n        case 3: {\r\n            r = p;\r\n            g = q;\r\n            b = v;\r\n            break;\r\n        }\r\n        case 4: {\r\n            r = t;\r\n            g = p;\r\n            b = v;\r\n            break;\r\n        }\r\n        case 5: {\r\n            r = v;\r\n            g = p;\r\n            b = q;\r\n            break;\r\n        }\r\n        default: return null;\r\n    }\r\n\r\n    return [r * 255, g * 255, b * 255];\r\n}\r\n\r\nfunction interpolate(v1, v2, a) {\r\n    return Math.floor((v2 * a) + (v1 * (1 - a)));\r\n}\r\n\r\nfunction calculatePixelColor(color1, color2) {\r\n    if (color1.a === 0)\r\n        return color2;\r\n    if (color2.a === 0 || !color2)\r\n        return color1;\r\n\r\n    return {\r\n        r: interpolate(color1.r, color2.r, color2.a / 255),\r\n        g: interpolate(color1.g, color2.g, color2.a / 255),\r\n        b: interpolate(color1.b, color2.b, color2.a / 255),\r\n        a: (color1.a + color2.a) > 255 ? 255 : color1.a + color2.a\r\n    }\r\n}\r\n\r\nexport {\r\n    decToHex,\r\n    rgbToHex,\r\n    rgbToHexString,\r\n    hexToDec,\r\n    hexToRgb,\r\n    rgbColorToHex,\r\n    rgbToHsv,\r\n    hsvToRgb,\r\n    interpolate,\r\n    calculatePixelColor\r\n}","import * as colorize from './colorize';\r\n\r\nexport default class Layer {\r\n    editor;\r\n\r\n    resolution;\r\n\r\n    name;\r\n\r\n    visable = true;\r\n    opacity = 255;\r\n    pixels = [];\r\n\r\n    clear = () => {\r\n        this.pixels.forEach(pixel => this.setPixel(pixel.x, pixel.y, null));\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @returns {{color: { r: number, g: number, b: number, a: number }, x: number, y: number, changed: boolean}}\r\n     */\r\n    getPixel = (x, y) => {\r\n        if (this.visable)\r\n            return !this.pixels[y * this.resolution + x]\r\n                ? null\r\n                : this.pixels[y * this.resolution + x];\r\n        return {\r\n            x, y, changed: this.pixels[y * this.resolution + x].changed, color: { r: 0, g: 0, b: 0, a: 0 }\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.visable = !this.visable;\r\n        this.editor.refresh = true;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {{r: number, g: number, b: number, a: number}} color\r\n     * @param {boolean} ignoreChange\r\n     * @param {number} alpha\r\n     * @returns {{color: { r: number, g: number, b: number, a: number }, x: number, y: number, changed: boolean}}\r\n     */\r\n    updatePixel = (x, y, color, ignoreChange = false, alpha = null) => {\r\n        let pixel = this.getPixel(x, y);\r\n\r\n        if (pixel === null || (pixel.changed && !ignoreChange))\r\n            return null;\r\n\r\n        if (alpha === null) {\r\n            pixel.color = color === null ? { r: 0, g: 0, b: 0, a: 0 } : colorize.calculatePixelColor(pixel.color, color);\r\n            pixel.changed = true;\r\n        }\r\n        else\r\n            pixel.color.a = (pixel.color.a / 255) * alpha;\r\n\r\n        return pixel;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @param {{r: number, g: number, b: number, a: number}} color \r\n     * @returns {{color: { r: number, g: number, b: number, a: number }, x: number, y: number, changed: boolean}}\r\n     */\r\n    setPixel = (x, y, color = null) => {\r\n        this.pixels[y * this.resolution + x] = {\r\n            color: color === null ? { r: 0, g: 0, b: 0, a: 0 } : color,\r\n            x,\r\n            y,\r\n            changed: false\r\n        };\r\n\r\n        return this.pixels[y * this.resolution + x];\r\n    }\r\n\r\n    constructor(editor, name = null) {\r\n        this.editor = editor;\r\n        this.resolution = editor.resolution;\r\n\r\n        if (name === null) {\r\n            let arr = this.editor.layers.cache.map(layer => {\r\n                return layer.name;\r\n            });\r\n\r\n            if (!arr.length)\r\n                this.name = 'Layer 1';\r\n            else {\r\n                let index = 1;\r\n\r\n                this.name = `Layer ${index}`;\r\n\r\n                while (arr.includes(this.name)) {\r\n                    this.name = `Layer ${index}`;\r\n                    index++;\r\n                }\r\n            }\r\n        }\r\n        else\r\n            this.name = name;\r\n\r\n        for (let x = 0; x < editor.resolution; x++) {\r\n            for (let y = 0; y < editor.resolution; y++) {\r\n                this.setPixel(x, y);\r\n            }\r\n        }\r\n    }\r\n}","import * as PIXI from 'pixi.js';\r\n\r\nimport mouse from './common/Mouse';\r\n\r\nimport Layer from './helpers/Layer';\r\n\r\nimport * as colorize from './helpers/colorize';\r\nimport * as distance from './helpers/distance';\r\n\r\nconst loader = PIXI.Loader.shared,\r\n    Graphics = PIXI.Graphics;\r\n\r\nconst _ = {\r\n    /**\r\n     * @type {PIXI.Application}\r\n     */\r\n    app: null,\r\n\r\n    display: {\r\n        backgroundGroup: new PIXI.Container(),\r\n        imageGroup: new PIXI.Container(),\r\n        gridGroup: new PIXI.Container()\r\n    },\r\n\r\n    resolution: 0,\r\n\r\n    refresh: false,\r\n\r\n    width: 0,\r\n    height: 0,\r\n    scale: 0,\r\n\r\n    debug: {\r\n        enabled: true,\r\n\r\n        element: document.getElementById('debug'),\r\n\r\n        update: () => {\r\n            let pos = mouse.getPosition();\r\n            let x = Math.floor(pos.x / _.scale),\r\n                y = Math.floor(pos.y / _.scale);\r\n            let pixel = _.image.pixels[y * _.resolution + x];\r\n\r\n            if (!pixel)\r\n                return;\r\n\r\n            _.debug.element.innerHTML =\r\n                `Mouse: ${JSON.stringify(pos)} --> ${x}, ${y}<br />` +\r\n                ` - ${JSON.stringify(mouse.position.document)}<br />` +\r\n                ` - ${_.scale}<br />` +\r\n                `Brush:<br />` +\r\n                ` - Pos: ${_.brush.cursor.position.x}, ${_.brush.cursor.position.y} --> ${_.brush.cursor.position.x + _.brush.size - 1}, ${_.brush.cursor.position.y + _.brush.size - 1}<br />` +\r\n                ` - Style: ${_.brush.style}<br />` +\r\n                `Cursor: ${JSON.stringify(_.brush.cursor.position)}<br />` +\r\n                `Zoom: ${_.zoomSettings.width}, ${_.zoomSettings.height} | ${_.zoomSettings.value}<br />` +\r\n                ` - ${JSON.stringify(_.zoomSettings.offset)}`;\r\n        },\r\n    },\r\n\r\n    offset: {\r\n        x: 0,\r\n        y: 0,\r\n        dx: 0,\r\n        dy: 0\r\n    },\r\n\r\n    zoomSettings: {\r\n        scale: 0,\r\n        width: 0,\r\n        height: 0,\r\n        offset: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        value: 0\r\n    },\r\n\r\n    brush: {\r\n        style: 'pencil',\r\n        fill: {\r\n            r: 0, g: 0, b: 0, a: 255\r\n        },\r\n        size: 1,\r\n\r\n        mousePos: null,\r\n        cursor: {\r\n            position: {\r\n                x: 0,\r\n                y: 0,\r\n                old: {\r\n                    x: 0,\r\n                    y: 0\r\n                }\r\n            },\r\n            /**\r\n             * @type {PIXI.Graphics}\r\n             */\r\n            graphic: null,\r\n            focus: null,\r\n        },\r\n\r\n        preview: null,\r\n\r\n        getStyle: () => {\r\n            return _.brush.style;\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @param {string} style \r\n         */\r\n        setStyle: (style) => {\r\n            switch (style) {\r\n                case 'eraser': {\r\n                    _.brush.cursor.graphic.tint = 0xFFFFFF;\r\n                    _.brush.cursor.graphic.alpha = 1;\r\n\r\n                    break;\r\n                }\r\n                // eslint-disable-next-line\r\n                case 'fill': {}\r\n                // eslint-disable-next-line\r\n                case 'color-picker': {\r\n                    _.brush.cursor.graphic.alpha = 0;\r\n\r\n                    break;\r\n                }\r\n                default: {\r\n                    _.brush.cursor.graphic.tint = colorize.rgbToHex(_.brush.fill.r, _.brush.fill.g, _.brush.fill.b);\r\n                    _.brush.cursor.graphic.alpha = _.brush.fill.a / 255;\r\n                    \r\n                    break;\r\n                }\r\n            }\r\n\r\n            _.brush.style = style;\r\n        },\r\n\r\n        getColor: () => {\r\n            return {\r\n                r: _.brush.fill.r,\r\n                g: _.brush.fill.g,\r\n                b: _.brush.fill.b,\r\n                a: _.brush.fill.a\r\n            };\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @param {{r: number, g: number, b: number, a: number}} color \r\n         */\r\n        setColor: (color) => {\r\n            _.brush.cursor.graphic.tint = colorize.rgbToHex(color.r, color.g, color.b);\r\n            _.brush.cursor.graphic.alpha = color.a / 255;\r\n\r\n            _.brush.fill = color;\r\n        },\r\n\r\n        getSize: () => {\r\n            return _.brush.size;\r\n        },\r\n\r\n        setSize: (size) => {\r\n            _.brush.size = size;\r\n        },\r\n\r\n        updateCursor: (updateColor = false, updateSize = false) => {\r\n            _.brush.mousePos = mouse.getPosition();\r\n\r\n            _.brush.mousePos.x -= (_.zoomSettings.offset.x + _.offset.x);\r\n            _.brush.mousePos.y -= (_.zoomSettings.offset.y + _.offset.y);\r\n\r\n            _.brush.cursor.position.old.x = _.brush.cursor.position.x;\r\n            _.brush.cursor.position.old.y = _.brush.cursor.position.y;\r\n\r\n            _.brush.cursor.position.x = Math.floor(((_.brush.mousePos.x) - (_.brush.size - 1) / 2 * _.scale) / _.scale);\r\n            _.brush.cursor.position.y = Math.floor(((_.brush.mousePos.y) - (_.brush.size - 1) / 2 * _.scale) / _.scale);\r\n\r\n            if (_.brush.cursor.position.old.x !== _.brush.cursor.position.x || _.brush.cursor.position.old.y !== _.brush.cursor.position.y) {\r\n                _.brush.cursor.graphic.x = _.brush.cursor.position.x * _.scale + _.zoomSettings.offset.x + _.offset.x;\r\n                _.brush.cursor.graphic.y = _.brush.cursor.position.y * _.scale + _.zoomSettings.offset.y + _.offset.y;\r\n            }\r\n\r\n            if (updateColor) {\r\n                _.brush.cursor.graphic.tint = colorize.rgbToHex(_.brush.fill.r, _.brush.fill.g, _.brush.fill.b);\r\n                _.brush.cursor.graphic.alpha = _.brush.fill.a / 255;\r\n            }\r\n\r\n            if (updateSize) {\r\n                _.brush.cursor.graphic.width = _.scale * _.brush.size;\r\n                _.brush.cursor.graphic.height = _.scale * _.brush.size;\r\n            }            \r\n        }\r\n    },\r\n\r\n    layers: {\r\n        /**\r\n         * @type {Layer[]}\r\n         */\r\n        cache: [],\r\n\r\n        active: 0,\r\n\r\n        /**\r\n         * \r\n         * @param {number} layer \r\n         * @returns {Layer}\r\n         */\r\n        get: (layer) => {\r\n            return _.layers.cache[layer];\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @returns {Layer}\r\n         */\r\n        getActive: () => {\r\n            return _.layers.cache[_.layers.active];\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @returns {Layer}\r\n         */\r\n        add: () => {\r\n            let index = _.layers.cache.length;\r\n            let layer = new Layer(editor);\r\n\r\n            _.layers.cache.push(layer);\r\n            _.layers.active = index;\r\n\r\n            return layer;\r\n        },\r\n\r\n        remove: (index = -1) => {\r\n            _.layers.cache.splice(index, 1);\r\n            _.layers.reload();\r\n\r\n            return _.layers;\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @param {number} index \r\n         * @param {number} newIndex \r\n         * @returns {Layer}\r\n         */\r\n        move: (index, newIndex) => {\r\n            let layer = _.layers.cache.splice(index, 1)[0];\r\n\r\n            _.layers.cache.splice(newIndex, 0, layer);\r\n            _.layers.reload();\r\n\r\n            return layer;\r\n        },\r\n\r\n        clear: () => {\r\n            _.layers.cache = [];\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @param {number} layer \r\n         */\r\n        toggle: (layer) => {\r\n            _.layers.cache[layer].visable = !_.layers.cache[layer].visable;\r\n            _.layers.reload();\r\n        },\r\n\r\n        reload: () => {\r\n            _.refresh = true;\r\n        }\r\n    },\r\n\r\n    bounds: {\r\n        doUpdate: false,\r\n\r\n        /**\r\n         * @type {DOMRect}\r\n         */\r\n        value: null,\r\n\r\n        /**\r\n         * \r\n         * @returns {DOMRect}\r\n         */\r\n        update: () => {\r\n            _.bounds.value = _.app.view.getBoundingClientRect();\r\n            _.bounds.doUpdate = false;\r\n\r\n            return _.bounds.value;\r\n        }\r\n    },    \r\n\r\n    /**\r\n     * \r\n     * @returns {HTMLCanvasElement}\r\n     */\r\n    startup: () => {\r\n        _.onReady(() => _.app.ticker.add(() => _.draw()));\r\n\r\n        return _.app.view;\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {()} setup \r\n     */\r\n    onReady: (setup) => {\r\n        console.log('App ready. Loading.');\r\n\r\n        loader\r\n            .load(setup);\r\n    },\r\n\r\n    grid: {\r\n        enabled: false,\r\n\r\n        show: () => {\r\n            _.app.stage.removeChild(_.display.gridGroup);\r\n            _.app.stage.addChild(_.display.gridGroup);\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @returns {boolean}\r\n         */\r\n        toggle: () => {\r\n            _.grid.enabled = !_.grid.enabled;\r\n\r\n            if (_.grid.enabled)\r\n                _.app.stage.addChild(_.display.gridGroup);\r\n            else\r\n                _.app.stage.removeChild(_.display.gridGroup);\r\n\r\n            return _.grid.enabled;\r\n        },\r\n    },    \r\n\r\n    draw: () => {\r\n        if (_.debug.element === null) {\r\n            _.debug.element = document.getElementById('debug');\r\n            return;\r\n        }\r\n\r\n        if (_.debug.enabled) {\r\n            if (_.debug.element.classList.contains('hidden'))\r\n                _.debug.element.classList.remove('hidden');\r\n\r\n            _.debug.update();\r\n        }\r\n        else if (!_.debug.element.classList.contains('hidden'))\r\n            _.debug.element.classList.add('hidden')\r\n\r\n        if (_.refresh) {\r\n            _.image.pixels.forEach(pixel => {\r\n                _.image.updatePixel(pixel.x, pixel.y);\r\n\r\n                _.app.stage.removeChild(pixel.graphic);\r\n                _.app.stage.addChild(pixel.graphic);\r\n            });\r\n\r\n            _.app.stage.removeChild(_.brush.cursor.graphic);\r\n            _.app.stage.addChild(_.brush.cursor.graphic);\r\n\r\n            if (_.grid.enabled)\r\n                _.grid.show();\r\n\r\n            _.refresh = false;\r\n\r\n            return;\r\n        }\r\n\r\n        _.image.buffer.forEach((pixel, i) => {\r\n            _.image.updatePixel(pixel.x, pixel.y);\r\n\r\n            if (pixel.changed) {\r\n                if (!mouse.button.state)\r\n                    pixel.changed = false;\r\n            }\r\n            else\r\n                _.image.buffer.splice(i, 1);\r\n        });\r\n\r\n        _.brush.updateCursor();\r\n\r\n        let layer = _.layers.getActive();\r\n        let buf;\r\n\r\n        let color, ignoreChange, alpha;\r\n\r\n        if (!!layer) {\r\n            if (mouse.clicked) {\r\n                switch(_.brush.style) {\r\n                    case 'fill': {\r\n                        let position = {\r\n                            x: _.brush.cursor.position.x,\r\n                            y: _.brush.cursor.position.y\r\n                        };\r\n\r\n                        let origin = {\r\n                            color: layer.getPixel(position.x, position.y).color\r\n                        };\r\n\r\n                        color = _.brush.getColor();\r\n                        ignoreChange = false;\r\n                        alpha = null;\r\n\r\n                        let filled = [];\r\n\r\n                        function checkColor(color1, color2, tollerance = 5) {\r\n                            return (\r\n                                Math.abs(color1.r - color2.r) <= tollerance &&\r\n                                Math.abs(color1.g - color2.g) <= tollerance &&\r\n                                Math.abs(color1.b - color2.b) <= tollerance &&\r\n                                Math.abs(color1.a - color2.a) <= tollerance\r\n                            )\r\n                        }\r\n\r\n                        function fill(pos) {\r\n                            let pixel = layer.getPixel(pos.x, pos.y);\r\n\r\n                            if (pixel === null || !checkColor(pixel.color, origin.color) || pos.x < 0 || pos.y >= _.resolution || pos.y < 0 || pos.y >= _.resolution)\r\n                                return;\r\n\r\n                            buf = filled.includes(pos) ? null : layer.updatePixel(pos.x, pos.y, color, ignoreChange, alpha);\r\n\r\n                            if (buf !== null) {\r\n                                _.image.buffer.push(buf);\r\n                                filled.push(pos);\r\n\r\n                                fill({ x: pos.x - 1, y: pos.y });\r\n                                fill({ x: pos.x + 1, y: pos.y });\r\n                                fill({ x: pos.x, y: pos.y - 1 });\r\n                                fill({ x: pos.x, y: pos.y + 1 });\r\n                            }\r\n                        }\r\n\r\n                        fill(position);\r\n                        break;\r\n                    }\r\n                    case 'color-picker': {\r\n                        let color = layer.getPixel(_.brush.cursor.position.x, _.brush.cursor.position.y).color;\r\n\r\n                        _.brush.setColor(color);\r\n                        _.brush.preview.update();\r\n                        _.brush.updateCursor(true);\r\n\r\n                        break;\r\n                    }\r\n                    default: { break; }\r\n                }\r\n            }\r\n            else if (mouse.button.state) {\r\n                if (mouse.button.id === 0) {\r\n                    switch (_.brush.style) {\r\n                        case 'fill': {}\r\n                        // eslint-disable-next-line\r\n                        case 'color-picker': { break; }\r\n                        default: {\r\n                            for (let x = _.brush.cursor.position.x < 0 ? 0 : _.brush.cursor.position.x; x < _.brush.cursor.position.x + _.brush.size && x < _.resolution; x++) {\r\n                                for (let y = _.brush.cursor.position.y < 0 ? 0 : _.brush.cursor.position.y; y < _.brush.cursor.position.y + _.brush.size && y < _.resolution; y++) {\r\n                                    switch (_.brush.style) {\r\n                                        case 'paint': {\r\n                                            color = _.brush.getColor();\r\n\r\n                                            color.a = (_.brush.fill.a / 255) * Math.floor((1 - (distance.manhattan(\r\n                                                {\r\n                                                    x: _.brush.cursor.position.x + Math.floor(_.brush.size / 2),\r\n                                                    y: _.brush.cursor.position.y + Math.floor(_.brush.size / 2)\r\n                                                },\r\n                                                {\r\n                                                    x, y\r\n                                                }\r\n                                            ) / Math.round(_.brush.size / 2))) * 255);\r\n\r\n                                            if (color.a < 0)\r\n                                                color.a = 0;\r\n\r\n                                            ignoreChange = _.brush.cursor.position.old.x !== _.brush.cursor.position.x || _.brush.cursor.position.old.y !== _.brush.cursor.position.y;\r\n                                            alpha = null;\r\n\r\n                                            break;\r\n                                        }\r\n                                        case 'eraser': {\r\n                                            color = null;\r\n                                            ignoreChange = _.brush.cursor.position.old.x !== _.brush.cursor.position.x || _.brush.cursor.position.old.y !== _.brush.cursor.position.y;\r\n                                            alpha = 0;\r\n\r\n                                            break\r\n                                        }\r\n                                        default: {\r\n                                            color = _.brush.getColor();\r\n                                            ignoreChange = false;\r\n                                            alpha = null;\r\n\r\n                                            break;\r\n                                        }\r\n                                    }\r\n\r\n                                    buf = layer.updatePixel(x, y, color, ignoreChange, alpha);\r\n\r\n                                    if (buf !== null)\r\n                                        _.image.buffer.push(buf);\r\n                                }\r\n                            }\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!mouse.inBounds)\r\n            mouse.button.state = false;\r\n\r\n        mouse.clicked = false;\r\n    },\r\n\r\n    image: {\r\n        pixels: [],\r\n        buffer: [],\r\n\r\n        setPixel: (x, y, color = null) => {\r\n            _.image.pixels[y * _.resolution + x] = {\r\n                graphic: new Graphics(),\r\n                color: color === null ? {\r\n                    r: 0,\r\n                    g: 0,\r\n                    b: 0,\r\n                    a: 0\r\n                } : color,\r\n                changed: false,\r\n                x,\r\n                y\r\n            };\r\n\r\n            _.image.pixels[y * _.resolution + x].graphic.beginFill(0xFFFFFF);\r\n            _.image.pixels[y * _.resolution + x].graphic.drawRect(0, 0, _.scale, _.scale);\r\n            _.image.pixels[y * _.resolution + x].graphic.endFill();\r\n\r\n            _.image.pixels[y * _.resolution + x].graphic.tint = colorize.rgbColorToHex(_.image.pixels[y * _.resolution + x].color);\r\n            _.image.pixels[y * _.resolution + x].graphic.alpha = _.image.pixels[y * _.resolution + x].color.a / 255;\r\n\r\n            _.image.pixels[y * _.resolution + x].graphic.x = x * _.scale;\r\n            _.image.pixels[y * _.resolution + x].graphic.y = y * _.scale;\r\n\r\n            return _.image.pixels[y * _.resolution + x];\r\n        },\r\n\r\n        getPixel: (x, y) => {\r\n            return _.image.pixels[y * _.resolution + x] || null;\r\n        },\r\n\r\n        updatePixel: (x, y) => {\r\n            if (!_.image.pixels[y * _.resolution + x])\r\n                _.image.setPixel(x, y);\r\n\r\n            let color = null;\r\n\r\n            _.layers.cache.forEach(layer => {\r\n                if (!layer.visable)\r\n                    return;\r\n\r\n                let col = layer.getPixel(x, y).color;\r\n                if (col.a === 0)\r\n                    return;\r\n\r\n                if (color === null) {\r\n                    color = col;\r\n                }\r\n                else\r\n                    color = colorize.calculatePixelColor(col, color);\r\n            });\r\n\r\n            _.image.pixels[y * _.resolution + x].color = color || { r: 0, g: 0, b: 0, a: 0 };\r\n            _.image.pixels[y * _.resolution + x].graphic.tint = colorize.rgbColorToHex(_.image.pixels[y * _.resolution + x].color);\r\n            _.image.pixels[y * _.resolution + x].graphic.alpha = _.image.pixels[y * _.resolution + x].color.a / 255;\r\n        },\r\n\r\n        compose: () => {\r\n            const canvas = document.createElement('canvas'), context = canvas.getContext('2d');\r\n            canvas.width = _.resolution;\r\n            canvas.height = _.resolution;\r\n\r\n            let imgData = context.createImageData(_.resolution, _.resolution);\r\n\r\n            let color;\r\n            for (let x = 0; x < _.resolution; x++) {\r\n                for (let y = 0; y < _.resolution; y++) {\r\n                    let v = (y * _.resolution + x) * 4;\r\n                    color = _.image.getPixel(x, y).color;\r\n\r\n                    imgData.data[v] = color.r;\r\n                    imgData.data[v + 1] = color.g;\r\n                    imgData.data[v + 2] = color.b;\r\n                    imgData.data[v + 3] = color.a;\r\n                }\r\n            }\r\n\r\n            context.putImageData(imgData, 0, 0);\r\n\r\n            const url = canvas.toDataURL('image/png');\r\n            let link = document.createElement('a');\r\n            link.href = url;\r\n\r\n            let name = document.getElementById('image_name').value;\r\n            link.setAttribute('download', `${!!name ? name : 'texture'}.png`);\r\n            link.click();\r\n        },\r\n\r\n        clear: () => {\r\n            _.layers.cache.forEach(layer => layer.clear());\r\n            _.refresh = true;\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * \r\n     * @param {boolean} amount \r\n     */\r\n    zoom: (amount) => {\r\n        if ((amount && _.zoomSettings.scale <= -9) || (!amount && _.zoomSettings.scale >= 20))\r\n            return;\r\n\r\n        _.zoomSettings.scale += amount ? -1 : 1;\r\n\r\n        _.zoomSettings.value = _.zoomSettings.scale < 0 ? (10 + _.zoomSettings.scale) / 10 : 1 + _.zoomSettings.scale / 10;\r\n\r\n        _.zoomSettings.width = (_.app.view.width < _.app.view.height ? _.app.view.width : _.app.view.height) * _.zoomSettings.value;\r\n        _.zoomSettings.height = _.zoomSettings.width;\r\n        _.zoomSettings.offset.x = (_.app.view.width - _.zoomSettings.width) / 2;\r\n        _.zoomSettings.offset.y = (_.app.view.height - _.zoomSettings.height) / 2;\r\n\r\n        for (let g in _.display) {\r\n            _.display[g].width = _.zoomSettings.width;\r\n            _.display[g].height = _.zoomSettings.height;\r\n            _.display[g].x = _.zoomSettings.offset.x;\r\n            _.display[g].y = _.zoomSettings.offset.y;\r\n        }\r\n\r\n        _.scale = (_.display.imageGroup.width < _.display.imageGroup.height ? _.display.imageGroup.width : _.display.imageGroup.height) / _.resolution;\r\n\r\n        _.scale *= _.zoomSettings.value;\r\n\r\n        _.brush.updateCursor(false, true);\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {PIXI.Application} app \r\n     */\r\n    create: (app, resolution = 16) => {\r\n        if (_.app !== null)\r\n            while (_.app.stage.children[0])\r\n                _.app.stage.removeChild(_.app.stage.children[0]);\r\n\r\n        _.app = app;\r\n\r\n        _.resolution = resolution\r\n\r\n        _.width = app.view.width;\r\n        _.height = app.view.height;\r\n        _.scale = (_.width < _.height ? _.width : _.height) / _.resolution;\r\n\r\n        _.image.pixels = [];\r\n\r\n        _.layers.clear();\r\n        _.layers.add();\r\n\r\n        _.brush.cursor.graphic = new Graphics();\r\n        _.brush.cursor.graphic.beginFill(0xFFFFFF);\r\n        _.brush.cursor.graphic.drawRect(0, 0, _.scale, _.scale);\r\n        _.brush.cursor.graphic.endFill();\r\n\r\n        let layer = _.layers.get(_.layers.active);\r\n\r\n        let bgPixel;\r\n        for (let x = 0; x < _.resolution; x++) {\r\n            for (let y = 0; y < _.resolution; y++) {\r\n                bgPixel = new Graphics();\r\n                bgPixel.beginFill(0xFFFFFF);\r\n                bgPixel.drawRect(0, 0, _.scale, _.scale);\r\n                bgPixel.endFill();\r\n\r\n                bgPixel.tint = (x % 2 === 0 && y % 2 === 1) || (x % 2 === 1 && y % 2 === 0) ? 0xFFFFFF : 0xDDDDDD;\r\n\r\n                bgPixel.x = x * _.scale;\r\n                bgPixel.y = y * _.scale;\r\n\r\n                _.display.backgroundGroup.addChild(bgPixel);\r\n\r\n                _.display.imageGroup.addChild(_.image.setPixel(x, y).graphic);\r\n\r\n                layer.setPixel(x, y, _.image.pixels[y * _.resolution + x].color);\r\n\r\n                let line = new PIXI.Graphics();\r\n                line.lineStyle(1, 0x000000, 1);\r\n                line.moveTo(0, y * _.scale);\r\n                line.lineTo(_.resolution * _.scale, y * _.scale);\r\n\r\n                _.display.gridGroup.addChild(line);\r\n            }\r\n\r\n            let line = new PIXI.Graphics();\r\n            line.lineStyle(1, 0x000000, 1);\r\n            line.moveTo(x * _.scale, 0);\r\n            line.lineTo(x * _.scale, _.resolution * _.scale);\r\n\r\n            _.display.gridGroup.addChild(line);\r\n        }\r\n\r\n        _.offset.x = _.width / 2 - (_.resolution * _.scale) / 2;\r\n        _.offset.y = _.height / 2 - (_.resolution * _.scale) / 2;\r\n\r\n        for (let g in _.display) {\r\n            _.display[g].x = _.offset.x;\r\n            _.display[g].y = _.offset.y;\r\n        }\r\n\r\n        _.brush.updateCursor(true, true);\r\n\r\n        _.app.stage.addChild(_.display.backgroundGroup, _.display.imageGroup);\r\n\r\n        _.app.stage.addChild(_.brush.cursor.graphic);\r\n\r\n        _.zoom(true);\r\n\r\n        return _;\r\n    }\r\n}\r\n\r\nconst editor = _;\r\n\r\nexport {\r\n    editor\r\n}","function manhattan(pos1, pos2) {\r\n    return Math.abs(pos2.x - pos1.x) + Math.abs(pos2.y - pos1.y);\r\n}\r\n\r\nfunction euclidean(pos1, pos2) {\r\n    return Math.sqrt((pos2.x - pos1.x) * (pos2.x - pos1.x) + (pos2.y - pos1.y) * (pos2.y - pos1.y));\r\n}\r\n\r\nexport {\r\n    manhattan,\r\n    euclidean\r\n}","function Menu(props) {\r\n    return (\r\n        <div\r\n            id={props.id}\r\n            className={`menu${!!props.hidden ? ' hidden' : ''}`}\r\n        >\r\n            {props.content.map((item, i) => (\r\n                <div\r\n                    className='menu-item'\r\n                    key={i}\r\n                >\r\n                    {item}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\n\r\nimport Menu from '../Menu';\r\n\r\nimport './styles/ribbon.css';\r\n\r\nexport default class Ribbon extends React.Component {\r\n\r\n    state = {\r\n        editor: null,\r\n        content: [\r\n        {\r\n            key: \"File\",\r\n            id: 'file_menu',\r\n            value: (<Menu\r\n                content={[\r\n                    (<div\r\n                        className='menu-button'\r\n                        onClick={\r\n                            () => this.state.editor.image.compose()\r\n                        }\r\n                    >\r\n                        Download\r\n                    </div>),\r\n                    // (<div\r\n                    //     className='menu-break'\r\n                    // />),\r\n                    // (<form\r\n                    //     className='menu-button'\r\n                    // >\r\n                    //     <input\r\n                    //         type='text'\r\n                    //         id='resolution_input'\r\n                    //         name='resolution'\r\n                    //         defaultValue='16'\r\n                    //     />\r\n                    //     <input\r\n                    //         type='submit'\r\n                    //         value='Create'\r\n                    //         onClick={this.setResolution}\r\n                    //     />\r\n                    // </form>),\r\n                    (<div\r\n                        className='menu-break'\r\n                    />),\r\n                    (<div\r\n                        className='menu-button'\r\n                    >\r\n                        <label\r\n                            id='debug_check_label'\r\n                            htmlFor='debug-check'\r\n                        >\r\n                            Debug\r\n                        </label>\r\n                        <input\r\n                            name='debug-check'\r\n                            type='checkbox'\r\n                            onChange={\r\n                                (event) => {\r\n                                    let state = this.state;\r\n                                    state.editor.debug.enabled = event.target.checked;\r\n                                    this.setState(state);\r\n                                }\r\n                            }\r\n                        />\r\n                    </div>)\r\n                ]}\r\n                id='file_menu'\r\n                hidden={true}\r\n            />)\r\n        },\r\n        {\r\n            key: \"Edit\",\r\n            id: 'edit_menu',\r\n            value: (<Menu\r\n                content={[\r\n                    (<div\r\n                        className='menu-button'\r\n                        onClick={\r\n                            () => this.state.editor.image.clear()\r\n                        }\r\n                    >\r\n                        Clear\r\n                    </div>)\r\n                ]}\r\n                id='edit_menu'\r\n                hidden={true}\r\n            />)\r\n        },\r\n        {\r\n            key: \"View\",\r\n            id: 'view_menu',\r\n            value: (\r\n                <Menu\r\n                    content={[\r\n                        (<div\r\n                            className='menu-button'\r\n                            onClick={\r\n                                () => {\r\n                                    this.state.editor.grid.toggle();\r\n                                }\r\n                            }\r\n                        >\r\n                            Toggle Grid\r\n                        </div>)\r\n                    ]}\r\n                    id='view_menu'\r\n                    hidden={true}\r\n                />\r\n            )\r\n        }\r\n    ]\r\n}\r\n\r\nsetResolution(event) {\r\n    event.preventDefault();\r\n    let res = Number(document.getElementById('resolution_input').value)\r\n    if (isNaN(res))\r\n        return;\r\n\r\n    let state = this.state;\r\n\r\n    if (res % 16 === 0 && res > 0 && res <= 128)\r\n        state.editor = state.editor.create(this.editor.app, res);\r\n\r\n    this.setState(state);\r\n}\r\n\r\n    componentDidMount = () => {\r\n        let ribbonContent = [];\r\n        this.state.content.forEach(item => ribbonContent.push(document.getElementById(item.id)));\r\n\r\n        document.addEventListener('click', (event) => {\r\n            ribbonContent.forEach(obj => {\r\n                if (!obj.parentElement.contains(event.target))\r\n                    obj.classList.add('hidden');\r\n            });\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='texture-editor-ribbon'\r\n            >\r\n                {this.state.content.map(menu => (\r\n                    <div\r\n                        key={menu.key}\r\n                        className='ribbon-menu'\r\n                    >\r\n                        <div\r\n                            className='ribbon-menu-button'\r\n                            onClick={\r\n                                () => {\r\n                                    document.getElementById(menu.id).classList.toggle('hidden');\r\n                                }\r\n                            }\r\n                        >\r\n                            {menu.key}\r\n                        </div>\r\n                        {menu.value}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state.editor = props.editor;\r\n\r\n        this.setResolution = this.setResolution.bind(this);\r\n    }\r\n}","import React from 'react';\r\n\r\nimport './styles/floater.css';\r\n\r\nfunction GetContent(props) {\r\n    return props.content();\r\n}\r\n\r\n/**\r\n * \r\n * @param {MouseEvent} event \r\n * @param {{x: number, y: number} | null} moving \r\n * @param {HTMLElement} container \r\n * @returns \r\n */\r\nfunction move (event, moving, container) {\r\n    if (moving === null)\r\n        return;\r\n\r\n    let x = event.clientX - moving.x;\r\n    let y = event.clientY - moving.y;\r\n    let bounds = container.getBoundingClientRect();\r\n    let parentBounds = container.parentElement.getBoundingClientRect();\r\n\r\n    if (x > parentBounds.left && x + bounds.width < parentBounds.right)\r\n        container.style.left = `${x}px`;\r\n    if (y > parentBounds.top && y + bounds.height < parentBounds.bottom)\r\n        container.style.top = `${y}px`;\r\n}\r\n\r\nfunction _(props) {\r\n    const id = props.id;\r\n    const content = props.content;\r\n    let moving = null;\r\n    let container = document.getElementById(id);\r\n\r\n    return (\r\n        <div\r\n            className='floater-container'\r\n            id={id}\r\n            onMouseDown={(event) => {\r\n                let bounds = container.getBoundingClientRect();\r\n\r\n                let mx = event.clientX - bounds.x;\r\n                let my = event.clientY - bounds.y;\r\n\r\n                if (my > 16)\r\n                    return;\r\n\r\n                moving = { x: mx, y: my };\r\n            }}\r\n            onMouseUp={() => {\r\n                moving = null;\r\n            }}\r\n            onMouseMove={(event) => move(event, moving, container)}\r\n        >\r\n            <GetContent content={content} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default _;","export default __webpack_public_path__ + \"static/media/pencil.e99a4c16.svg\";","import React from \"react\";\r\n\r\nimport './styles/brushes.css';\r\n\r\nimport Floater from \"../fragments/Floater\";\r\n\r\nimport pencil from '../../assets/pencil.svg';\r\nimport paintbrush from '../../assets/paintbrush.svg';\r\nimport eraser from '../../assets/eraser.svg';\r\n\r\nconst brushes = [\r\n    {\r\n        key: 'pencil',\r\n        icon: pencil\r\n    },\r\n    {\r\n        key: 'paint',\r\n        icon: paintbrush\r\n    },\r\n    {\r\n        key: 'eraser',\r\n        icon: eraser\r\n    },\r\n    {\r\n        key: 'fill',\r\n        icon: pencil\r\n    },\r\n    {\r\n        key: 'color-picker',\r\n        icon: pencil\r\n    }\r\n];\r\n\r\nexport default class Brushes extends React.Component {\r\n\r\n    state = {\r\n        editor: null,\r\n        brush: null\r\n    };\r\n\r\n    content = () => {\r\n        return (\r\n            <div\r\n                className='brushes-container'\r\n            >\r\n                {brushes.map(brush => (\r\n                    <img\r\n                        key={brush.key}\r\n                        src={brush.icon}\r\n                        className={`brush-icon${this.state.brush.getStyle() === brush.key ? ' brush-selected' : ''}`}\r\n                        id={`${brush.key}_brush`}\r\n                        alt={brush.key}\r\n                        onClick={\r\n                            () => {\r\n                                let style = this.state.brush.getStyle();\r\n                                document.getElementById(`${style}_brush`).classList.remove('brush-selected');\r\n                                this.state.brush.setStyle(brush.key);\r\n                                document.getElementById(`${brush.key}_brush`).classList.add('brush-selected');\r\n                            }\r\n                        }\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <Floater\r\n                id='brushes_container'\r\n                content={this.content}\r\n            />\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state.editor = props.editor;\r\n        this.state.brush = props.editor.brush;\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/paintbrush.f6d07354.svg\";","export default __webpack_public_path__ + \"static/media/eraser.4da23591.svg\";","function _(controls) {\r\n    if (controls === null)\r\n        return console.error('Collapsable div was null.');\r\n    controls.style.maxHeight = !controls.style.maxHeight ? controls.scrollHeight + 'px' : null;\r\n}\r\n\r\nexport default _;","import React from 'react';\r\n\r\nimport './styles/collapsable.css';\r\n\r\nimport collapseController from '../../app/common/collapseController';\r\n\r\nfunction GetContent(props) {\r\n    return props.content();\r\n}\r\n\r\nfunction _(props) {\r\n    const id = props.id;\r\n    const content = props.content;\r\n    let container = document.getElementById(id);\r\n\r\n    return (\r\n        <div\r\n            className='collapsable-container-wrapper'\r\n            onLoad={\r\n                () => {\r\n                    let con = document.getElementById(id);\r\n                    con.style.maxHeight = con.scrollHeight + 'px';\r\n                }\r\n            }\r\n        >\r\n            <div \r\n                className='collapsable-container-group container-group'\r\n                id={id}\r\n            >\r\n                <GetContent content={content} />\r\n            </div>\r\n            <div\r\n                className='collapsable-container-group-trigger'\r\n                onClick={\r\n                    () => {\r\n                        collapseController(container)\r\n                    }\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default _;","import React from 'react';\r\n\r\nimport Collapsable from '../../fragments/Collapsable';\r\n\r\nimport * as colorize from '../../../app/texture-editor/helpers/colorize';\r\n\r\nimport '../styles/side-bar/colors.css';\r\n\r\nexport default class ColorSettings extends React.Component {\r\n    state = {\r\n        brush: null\r\n    }\r\n\r\n    updateColor;\r\n\r\n    previewElem = null;\r\n    container = null;\r\n\r\n    updatePreview = () => {\r\n        let rgba = this.state.brush.getColor();\r\n        this.previewElem.style.backgroundColor = `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a / 255})`;\r\n    }\r\n\r\n    updateRgb = () => {\r\n        let color = this.state.brush.getColor();\r\n\r\n        ['r', 'g', 'b', 'a'].forEach(k => {\r\n            document.getElementById(`rgb_${k}`).value = color[k];\r\n            document.getElementById(`rgb_${k}_slider`).value = color[k];\r\n        });\r\n    }\r\n\r\n    updateHex = () => {\r\n        let hex = colorize.rgbToHexString(document.getElementById('rgb_r').value, document.getElementById('rgb_g').value, document.getElementById('rgb_b').value, document.getElementById('rgb_a').value);\r\n        document.getElementById('hex').value = hex;\r\n    }\r\n\r\n    fetchDisplayColor = () => {\r\n        return {\r\n            r: document.getElementById('rgb_r').value,\r\n            g: document.getElementById('rgb_g').value,\r\n            b: document.getElementById('rgb_b').value,\r\n            a: document.getElementById('rgb_a').value\r\n        }\r\n    }\r\n\r\n    refresh = () => {\r\n        this.previewElem = document.getElementById('color_picker_preview');\r\n        this.container = document.getElementById('color_picker_controls_container');\r\n    }\r\n\r\n    update = () => {\r\n        this.updateRgb();\r\n        this.updatePreview();\r\n        this.updateHex();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n\r\n        this.updatePreview();\r\n    }\r\n\r\n    rgbControls = () => {\r\n        return (\r\n            <div\r\n                className='rgb-container-wrapper'\r\n            >\r\n                {['r', 'g', 'b', 'a'].map(v => (\r\n                    <div\r\n                        key={`rgb_${v}_div`}\r\n                        className='rgb-input-container'\r\n                    >\r\n                        <div\r\n                            htmlFor={`rgb_${v}`}\r\n                            className='rgb-input-label'\r\n                        >\r\n                            {v.toUpperCase()}\r\n                        </div>\r\n\r\n                        <input\r\n                            key={`${v}_slider`}\r\n                            name={`rgb_${v}_slider`}\r\n                            id={`rgb_${v}_slider`}\r\n                            type='range'\r\n                            min='0'\r\n                            max='255'\r\n                            className='rgb-input-slider'\r\n                            onChange={\r\n                                (event) => {\r\n                                    document.getElementById(`rgb_${v}`).value = event.target.value;\r\n                                    this.updateColor(this.fetchDisplayColor());\r\n                                    this.updatePreview();\r\n                                    this.updateHex();\r\n                                }\r\n                            }\r\n                            defaultValue={v === 'a' ? 255 : 0} \r\n                        />\r\n\r\n                        <input\r\n                            key={v}\r\n                            name={`rgb_${v}`}\r\n                            id={`rgb_${v}`}\r\n                            type='text'\r\n                            className='rgb-input-field'\r\n                            placeholder='0'\r\n                            onChange={\r\n                                (event) => {\r\n                                    this.updateColor(this.fetchDisplayColor());\r\n                                    this.updatePreview();\r\n                                    this.updateHex();\r\n                                }\r\n                            }\r\n                            onKeyPress={\r\n                                (event) => {\r\n                                    if (!event.key.match(/[0-9]/))\r\n                                        event.preventDefault();\r\n                                }\r\n                            }\r\n                            defaultValue={v === 'a' ? 255 : ''}\r\n                        />\r\n                    </div>\r\n                ))}\r\n\r\n                <input\r\n                    name='hex'\r\n                    id='hex'\r\n                    type='text'\r\n                    className='hex-input-field'\r\n                    placeholder='000000ff'\r\n                    onChange={\r\n                        (event) => {\r\n                            let rgba = colorize.hexToRgb(event.target.value);\r\n\r\n                            for (let k in rgba)\r\n                                document.getElementById(`rgb_${k}`).value = rgba[k];\r\n\r\n                            this.updateColor(this.fetchDisplayColor());\r\n                            this.updatePreview();\r\n                        }\r\n                    }\r\n                    onKeyPress={\r\n                        (event) => {\r\n                            if (!event.key.match(/[0-9A-Fa-f]/) || event.target.value.length >= 8)\r\n                                event.preventDefault();\r\n                        }\r\n                    }\r\n                    defaultValue='000000ff'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='floater-group'\r\n            >\r\n                <div\r\n                    className='container-group'\r\n                    id='color_picker_preview_container'\r\n                >\r\n                    <div\r\n                        className='color-picker-preview'\r\n                        id='color_picker_preview'\r\n                    />\r\n                    <div\r\n                        className='brush-size-preview'\r\n                        id='brush_size_preview'\r\n                    />\r\n                    <input\r\n                        className='brush-size-input'\r\n                        id='brush_size_input'\r\n                        type='text'\r\n                        defaultValue={1}\r\n                        onChange={\r\n                            (event) => {\r\n                                this.state.brush.setSize(Number(event.target.value));\r\n                            }\r\n                        }\r\n                        onKeyPress={\r\n                            (event) => {\r\n                                if (event.key.match(/[0-9]/) === null)\r\n                                    event.preventDefault();\r\n                            }\r\n                        }\r\n                    />\r\n                </div>\r\n\r\n                <Collapsable\r\n                    id='color_picker_container'\r\n                    content={this.rgbControls}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state.brush = props.brush;\r\n        this.state.brush.preview = this;\r\n\r\n        this.updateColor = props.updateColor.bind(this);\r\n        \r\n        this.fetchDisplayColor = this.fetchDisplayColor.bind(this);\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/eye-open.157d1f69.svg\";","export default __webpack_public_path__ + \"static/media/minus.e3517047.svg\";","import React from 'react';\r\n\r\nimport Collapsable from '../../fragments/Collapsable';\r\n\r\nimport eye_open from '../../../assets/eye-open.svg';\r\nimport minus from '../../../assets/minus.svg';\r\n\r\nimport '../styles/side-bar/layers.css';\r\n\r\nexport default class LayerSettings extends React.Component {\r\n    state = {\r\n        layers: null\r\n    }\r\n\r\n    container = null;\r\n\r\n    updateActiveLayer = (layer) => {\r\n        let state = this.state;\r\n\r\n        document.getElementById(`layer_${state.layers.active}`).classList.remove('layer-item-selected');\r\n        document.getElementById(`layer_${layer}`).classList.add('layer-item-selected');\r\n\r\n        state.layers.active = layer;\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    updateLayerViewable = (index) => {\r\n        let state = this.state;\r\n\r\n        state.layers.get(index).toggle();\r\n\r\n        document.getElementById(`layer_${index}_viewable`).classList.toggle('layer-item-viewable');\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    layerMovementButtons = (index, max) => {\r\n        return (\r\n            <div\r\n                className='layer-item-movement-group'\r\n            >\r\n                <div\r\n                    id='layer_item_move_up'\r\n                    className={`layer-item-movement-button${index === 0 ? ' hidden' : ''}`}\r\n                    onClick={\r\n                        () => {\r\n                            let state = this.state;\r\n                            state.layers.move(index, index - 1);\r\n                            this.setState(state);\r\n                            this.updateActiveLayer(index - 1);\r\n                        }\r\n                    }\r\n                >\r\n                    /\\\r\n                </div>\r\n                <div\r\n                    id='layer_item_move_down'\r\n                    className={`layer-item-movement-button${index === max ? ' hidden' : ''}`}\r\n                    onClick={\r\n                        () => {\r\n                            let state = this.state;\r\n                            state.layers.move(index, index + 1);\r\n                            this.setState(state);\r\n                            this.updateActiveLayer(index + 1);\r\n                        }\r\n                    }\r\n                >\r\n                    \\/\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.container = document.getElementById('layers_controls_container');\r\n    }\r\n\r\n    layerControls = () => {\r\n        return (\r\n            <div\r\n                className='layers-container'\r\n            >\r\n                {\r\n                    this.state.layers.cache.map((layer, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className={`layer-item${index === this.state.layers.active ? ' layer-item-selected' : ''}`}\r\n                            id={`layer_${index}`}\r\n                            onClick={\r\n                                (event) => {\r\n                                    // if (event.target.childNodes > 0)\r\n                                        this.updateActiveLayer(index);\r\n                                }\r\n                            }\r\n                        >\r\n                            {this.layerMovementButtons(index, this.state.layers.cache.length - 1)}\r\n                            <input\r\n                                type='text'\r\n                                className='layer-item-title'\r\n                                placeholder={`Layer ${index + 1}`}\r\n                                value={layer.name}\r\n                                onChange={\r\n                                    (event) => {\r\n                                        let state = this.state;\r\n                                        state.layers.get(index).name = event.target.value;\r\n                                        this.setState(state);\r\n                                    }\r\n                                }\r\n                            />\r\n                            <img\r\n                                src={eye_open}\r\n                                alt='Hide'\r\n                                className='layer-item-button'\r\n                                id={`layer_${index}_viewable`}\r\n                                onClick={\r\n                                    () => {\r\n                                        this.updateLayerViewable(index);\r\n                                    }\r\n                                }\r\n                            />\r\n                            <img\r\n                                src={minus}\r\n                                alt='Remove'\r\n                                className='layer-item-button'\r\n                                onClick={\r\n                                    () => {\r\n                                        let state = this.state;\r\n                                        state.layers = state.layers.remove(index);\r\n                                        this.setState(this.state);\r\n                                    }\r\n                                }\r\n                            />\r\n                        </div>\r\n                    ))\r\n                }\r\n                <div\r\n                    className='layer-add-item'\r\n                    onClick={\r\n                        () => {\r\n                            this.state.layers.add();\r\n                            this.setState(this.state);\r\n                        }\r\n                    }\r\n                >\r\n                    Add Layer\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='floater-group'\r\n            >\r\n                <Collapsable\r\n                    id='layer_container'\r\n                    content={this.layerControls}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state.layers = props.layers;\r\n\r\n        this.updateActiveLayer = this.updateActiveLayer.bind(this);\r\n        this.updateLayerViewable = this.updateLayerViewable.bind(this);\r\n        this.layerMovementButtons = this.layerMovementButtons.bind(this);\r\n    }\r\n}","import React from \"react\";\r\n\r\nimport './styles/debug.css';\r\n\r\nimport Floater from \"../fragments/Floater\";\r\nimport ColorSettings from \"./side-bar/ColorSettings\";\r\nimport LayerSettings from \"./side-bar/LayerSettings\";\r\n\r\nexport default class SideBar extends React.Component {\r\n\r\n    state = {\r\n        editor: null,\r\n        brush: null,\r\n        layers: null,\r\n        /**\r\n         * @type {HTMLElement}\r\n        */\r\n        container: null,\r\n        /**\r\n         * @type {DOMRect}\r\n         */\r\n        origin: null,\r\n        moving: null,\r\n    }\r\n\r\n    updateColor;\r\n\r\n    content = () => {\r\n        const list = [\r\n            {\r\n                key: 'Colors',\r\n                value: (\r\n                    <ColorSettings\r\n                        updateColor={this.updateColor}\r\n                        brush={this.state.brush}\r\n                    />\r\n                )\r\n            },\r\n            {\r\n                key: 'Layers',\r\n                value: (\r\n                    <LayerSettings\r\n                        layers={this.state.layers}\r\n                    />\r\n                )\r\n            },\r\n            {\r\n                key: 'Debug',\r\n                value: (\r\n                    <div\r\n                        className='debug'\r\n                        id='debug'\r\n                    />\r\n                )\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <ul\r\n                className='floater-group-list'\r\n            >\r\n                {list.map((item, index) => (\r\n                    <li\r\n                        key={item.key}\r\n                        className='floater-group'\r\n                    >\r\n                        <div\r\n                            className='floater-group-title'\r\n                        >\r\n                            {item.key}\r\n                        </div>\r\n                        {item.value}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let state = this.state;\r\n\r\n        state.container = document.getElementById('side_bar_container');\r\n        state.origin = state.container.parentElement.getBoundingClientRect();\r\n\r\n        state.container.style.left = `${state.origin.width - state.container.getBoundingClientRect().width}px`;\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <Floater\r\n                id='side_bar_container'\r\n                content={this.content}\r\n            />\r\n        )\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state.editor = props.editor;\r\n        this.state.brush = props.editor.brush;\r\n        this.state.layers = props.editor.layers;\r\n        this.updateColor = props.updateColor;\r\n    }\r\n}","import React from 'react';\r\nimport * as PIXI from 'pixi.js';\r\n\r\nimport { editor } from '../../app/texture-editor/editor';\r\n\r\nimport Ribbon from './Ribbon';\r\nimport Brushes from './Brushes';\r\nimport SideBar from './SideBar';\r\n\r\nimport mouse from '../../app/texture-editor/common/Mouse';\r\n\r\nimport './styles/texture-editor.css';\r\n\r\nlet mouseMove_timeout = null;\r\n\r\nexport default class TextureEditor extends React.Component {\r\n    state = {\r\n        app: null,\r\n        /**\r\n         * @type {HTMLElement}\r\n         */\r\n        canvas: null,\r\n        doBoundUpdate: true,\r\n        editor\r\n    }\r\n\r\n    getCanvas = () => {\r\n        let parent = document.getElementById('texture_editor_wrapper');\r\n        let parentBounds = parent.getBoundingClientRect();\r\n\r\n        let state = this.state;\r\n\r\n        state.app = new PIXI.Application({\r\n            width: parentBounds.width,\r\n            height: parentBounds.height,\r\n            backgroundAlpha: 1\r\n        });\r\n\r\n        state.editor = editor.create(state.app, 16);\r\n\r\n        state.app.view.oncontextmenu = (e) => { e.preventDefault(); e.stopPropagation(); }\r\n        state.app.view.id = \"editor\";\r\n\r\n        state.canvas = state.editor.startup();\r\n\r\n        parent.appendChild(state.canvas);\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getCanvas();\r\n        this.state.editor.bounds.update();\r\n\r\n        document.addEventListener('mousemove', (event) => {\r\n            mouse.position.document.x = event.clientX;\r\n            mouse.position.document.y = event.clientY;\r\n\r\n            mouse.position.old = {\r\n                x: Math.floor(mouse.position.x),\r\n                y: Math.floor(mouse.position.y)\r\n            };\r\n\r\n            mouse.position.x = Math.floor(event.clientX - this.state.editor.bounds.value.left);\r\n            mouse.position.y = Math.floor(event.clientY - this.state.editor.bounds.value.top);\r\n\r\n            mouse.moving = true;\r\n\r\n            if (mouseMove_timeout)\r\n                clearTimeout(mouseMove_timeout);\r\n\r\n            mouseMove_timeout = setTimeout(() => {\r\n                mouse.position.old = {\r\n                    x: Math.floor(mouse.position.x),\r\n                    y: Math.floor(mouse.position.y)\r\n                };\r\n                mouse.moving = false;\r\n            }, 30);\r\n        });\r\n\r\n        this.state.canvas.addEventListener('mousedown', (event) => {\r\n            mouse.button.state = true;\r\n            mouse.button.id = event.button;\r\n        });\r\n\r\n        this.state.canvas.addEventListener('mouseup', () => {\r\n            mouse.button.state = false;\r\n            mouse.button.id = null;\r\n        });\r\n\r\n        this.state.canvas.addEventListener('mouseleave', () => mouse.inBounds = false);\r\n\r\n        this.state.canvas.addEventListener('mouseenter', () => mouse.inBounds = true);\r\n\r\n        this.state.canvas.addEventListener('click', () => mouse.clicked = true);\r\n\r\n        window.addEventListener('resize', () => this.state.editor.bounds.update());\r\n    }\r\n\r\n    fetchBrush() {\r\n        return this.state.editor.brush;\r\n    }\r\n\r\n    updateColor(clr) {\r\n        let state = this.state;\r\n\r\n        let color = state.editor.brush.getColor();\r\n\r\n        for (let k in clr)\r\n            color[k] = clr[k] === '' ? 0 : Number(clr[k]);\r\n\r\n        state.editor.brush.setColor(color);\r\n        \r\n        this.setState(state);\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div\r\n                className='editor-container'\r\n            >\r\n                <Ribbon\r\n                    editor={this.state.editor}\r\n                />\r\n                \r\n                <div\r\n                    className='texture-editor-container'\r\n                    id='texture_editor_container'\r\n                >\r\n                    <Brushes\r\n                        editor={this.state.editor}\r\n                    />\r\n\r\n                    <SideBar\r\n                        editor={this.state.editor}\r\n                        updateColor={this.updateColor}\r\n                    />\r\n\r\n                    <div\r\n                        className='texture-editor-wrapper'\r\n                        id='texture_editor_wrapper'\r\n                        onWheel={\r\n                            (event) => this.state.editor.zoom(event.deltaY > 0)\r\n                        }\r\n                    />\r\n                </div>\r\n\r\n                <div\r\n                    className='texture-editor-controls'\r\n                >\r\n                    <label\r\n                        htmlFor='texture-name-input'\r\n                    >\r\n                        File name:\r\n                    </label>\r\n                    <input\r\n                        type='text'\r\n                        name='texture-name-input'\r\n                        id='image_name'\r\n                        defaultValue='texture'\r\n                        onKeyPress={\r\n                            (event) => {\r\n                                if (!event.key.match(/[\\w\\d.()]/))\r\n                                    event.preventDefault();\r\n                            }\r\n                        }\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.updateColor = this.updateColor.bind(this);\r\n        this.fetchBrush = this.fetchBrush.bind(this);\r\n    }\r\n}","// import { ConfigForm } from './components/ConfigGUI';\r\nimport TextureEditor from './components/editor/TextureEditor';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <TextureEditor />\r\n      {/* <ConfigForm /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\n\r\nimport '../styles/nav-bar.css'\r\n\r\nexport default class NavBar extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <div className='nav-bar'>\r\n                {/* <div className='nav-bar-button'>Button 1</div>\r\n                <div className='nav-bar-button'>Button 2</div>\r\n                <div className='nav-bar-button'>Button 3</div>\r\n                <div className='nav-bar-button'>Button 4</div>\r\n                <div className='nav-bar-button'>Button 5</div> */}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport './styles/themes.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport NavBar from './components/NavBar';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <header>\r\n      <NavBar />\r\n    </header>\r\n    <main>\r\n      <App />\r\n    </main>\r\n    <footer>\r\n      <div>Built by ChrisOfNormandy.</div>\r\n      <div>Join <a href='https://discord.gg/EW5JsGJfdt'>Discord</a></div>\r\n    </footer>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}